!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AF_XDP	xsk.c	48;"	d	file:
ALL_CFLAGS	Makefile	/^ALL_CFLAGS := $(INCLUDES)$/;"	m
BPF_CORE_READ	bpf_core_read.h	431;"	d
BPF_CORE_READ	build/usr/include/bpf/bpf_core_read.h	431;"	d
BPF_CORE_READ_BITFIELD	bpf_core_read.h	87;"	d
BPF_CORE_READ_BITFIELD	build/usr/include/bpf/bpf_core_read.h	87;"	d
BPF_CORE_READ_BITFIELD_PROBED	bpf_core_read.h	69;"	d
BPF_CORE_READ_BITFIELD_PROBED	build/usr/include/bpf/bpf_core_read.h	69;"	d
BPF_CORE_READ_INTO	bpf_core_read.h	339;"	d
BPF_CORE_READ_INTO	build/usr/include/bpf/bpf_core_read.h	339;"	d
BPF_CORE_READ_STR_INTO	bpf_core_read.h	375;"	d
BPF_CORE_READ_STR_INTO	build/usr/include/bpf/bpf_core_read.h	375;"	d
BPF_CORE_READ_USER	bpf_core_read.h	447;"	d
BPF_CORE_READ_USER	build/usr/include/bpf/bpf_core_read.h	447;"	d
BPF_CORE_READ_USER_INTO	bpf_core_read.h	349;"	d
BPF_CORE_READ_USER_INTO	build/usr/include/bpf/bpf_core_read.h	349;"	d
BPF_CORE_READ_USER_STR_INTO	bpf_core_read.h	385;"	d
BPF_CORE_READ_USER_STR_INTO	build/usr/include/bpf/bpf_core_read.h	385;"	d
BPF_CORE_SPEC_MAX_LEN	relo_core.h	20;"	d
BPF_ENUMVAL_EXISTS	bpf_core_read.h	/^	BPF_ENUMVAL_EXISTS = 0,		\/* enum value existence in kernel *\/$/;"	e	enum:bpf_enum_value_kind
BPF_ENUMVAL_EXISTS	build/usr/include/bpf/bpf_core_read.h	/^	BPF_ENUMVAL_EXISTS = 0,		\/* enum value existence in kernel *\/$/;"	e	enum:bpf_enum_value_kind
BPF_ENUMVAL_VALUE	bpf_core_read.h	/^	BPF_ENUMVAL_VALUE = 1,		\/* enum value value relocation *\/$/;"	e	enum:bpf_enum_value_kind
BPF_ENUMVAL_VALUE	build/usr/include/bpf/bpf_core_read.h	/^	BPF_ENUMVAL_VALUE = 1,		\/* enum value value relocation *\/$/;"	e	enum:bpf_enum_value_kind
BPF_FIELD_BYTE_OFFSET	bpf_core_read.h	/^	BPF_FIELD_BYTE_OFFSET = 0,	\/* field byte offset *\/$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_BYTE_OFFSET	build/usr/include/bpf/bpf_core_read.h	/^	BPF_FIELD_BYTE_OFFSET = 0,	\/* field byte offset *\/$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_BYTE_SIZE	bpf_core_read.h	/^	BPF_FIELD_BYTE_SIZE = 1,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_BYTE_SIZE	build/usr/include/bpf/bpf_core_read.h	/^	BPF_FIELD_BYTE_SIZE = 1,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_EXISTS	bpf_core_read.h	/^	BPF_FIELD_EXISTS = 2,		\/* field existence in target kernel *\/$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_EXISTS	build/usr/include/bpf/bpf_core_read.h	/^	BPF_FIELD_EXISTS = 2,		\/* field existence in target kernel *\/$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_LSHIFT_U64	bpf_core_read.h	/^	BPF_FIELD_LSHIFT_U64 = 4,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_LSHIFT_U64	build/usr/include/bpf/bpf_core_read.h	/^	BPF_FIELD_LSHIFT_U64 = 4,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_RSHIFT_U64	bpf_core_read.h	/^	BPF_FIELD_RSHIFT_U64 = 5,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_RSHIFT_U64	build/usr/include/bpf/bpf_core_read.h	/^	BPF_FIELD_RSHIFT_U64 = 5,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_SIGNED	bpf_core_read.h	/^	BPF_FIELD_SIGNED = 3,$/;"	e	enum:bpf_field_info_kind
BPF_FIELD_SIGNED	build/usr/include/bpf/bpf_core_read.h	/^	BPF_FIELD_SIGNED = 3,$/;"	e	enum:bpf_field_info_kind
BPF_FS_MAGIC	libbpf.c	60;"	d	file:
BPF_FUNC_get_attach_cookie___usdt	build/usr/include/bpf/usdt.bpf.h	/^	BPF_FUNC_get_attach_cookie___usdt = 0xBAD, \/* value doesn't matter *\/$/;"	e	enum:bpf_func_id___usdt
BPF_FUNC_get_attach_cookie___usdt	usdt.bpf.h	/^	BPF_FUNC_get_attach_cookie___usdt = 0xBAD, \/* value doesn't matter *\/$/;"	e	enum:bpf_func_id___usdt
BPF_INSN_SZ	libbpf.c	63;"	d	file:
BPF_KPROBE	bpf_tracing.h	459;"	d
BPF_KPROBE	build/usr/include/bpf/bpf_tracing.h	459;"	d
BPF_KPROBE_READ_RET_IP	bpf_tracing.h	294;"	d
BPF_KPROBE_READ_RET_IP	bpf_tracing.h	299;"	d
BPF_KPROBE_READ_RET_IP	bpf_tracing.h	304;"	d
BPF_KPROBE_READ_RET_IP	bpf_tracing.h	355;"	d
BPF_KPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	294;"	d
BPF_KPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	299;"	d
BPF_KPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	304;"	d
BPF_KPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	355;"	d
BPF_KPROBE_SYSCALL	bpf_tracing.h	516;"	d
BPF_KPROBE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	516;"	d
BPF_KRETPROBE	bpf_tracing.h	483;"	d
BPF_KRETPROBE	build/usr/include/bpf/bpf_tracing.h	483;"	d
BPF_KRETPROBE_READ_RET_IP	bpf_tracing.h	295;"	d
BPF_KRETPROBE_READ_RET_IP	bpf_tracing.h	300;"	d
BPF_KRETPROBE_READ_RET_IP	bpf_tracing.h	306;"	d
BPF_KRETPROBE_READ_RET_IP	bpf_tracing.h	356;"	d
BPF_KRETPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	295;"	d
BPF_KRETPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	300;"	d
BPF_KRETPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	306;"	d
BPF_KRETPROBE_READ_RET_IP	build/usr/include/bpf/bpf_tracing.h	356;"	d
BPF_LOG_BUF_SIZE	bpf.h	201;"	d
BPF_LOG_BUF_SIZE	build/usr/include/bpf/bpf.h	201;"	d
BPF_PRINTK_FMT_MOD	bpf_helpers.h	246;"	d
BPF_PRINTK_FMT_MOD	bpf_helpers.h	248;"	d
BPF_PRINTK_FMT_MOD	build/usr/include/bpf/bpf_helpers.h	246;"	d
BPF_PRINTK_FMT_MOD	build/usr/include/bpf/bpf_helpers.h	248;"	d
BPF_PROBE_READ	bpf_core_read.h	454;"	d
BPF_PROBE_READ	build/usr/include/bpf/bpf_core_read.h	454;"	d
BPF_PROBE_READ_INTO	bpf_core_read.h	355;"	d
BPF_PROBE_READ_INTO	build/usr/include/bpf/bpf_core_read.h	355;"	d
BPF_PROBE_READ_STR_INTO	bpf_core_read.h	391;"	d
BPF_PROBE_READ_STR_INTO	build/usr/include/bpf/bpf_core_read.h	391;"	d
BPF_PROBE_READ_USER	bpf_core_read.h	466;"	d
BPF_PROBE_READ_USER	build/usr/include/bpf/bpf_core_read.h	466;"	d
BPF_PROBE_READ_USER_INTO	bpf_core_read.h	365;"	d
BPF_PROBE_READ_USER_INTO	build/usr/include/bpf/bpf_core_read.h	365;"	d
BPF_PROBE_READ_USER_STR_INTO	bpf_core_read.h	402;"	d
BPF_PROBE_READ_USER_STR_INTO	build/usr/include/bpf/bpf_core_read.h	402;"	d
BPF_PROG	bpf_tracing.h	425;"	d
BPF_PROG	build/usr/include/bpf/bpf_tracing.h	425;"	d
BPF_PROG_INFO_FIRST_ARRAY	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_FIRST_ARRAY = 0,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_FIRST_ARRAY	libbpf.h	/^	BPF_PROG_INFO_FIRST_ARRAY = 0,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_FUNC_INFO	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_FUNC_INFO,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_FUNC_INFO	libbpf.h	/^	BPF_PROG_INFO_FUNC_INFO,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_FUNC_LENS	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_JITED_FUNC_LENS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_FUNC_LENS	libbpf.h	/^	BPF_PROG_INFO_JITED_FUNC_LENS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_INSNS	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_JITED_INSNS = 0,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_INSNS	libbpf.h	/^	BPF_PROG_INFO_JITED_INSNS = 0,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_KSYMS	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_JITED_KSYMS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_KSYMS	libbpf.h	/^	BPF_PROG_INFO_JITED_KSYMS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_LINE_INFO	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_JITED_LINE_INFO,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_JITED_LINE_INFO	libbpf.h	/^	BPF_PROG_INFO_JITED_LINE_INFO,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_LAST_ARRAY	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_LAST_ARRAY,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_LAST_ARRAY	libbpf.h	/^	BPF_PROG_INFO_LAST_ARRAY,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_LINE_INFO	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_LINE_INFO,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_LINE_INFO	libbpf.h	/^	BPF_PROG_INFO_LINE_INFO,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_MAP_IDS	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_MAP_IDS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_MAP_IDS	libbpf.h	/^	BPF_PROG_INFO_MAP_IDS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_PROG_TAGS	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_PROG_TAGS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_PROG_TAGS	libbpf.h	/^	BPF_PROG_INFO_PROG_TAGS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_XLATED_INSNS	build/usr/include/bpf/libbpf.h	/^	BPF_PROG_INFO_XLATED_INSNS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_INFO_XLATED_INSNS	libbpf.h	/^	BPF_PROG_INFO_XLATED_INSNS,$/;"	e	enum:bpf_prog_info_array
BPF_PROG_TYPE_FNS	libbpf.c	8940;"	d	file:
BPF_SEQ_PRINTF	bpf_helpers.h	213;"	d
BPF_SEQ_PRINTF	build/usr/include/bpf/bpf_helpers.h	213;"	d
BPF_SKEL_KERNEL	build/usr/include/bpf/skel_internal.h	/^	BPF_SKEL_KERNEL = (1ULL << 0),$/;"	e	enum:__anon36
BPF_SKEL_KERNEL	skel_internal.h	/^	BPF_SKEL_KERNEL = (1ULL << 0),$/;"	e	enum:__anon38
BPF_SNPRINTF	bpf_helpers.h	231;"	d
BPF_SNPRINTF	build/usr/include/bpf/bpf_helpers.h	231;"	d
BPF_TC_CUSTOM	build/usr/include/bpf/libbpf.h	/^	BPF_TC_CUSTOM  = 1 << 2,$/;"	e	enum:bpf_tc_attach_point
BPF_TC_CUSTOM	libbpf.h	/^	BPF_TC_CUSTOM  = 1 << 2,$/;"	e	enum:bpf_tc_attach_point
BPF_TC_EGRESS	build/usr/include/bpf/libbpf.h	/^	BPF_TC_EGRESS  = 1 << 1,$/;"	e	enum:bpf_tc_attach_point
BPF_TC_EGRESS	libbpf.h	/^	BPF_TC_EGRESS  = 1 << 1,$/;"	e	enum:bpf_tc_attach_point
BPF_TC_F_REPLACE	build/usr/include/bpf/libbpf.h	/^	BPF_TC_F_REPLACE = 1 << 0,$/;"	e	enum:bpf_tc_flags
BPF_TC_F_REPLACE	libbpf.h	/^	BPF_TC_F_REPLACE = 1 << 0,$/;"	e	enum:bpf_tc_flags
BPF_TC_INGRESS	build/usr/include/bpf/libbpf.h	/^	BPF_TC_INGRESS = 1 << 0,$/;"	e	enum:bpf_tc_attach_point
BPF_TC_INGRESS	libbpf.h	/^	BPF_TC_INGRESS = 1 << 0,$/;"	e	enum:bpf_tc_attach_point
BPF_TC_PARENT	build/usr/include/bpf/libbpf.h	1206;"	d
BPF_TC_PARENT	libbpf.h	1206;"	d
BPF_TYPE_EXISTS	bpf_core_read.h	/^	BPF_TYPE_EXISTS = 0,		\/* type existence in target kernel *\/$/;"	e	enum:bpf_type_info_kind
BPF_TYPE_EXISTS	build/usr/include/bpf/bpf_core_read.h	/^	BPF_TYPE_EXISTS = 0,		\/* type existence in target kernel *\/$/;"	e	enum:bpf_type_info_kind
BPF_TYPE_ID_LOCAL	bpf_core_read.h	/^	BPF_TYPE_ID_LOCAL = 0,		\/* BTF type ID in local program *\/$/;"	e	enum:bpf_type_id_kind
BPF_TYPE_ID_LOCAL	build/usr/include/bpf/bpf_core_read.h	/^	BPF_TYPE_ID_LOCAL = 0,		\/* BTF type ID in local program *\/$/;"	e	enum:bpf_type_id_kind
BPF_TYPE_ID_TARGET	bpf_core_read.h	/^	BPF_TYPE_ID_TARGET = 1,		\/* BTF type ID in target kernel *\/$/;"	e	enum:bpf_type_id_kind
BPF_TYPE_ID_TARGET	build/usr/include/bpf/bpf_core_read.h	/^	BPF_TYPE_ID_TARGET = 1,		\/* BTF type ID in target kernel *\/$/;"	e	enum:bpf_type_id_kind
BPF_TYPE_SIZE	bpf_core_read.h	/^	BPF_TYPE_SIZE = 1,		\/* type size in target kernel *\/$/;"	e	enum:bpf_type_info_kind
BPF_TYPE_SIZE	build/usr/include/bpf/bpf_core_read.h	/^	BPF_TYPE_SIZE = 1,		\/* type size in target kernel *\/$/;"	e	enum:bpf_type_info_kind
BPF_USDT	build/usr/include/bpf/usdt.bpf.h	245;"	d
BPF_USDT	usdt.bpf.h	245;"	d
BPF_USDT_ARG_CONST	build/usr/include/bpf/usdt.bpf.h	/^	BPF_USDT_ARG_CONST,$/;"	e	enum:__bpf_usdt_arg_type
BPF_USDT_ARG_CONST	usdt.bpf.h	/^	BPF_USDT_ARG_CONST,$/;"	e	enum:__bpf_usdt_arg_type
BPF_USDT_ARG_REG	build/usr/include/bpf/usdt.bpf.h	/^	BPF_USDT_ARG_REG,$/;"	e	enum:__bpf_usdt_arg_type
BPF_USDT_ARG_REG	usdt.bpf.h	/^	BPF_USDT_ARG_REG,$/;"	e	enum:__bpf_usdt_arg_type
BPF_USDT_ARG_REG_DEREF	build/usr/include/bpf/usdt.bpf.h	/^	BPF_USDT_ARG_REG_DEREF,$/;"	e	enum:__bpf_usdt_arg_type
BPF_USDT_ARG_REG_DEREF	usdt.bpf.h	/^	BPF_USDT_ARG_REG_DEREF,$/;"	e	enum:__bpf_usdt_arg_type
BPF_USDT_HAS_BPF_COOKIE	build/usr/include/bpf/usdt.bpf.h	38;"	d
BPF_USDT_HAS_BPF_COOKIE	usdt.bpf.h	38;"	d
BPF_USDT_MAX_ARG_CNT	build/usr/include/bpf/usdt.bpf.h	65;"	d
BPF_USDT_MAX_ARG_CNT	usdt.bpf.h	65;"	d
BPF_USDT_MAX_IP_CNT	build/usr/include/bpf/usdt.bpf.h	31;"	d
BPF_USDT_MAX_IP_CNT	usdt.bpf.h	31;"	d
BPF_USDT_MAX_SPEC_CNT	build/usr/include/bpf/usdt.bpf.h	22;"	d
BPF_USDT_MAX_SPEC_CNT	usdt.bpf.h	22;"	d
BSS_SEC	libbpf.c	345;"	d	file:
BTF_BIG_ENDIAN	btf.h	/^	BTF_BIG_ENDIAN = 1,$/;"	e	enum:btf_endianness
BTF_BIG_ENDIAN	build/usr/include/bpf/btf.h	/^	BTF_BIG_ENDIAN = 1,$/;"	e	enum:btf_endianness
BTF_DATA_INDENT_STR_LEN	btf_dump.c	59;"	d	file:
BTF_ELF_SEC	btf.h	19;"	d
BTF_ELF_SEC	build/usr/include/bpf/btf.h	19;"	d
BTF_EXTERN_SEC	linker.c	24;"	d	file:
BTF_EXT_ELF_SEC	btf.h	20;"	d
BTF_EXT_ELF_SEC	build/usr/include/bpf/btf.h	20;"	d
BTF_FWD_ENUM	btf.h	/^	BTF_FWD_ENUM = 2,$/;"	e	enum:btf_fwd_kind
BTF_FWD_ENUM	build/usr/include/bpf/btf.h	/^	BTF_FWD_ENUM = 2,$/;"	e	enum:btf_fwd_kind
BTF_FWD_STRUCT	btf.h	/^	BTF_FWD_STRUCT = 0,$/;"	e	enum:btf_fwd_kind
BTF_FWD_STRUCT	build/usr/include/bpf/btf.h	/^	BTF_FWD_STRUCT = 0,$/;"	e	enum:btf_fwd_kind
BTF_FWD_UNION	btf.h	/^	BTF_FWD_UNION = 1,$/;"	e	enum:btf_fwd_kind
BTF_FWD_UNION	build/usr/include/bpf/btf.h	/^	BTF_FWD_UNION = 1,$/;"	e	enum:btf_fwd_kind
BTF_INFO_ENC	libbpf_internal.h	61;"	d
BTF_INT_ENC	libbpf_internal.h	64;"	d
BTF_IN_PROGRESS_ID	btf.c	3156;"	d	file:
BTF_ITER_PREFIX	libbpf.c	9491;"	d	file:
BTF_KIND_DATASEC	btf.h	391;"	d
BTF_KIND_DATASEC	build/usr/include/bpf/btf.h	391;"	d
BTF_KIND_DECL_TAG	btf.h	397;"	d
BTF_KIND_DECL_TAG	build/usr/include/bpf/btf.h	397;"	d
BTF_KIND_ENUM64	btf.h	399;"	d
BTF_KIND_ENUM64	build/usr/include/bpf/btf.h	399;"	d
BTF_KIND_FLOAT	btf.h	394;"	d
BTF_KIND_FLOAT	build/usr/include/bpf/btf.h	394;"	d
BTF_KIND_FUNC	btf.h	386;"	d
BTF_KIND_FUNC	build/usr/include/bpf/btf.h	386;"	d
BTF_KIND_FUNC_PROTO	btf.h	387;"	d
BTF_KIND_FUNC_PROTO	build/usr/include/bpf/btf.h	387;"	d
BTF_KIND_TYPE_TAG	btf.h	398;"	d
BTF_KIND_TYPE_TAG	build/usr/include/bpf/btf.h	398;"	d
BTF_KIND_VAR	btf.h	390;"	d
BTF_KIND_VAR	build/usr/include/bpf/btf.h	390;"	d
BTF_LITTLE_ENDIAN	btf.h	/^	BTF_LITTLE_ENDIAN = 0,$/;"	e	enum:btf_endianness
BTF_LITTLE_ENDIAN	build/usr/include/bpf/btf.h	/^	BTF_LITTLE_ENDIAN = 0,$/;"	e	enum:btf_endianness
BTF_LSM_PREFIX	libbpf.c	9490;"	d	file:
BTF_MAX_NAME_SIZE	libbpf.c	9492;"	d	file:
BTF_MAX_NR_TYPES	btf.c	26;"	d	file:
BTF_MAX_STR_OFFSET	btf.c	27;"	d	file:
BTF_MEMBER_ENC	libbpf_internal.h	69;"	d
BTF_PARAM_ENC	libbpf_internal.h	70;"	d
BTF_TRACE_PREFIX	libbpf.c	9489;"	d	file:
BTF_TYPE_DECL_TAG_ENC	libbpf_internal.h	74;"	d
BTF_TYPE_ENC	libbpf_internal.h	63;"	d
BTF_TYPE_FLOAT_ENC	libbpf_internal.h	72;"	d
BTF_TYPE_INT_ENC	libbpf_internal.h	66;"	d
BTF_TYPE_TYPE_TAG_ENC	libbpf_internal.h	76;"	d
BTF_UNPROCESSED_ID	btf.c	3155;"	d	file:
BTF_VAR_SECINFO_ENC	libbpf_internal.h	71;"	d
CFLAGS	Makefile	/^CFLAGS ?= -g -O2 -Werror -Wall -std=gnu89$/;"	m
COMPAT_VERSION	libbpf_internal.h	127;"	d
COMPAT_VERSION	libbpf_internal.h	132;"	d
COMPAT_VERSION	libbpf_internal.h	139;"	d
DATA_SEC	libbpf.c	344;"	d	file:
DECLARE_LIBBPF_OPTS	build/usr/include/bpf/libbpf_legacy.h	91;"	d
DECLARE_LIBBPF_OPTS	libbpf_legacy.h	91;"	d
DEFAULT_VERSION	libbpf_internal.h	125;"	d
DEFAULT_VERSION	libbpf_internal.h	134;"	d
DEFAULT_VERSION	libbpf_internal.h	140;"	d
DEFINE_XSK_RING	build/usr/include/bpf/xsk.h	98;"	d
DEFINE_XSK_RING	xsk.h	98;"	d
DESTDIR	Makefile	/^DESTDIR ?=$/;"	m
ELF64_ST_VISIBILITY	libbpf_internal.h	58;"	d
ELF_C_READ_MMAP	libbpf_internal.h	53;"	d
EMITTED	btf_dump.c	/^	EMITTED,$/;"	e	enum:btf_dump_type_emit_state	file:
EMITTING	btf_dump.c	/^	EMITTING,$/;"	e	enum:btf_dump_type_emit_state	file:
EM_BPF	libbpf_internal.h	31;"	d
ERRCODE_OFFSET	libbpf_errno.c	21;"	d	file:
ERRNO_OFFSET	libbpf_errno.c	20;"	d	file:
EXT_KCFG	libbpf.c	/^	EXT_KCFG,$/;"	e	enum:extern_type	file:
EXT_KSYM	libbpf.c	/^	EXT_KSYM,$/;"	e	enum:extern_type	file:
EXT_UNKNOWN	libbpf.c	/^	EXT_UNKNOWN,$/;"	e	enum:extern_type	file:
FEAT_ARRAY_MMAP	libbpf_internal.h	/^	FEAT_ARRAY_MMAP,$/;"	e	enum:kern_feature_id
FEAT_BPF_COOKIE	libbpf_internal.h	/^	FEAT_BPF_COOKIE,$/;"	e	enum:kern_feature_id
FEAT_BTF	libbpf_internal.h	/^	FEAT_BTF,$/;"	e	enum:kern_feature_id
FEAT_BTF_DATASEC	libbpf_internal.h	/^	FEAT_BTF_DATASEC,$/;"	e	enum:kern_feature_id
FEAT_BTF_DECL_TAG	libbpf_internal.h	/^	FEAT_BTF_DECL_TAG,$/;"	e	enum:kern_feature_id
FEAT_BTF_ENUM64	libbpf_internal.h	/^	FEAT_BTF_ENUM64,$/;"	e	enum:kern_feature_id
FEAT_BTF_FLOAT	libbpf_internal.h	/^	FEAT_BTF_FLOAT,$/;"	e	enum:kern_feature_id
FEAT_BTF_FUNC	libbpf_internal.h	/^	FEAT_BTF_FUNC,$/;"	e	enum:kern_feature_id
FEAT_BTF_GLOBAL_FUNC	libbpf_internal.h	/^	FEAT_BTF_GLOBAL_FUNC,$/;"	e	enum:kern_feature_id
FEAT_BTF_TYPE_TAG	libbpf_internal.h	/^	FEAT_BTF_TYPE_TAG,$/;"	e	enum:kern_feature_id
FEAT_EXP_ATTACH_TYPE	libbpf_internal.h	/^	FEAT_EXP_ATTACH_TYPE,$/;"	e	enum:kern_feature_id
FEAT_GLOBAL_DATA	libbpf_internal.h	/^	FEAT_GLOBAL_DATA,$/;"	e	enum:kern_feature_id
FEAT_MEMCG_ACCOUNT	libbpf_internal.h	/^	FEAT_MEMCG_ACCOUNT,$/;"	e	enum:kern_feature_id
FEAT_MISSING	libbpf.c	/^	FEAT_MISSING = 2,$/;"	e	enum:kern_feature_result	file:
FEAT_MODULE_BTF	libbpf_internal.h	/^	FEAT_MODULE_BTF,$/;"	e	enum:kern_feature_id
FEAT_PERF_LINK	libbpf_internal.h	/^	FEAT_PERF_LINK,$/;"	e	enum:kern_feature_id
FEAT_PROBE_READ_KERN	libbpf_internal.h	/^	FEAT_PROBE_READ_KERN,$/;"	e	enum:kern_feature_id
FEAT_PROG_BIND_MAP	libbpf_internal.h	/^	FEAT_PROG_BIND_MAP,$/;"	e	enum:kern_feature_id
FEAT_PROG_NAME	libbpf_internal.h	/^	FEAT_PROG_NAME,$/;"	e	enum:kern_feature_id
FEAT_SUPPORTED	libbpf.c	/^	FEAT_SUPPORTED = 1,$/;"	e	enum:kern_feature_result	file:
FEAT_UNKNOWN	libbpf.c	/^	FEAT_UNKNOWN = 0,$/;"	e	enum:kern_feature_result	file:
HASHMAP_ADD	hashmap.h	/^	HASHMAP_ADD,$/;"	e	enum:hashmap_insert_strategy
HASHMAP_APPEND	hashmap.h	/^	HASHMAP_APPEND,$/;"	e	enum:hashmap_insert_strategy
HASHMAP_INIT	hashmap.h	63;"	d
HASHMAP_MIN_CAP_BITS	hashmap.c	22;"	d	file:
HASHMAP_SET	hashmap.h	/^	HASHMAP_SET,$/;"	e	enum:hashmap_insert_strategy
HASHMAP_UPDATE	hashmap.h	/^	HASHMAP_UPDATE,$/;"	e	enum:hashmap_insert_strategy
HEADERS	Makefile	/^HEADERS := bpf.h libbpf.h btf.h libbpf_common.h libbpf_legacy.h xsk.h \\$/;"	m
INCLUDEDIR	Makefile	/^INCLUDEDIR ?= $(PREFIX)\/include$/;"	m
INCLUDES	Makefile	/^INCLUDES := -I. -I$(TOPDIR)\/include -I$(TOPDIR)\/include\/uapi$/;"	m
INIT_NS	xsk.c	59;"	d	file:
INSTALL	Makefile	/^INSTALL = install$/;"	m
KCFG_BOOL	libbpf.c	/^	KCFG_BOOL,$/;"	e	enum:kcfg_type	file:
KCFG_CHAR	libbpf.c	/^	KCFG_CHAR,$/;"	e	enum:kcfg_type	file:
KCFG_CHAR_ARR	libbpf.c	/^	KCFG_CHAR_ARR,$/;"	e	enum:kcfg_type	file:
KCFG_INT	libbpf.c	/^	KCFG_INT,$/;"	e	enum:kcfg_type	file:
KCFG_TRISTATE	libbpf.c	/^	KCFG_TRISTATE,$/;"	e	enum:kcfg_type	file:
KCFG_UNKNOWN	libbpf.c	/^	KCFG_UNKNOWN,$/;"	e	enum:kcfg_type	file:
KCONFIG_SEC	libbpf.c	347;"	d	file:
KERNEL_VERSION	bpf_helpers.h	61;"	d
KERNEL_VERSION	build/usr/include/bpf/bpf_helpers.h	61;"	d
KSYMS_SEC	libbpf.c	348;"	d	file:
LIBBPF_API	build/usr/include/bpf/libbpf_common.h	16;"	d
LIBBPF_API	libbpf_common.h	16;"	d
LIBBPF_DEBUG	build/usr/include/bpf/libbpf.h	/^        LIBBPF_DEBUG,$/;"	e	enum:libbpf_print_level
LIBBPF_DEBUG	libbpf.h	/^        LIBBPF_DEBUG,$/;"	e	enum:libbpf_print_level
LIBBPF_DEBUG	relo_core.c	/^	LIBBPF_DEBUG,$/;"	e	enum:libbpf_print_level	file:
LIBBPF_DEPRECATED	build/usr/include/bpf/libbpf_common.h	19;"	d
LIBBPF_DEPRECATED	libbpf_common.h	19;"	d
LIBBPF_DEPRECATED_SINCE	build/usr/include/bpf/libbpf_common.h	22;"	d
LIBBPF_DEPRECATED_SINCE	libbpf_common.h	22;"	d
LIBBPF_ERRNO__ENDIAN	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__ENDIAN,	\/* Endian mismatch *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__ENDIAN	libbpf.h	/^	LIBBPF_ERRNO__ENDIAN,	\/* Endian mismatch *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__FORMAT	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__FORMAT,	\/* BPF object format invalid *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__FORMAT	libbpf.h	/^	LIBBPF_ERRNO__FORMAT,	\/* BPF object format invalid *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__INTERNAL	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__INTERNAL,	\/* Internal error in libbpf *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__INTERNAL	libbpf.h	/^	LIBBPF_ERRNO__INTERNAL,	\/* Internal error in libbpf *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__INVSEQ	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__INVSEQ,	\/* Invalid netlink sequence *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__INVSEQ	libbpf.h	/^	LIBBPF_ERRNO__INVSEQ,	\/* Invalid netlink sequence *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__KVER	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__KVER,	\/* Incorrect kernel version *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__KVER	libbpf.h	/^	LIBBPF_ERRNO__KVER,	\/* Incorrect kernel version *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__KVERSION	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__KVERSION,	\/* Incorrect or no 'version' section *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__KVERSION	libbpf.h	/^	LIBBPF_ERRNO__KVERSION,	\/* Incorrect or no 'version' section *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__LIBELF	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__LIBELF = __LIBBPF_ERRNO__START,$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__LIBELF	libbpf.h	/^	LIBBPF_ERRNO__LIBELF = __LIBBPF_ERRNO__START,$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__LOAD	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__LOAD,	\/* Load program failure for unknown reason *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__LOAD	libbpf.h	/^	LIBBPF_ERRNO__LOAD,	\/* Load program failure for unknown reason *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__NLPARSE	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__NLPARSE,	\/* netlink parsing error *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__NLPARSE	libbpf.h	/^	LIBBPF_ERRNO__NLPARSE,	\/* netlink parsing error *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__PROG2BIG	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__PROG2BIG,	\/* Program too big *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__PROG2BIG	libbpf.h	/^	LIBBPF_ERRNO__PROG2BIG,	\/* Program too big *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__PROGTYPE	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__PROGTYPE,	\/* Kernel doesn't support this program type *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__PROGTYPE	libbpf.h	/^	LIBBPF_ERRNO__PROGTYPE,	\/* Kernel doesn't support this program type *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__RELOC	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__RELOC,	\/* Relocation failed *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__RELOC	libbpf.h	/^	LIBBPF_ERRNO__RELOC,	\/* Relocation failed *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__VERIFY	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__VERIFY,	\/* Kernel verifier blocks program loading *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__VERIFY	libbpf.h	/^	LIBBPF_ERRNO__VERIFY,	\/* Kernel verifier blocks program loading *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__WRNGPID	build/usr/include/bpf/libbpf.h	/^	LIBBPF_ERRNO__WRNGPID,	\/* Wrong pid in netlink message *\/$/;"	e	enum:libbpf_errno
LIBBPF_ERRNO__WRNGPID	libbpf.h	/^	LIBBPF_ERRNO__WRNGPID,	\/* Wrong pid in netlink message *\/$/;"	e	enum:libbpf_errno
LIBBPF_INFO	build/usr/include/bpf/libbpf.h	/^        LIBBPF_INFO,$/;"	e	enum:libbpf_print_level
LIBBPF_INFO	libbpf.h	/^        LIBBPF_INFO,$/;"	e	enum:libbpf_print_level
LIBBPF_INFO	relo_core.c	/^	LIBBPF_INFO,$/;"	e	enum:libbpf_print_level	file:
LIBBPF_MAJMIN_VERSION	Makefile	/^LIBBPF_MAJMIN_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).0$/;"	m
LIBBPF_MAJOR_VERSION	Makefile	/^LIBBPF_MAJOR_VERSION := 0$/;"	m
LIBBPF_MAJOR_VERSION	build/usr/include/bpf/libbpf_version.h	6;"	d
LIBBPF_MAJOR_VERSION	libbpf_version.h	6;"	d
LIBBPF_MAP_BSS	libbpf.c	/^	LIBBPF_MAP_BSS,$/;"	e	enum:libbpf_map_type	file:
LIBBPF_MAP_DATA	libbpf.c	/^	LIBBPF_MAP_DATA,$/;"	e	enum:libbpf_map_type	file:
LIBBPF_MAP_KCONFIG	libbpf.c	/^	LIBBPF_MAP_KCONFIG,$/;"	e	enum:libbpf_map_type	file:
LIBBPF_MAP_RODATA	libbpf.c	/^	LIBBPF_MAP_RODATA,$/;"	e	enum:libbpf_map_type	file:
LIBBPF_MAP_UNSPEC	libbpf.c	/^	LIBBPF_MAP_UNSPEC,$/;"	e	enum:libbpf_map_type	file:
LIBBPF_MAP_VERSION	Makefile	/^LIBBPF_MAP_VERSION := $(shell grep -oE '^LIBBPF_([0-9.]+)' libbpf.map | sort -rV | head -n1 | cut -d'_' -f2)$/;"	m
LIBBPF_MINOR_VERSION	Makefile	/^LIBBPF_MINOR_VERSION := 8$/;"	m
LIBBPF_MINOR_VERSION	build/usr/include/bpf/libbpf_version.h	7;"	d
LIBBPF_MINOR_VERSION	libbpf_version.h	7;"	d
LIBBPF_NLA_FLAG	nlattr.h	/^	LIBBPF_NLA_FLAG,	\/**< Flag *\/$/;"	e	enum:__anon18
LIBBPF_NLA_MSECS	nlattr.h	/^	LIBBPF_NLA_MSECS,	\/**< Micro seconds (64bit) *\/$/;"	e	enum:__anon18
LIBBPF_NLA_NESTED	nlattr.h	/^	LIBBPF_NLA_NESTED,	\/**< Nested attributes *\/$/;"	e	enum:__anon18
LIBBPF_NLA_STRING	nlattr.h	/^	LIBBPF_NLA_STRING,	\/**< NUL terminated character string *\/$/;"	e	enum:__anon18
LIBBPF_NLA_TYPE_MAX	nlattr.h	37;"	d
LIBBPF_NLA_U16	nlattr.h	/^	LIBBPF_NLA_U16,		\/**< 16 bit integer *\/$/;"	e	enum:__anon18
LIBBPF_NLA_U32	nlattr.h	/^	LIBBPF_NLA_U32,		\/**< 32 bit integer *\/$/;"	e	enum:__anon18
LIBBPF_NLA_U64	nlattr.h	/^	LIBBPF_NLA_U64,		\/**< 64 bit integer *\/$/;"	e	enum:__anon18
LIBBPF_NLA_U8	nlattr.h	/^	LIBBPF_NLA_U8,		\/**< 8 bit integer *\/$/;"	e	enum:__anon18
LIBBPF_NLA_UNSPEC	nlattr.h	/^	LIBBPF_NLA_UNSPEC,	\/**< Unspecified type, binary data chunk *\/$/;"	e	enum:__anon18
LIBBPF_OPTS	build/usr/include/bpf/libbpf_common.h	74;"	d
LIBBPF_OPTS	libbpf_common.h	74;"	d
LIBBPF_PATCH_VERSION	Makefile	/^LIBBPF_PATCH_VERSION := 1$/;"	m
LIBBPF_PERF_EVENT_CONT	build/usr/include/bpf/libbpf.h	/^	LIBBPF_PERF_EVENT_CONT	= -2,$/;"	e	enum:bpf_perf_event_ret
LIBBPF_PERF_EVENT_CONT	libbpf.h	/^	LIBBPF_PERF_EVENT_CONT	= -2,$/;"	e	enum:bpf_perf_event_ret
LIBBPF_PERF_EVENT_DONE	build/usr/include/bpf/libbpf.h	/^	LIBBPF_PERF_EVENT_DONE	= 0,$/;"	e	enum:bpf_perf_event_ret
LIBBPF_PERF_EVENT_DONE	libbpf.h	/^	LIBBPF_PERF_EVENT_DONE	= 0,$/;"	e	enum:bpf_perf_event_ret
LIBBPF_PERF_EVENT_ERROR	build/usr/include/bpf/libbpf.h	/^	LIBBPF_PERF_EVENT_ERROR	= -1,$/;"	e	enum:bpf_perf_event_ret
LIBBPF_PERF_EVENT_ERROR	libbpf.h	/^	LIBBPF_PERF_EVENT_ERROR	= -1,$/;"	e	enum:bpf_perf_event_ret
LIBBPF_PIN_BY_NAME	bpf_helpers.h	/^	LIBBPF_PIN_BY_NAME,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_BY_NAME	build/usr/include/bpf/bpf_helpers.h	/^	LIBBPF_PIN_BY_NAME,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_BY_NAME	build/usr/include/bpf/libbpf.h	/^	LIBBPF_PIN_BY_NAME,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_BY_NAME	libbpf.h	/^	LIBBPF_PIN_BY_NAME,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_NONE	bpf_helpers.h	/^	LIBBPF_PIN_NONE,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_NONE	build/usr/include/bpf/bpf_helpers.h	/^	LIBBPF_PIN_NONE,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_NONE	build/usr/include/bpf/libbpf.h	/^	LIBBPF_PIN_NONE,$/;"	e	enum:libbpf_pin_type
LIBBPF_PIN_NONE	libbpf.h	/^	LIBBPF_PIN_NONE,$/;"	e	enum:libbpf_pin_type
LIBBPF_STRICT_ALL	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_ALL = 0xffffffff,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_ALL	libbpf_legacy.h	/^	LIBBPF_STRICT_ALL = 0xffffffff,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_AUTO_RLIMIT_MEMLOCK	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_AUTO_RLIMIT_MEMLOCK = 0x10,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_AUTO_RLIMIT_MEMLOCK	libbpf_legacy.h	/^	LIBBPF_STRICT_AUTO_RLIMIT_MEMLOCK = 0x10,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_CLEAN_PTRS	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_CLEAN_PTRS = 0x01,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_CLEAN_PTRS	libbpf_legacy.h	/^	LIBBPF_STRICT_CLEAN_PTRS = 0x01,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_DIRECT_ERRS	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_DIRECT_ERRS = 0x02,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_DIRECT_ERRS	libbpf_legacy.h	/^	LIBBPF_STRICT_DIRECT_ERRS = 0x02,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_MAP_DEFINITIONS	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_MAP_DEFINITIONS = 0x20,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_MAP_DEFINITIONS	libbpf_legacy.h	/^	LIBBPF_STRICT_MAP_DEFINITIONS = 0x20,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_NONE	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_NONE = 0x00,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_NONE	libbpf_legacy.h	/^	LIBBPF_STRICT_NONE = 0x00,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_NO_OBJECT_LIST	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_NO_OBJECT_LIST = 0x08,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_NO_OBJECT_LIST	libbpf_legacy.h	/^	LIBBPF_STRICT_NO_OBJECT_LIST = 0x08,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_SEC_NAME	build/usr/include/bpf/libbpf_legacy.h	/^	LIBBPF_STRICT_SEC_NAME = 0x04,$/;"	e	enum:libbpf_strict_mode
LIBBPF_STRICT_SEC_NAME	libbpf_legacy.h	/^	LIBBPF_STRICT_SEC_NAME = 0x04,$/;"	e	enum:libbpf_strict_mode
LIBBPF_VERSION	Makefile	/^LIBBPF_VERSION := $(LIBBPF_MAJOR_VERSION).$(LIBBPF_MINOR_VERSION).$(LIBBPF_PATCH_VERSION)$/;"	m
LIBBPF_WARN	build/usr/include/bpf/libbpf.h	/^        LIBBPF_WARN,$/;"	e	enum:libbpf_print_level
LIBBPF_WARN	libbpf.h	/^        LIBBPF_WARN,$/;"	e	enum:libbpf_print_level
LIBBPF_WARN	relo_core.c	/^	LIBBPF_WARN,$/;"	e	enum:libbpf_print_level	file:
LIBDIR	Makefile	/^LIBDIR ?= $(PREFIX)\/$(LIBSUBDIR)$/;"	m
LIBDIR_PC	Makefile	/^	LIBDIR_PC := $$\\{prefix\\}\/$(LIBSUBDIR)$/;"	m
LIBDIR_PC	Makefile	/^	LIBDIR_PC := $(LIBDIR)$/;"	m
LIBSUBDIR	Makefile	/^	LIBSUBDIR := lib$/;"	m
LIBSUBDIR	Makefile	/^	LIBSUBDIR := lib64$/;"	m
MAPS_ELF_SEC	btf.h	21;"	d
MAPS_ELF_SEC	build/usr/include/bpf/btf.h	21;"	d
MAPS_RELAX_COMPAT	bpf.h	198;"	d
MAPS_RELAX_COMPAT	build/usr/include/bpf/bpf.h	198;"	d
MAP_DEF_ALL	libbpf_internal.h	/^	MAP_DEF_ALL		= 0x7ff, \/* combination of all above *\/$/;"	e	enum:map_def_parts
MAP_DEF_INNER_MAP	libbpf_internal.h	/^	MAP_DEF_INNER_MAP	= 0x200,$/;"	e	enum:map_def_parts
MAP_DEF_KEY_SIZE	libbpf_internal.h	/^	MAP_DEF_KEY_SIZE	= 0x004,$/;"	e	enum:map_def_parts
MAP_DEF_KEY_TYPE	libbpf_internal.h	/^	MAP_DEF_KEY_TYPE	= 0x002,$/;"	e	enum:map_def_parts
MAP_DEF_MAP_EXTRA	libbpf_internal.h	/^	MAP_DEF_MAP_EXTRA	= 0x400,$/;"	e	enum:map_def_parts
MAP_DEF_MAP_FLAGS	libbpf_internal.h	/^	MAP_DEF_MAP_FLAGS	= 0x040,$/;"	e	enum:map_def_parts
MAP_DEF_MAP_TYPE	libbpf_internal.h	/^	MAP_DEF_MAP_TYPE	= 0x001,$/;"	e	enum:map_def_parts
MAP_DEF_MAX_ENTRIES	libbpf_internal.h	/^	MAP_DEF_MAX_ENTRIES	= 0x020,$/;"	e	enum:map_def_parts
MAP_DEF_NUMA_NODE	libbpf_internal.h	/^	MAP_DEF_NUMA_NODE	= 0x080,$/;"	e	enum:map_def_parts
MAP_DEF_PINNING	libbpf_internal.h	/^	MAP_DEF_PINNING		= 0x100,$/;"	e	enum:map_def_parts
MAP_DEF_VALUE_SIZE	libbpf_internal.h	/^	MAP_DEF_VALUE_SIZE	= 0x010,$/;"	e	enum:map_def_parts
MAP_DEF_VALUE_TYPE	libbpf_internal.h	/^	MAP_DEF_VALUE_TYPE	= 0x008,$/;"	e	enum:map_def_parts
MAP_LDIMM64_POISON_BASE	libbpf.c	5898;"	d	file:
MAP_LDIMM64_POISON_PFX	libbpf.c	5899;"	d	file:
MAX_FD_ARRAY_SZ	gen_loader.c	21;"	d	file:
MAX_KFUNC_DESCS	gen_loader.c	20;"	d	file:
MAX_RESOLVE_DEPTH	btf.c	583;"	d	file:
MAX_TYPE_NAME_SIZE	libbpf.c	9292;"	d	file:
MAX_USED_MAPS	gen_loader.c	18;"	d	file:
MAX_USED_PROGS	gen_loader.c	19;"	d	file:
NL_CONT	netlink.c	/^	NL_CONT,$/;"	e	enum:__anon37	file:
NL_DONE	netlink.c	/^	NL_DONE,$/;"	e	enum:__anon37	file:
NL_NEXT	netlink.c	/^	NL_NEXT,$/;"	e	enum:__anon37	file:
NOT_EMITTED	btf_dump.c	/^	NOT_EMITTED,$/;"	e	enum:btf_dump_type_emit_state	file:
NOT_ORDERED	btf_dump.c	/^	NOT_ORDERED,$/;"	e	enum:btf_dump_type_order_state	file:
NR_ERRNO	libbpf_errno.c	22;"	d	file:
NULL	bpf_helpers.h	57;"	d
NULL	build/usr/include/bpf/bpf_helpers.h	57;"	d
OBJDIR	Makefile	/^OBJDIR ?= .$/;"	m
OBJS	Makefile	/^OBJS := bpf.o btf.o libbpf.o libbpf_errno.o netlink.o \\$/;"	m
OPTS_GET	libbpf_internal.h	304;"	d
OPTS_HAS	libbpf_internal.h	302;"	d
OPTS_SET	libbpf_internal.h	306;"	d
OPTS_VALID	libbpf_internal.h	297;"	d
OPTS_ZEROED	libbpf_internal.h	312;"	d
ORDERED	btf_dump.c	/^	ORDERED,$/;"	e	enum:btf_dump_type_order_state	file:
ORDERING	btf_dump.c	/^	ORDERING,$/;"	e	enum:btf_dump_type_order_state	file:
PC_FILE	Makefile	/^PC_FILE := $(OBJDIR)\/libbpf.pc$/;"	m
PERF_UPROBE_REF_CTR_OFFSET_BITS	libbpf.c	10530;"	d	file:
PERF_UPROBE_REF_CTR_OFFSET_SHIFT	libbpf.c	10531;"	d	file:
PF_XDP	xsk.c	52;"	d	file:
PKG_CONFIG	Makefile	/^	PKG_CONFIG ?= pkg-config$/;"	m
PREFIX	Makefile	/^PREFIX ?= \/usr$/;"	m
PREFIXES	btf_dump.c	/^static const char PREFIXES[] = "\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t";$/;"	v	file:
PREFIX_CNT	btf_dump.c	/^static const size_t PREFIX_CNT = sizeof(PREFIXES) - 1;$/;"	v	file:
PROG_LOAD_ATTEMPTS	bpf.c	87;"	d	file:
PT_REGS_FP	bpf_tracing.h	276;"	d
PT_REGS_FP	bpf_tracing.h	339;"	d
PT_REGS_FP	build/usr/include/bpf/bpf_tracing.h	276;"	d
PT_REGS_FP	build/usr/include/bpf/bpf_tracing.h	339;"	d
PT_REGS_FP_CORE	bpf_tracing.h	287;"	d
PT_REGS_FP_CORE	bpf_tracing.h	350;"	d
PT_REGS_FP_CORE	build/usr/include/bpf/bpf_tracing.h	287;"	d
PT_REGS_FP_CORE	build/usr/include/bpf/bpf_tracing.h	350;"	d
PT_REGS_IP	bpf_tracing.h	279;"	d
PT_REGS_IP	bpf_tracing.h	342;"	d
PT_REGS_IP	build/usr/include/bpf/bpf_tracing.h	279;"	d
PT_REGS_IP	build/usr/include/bpf/bpf_tracing.h	342;"	d
PT_REGS_IP_CORE	bpf_tracing.h	290;"	d
PT_REGS_IP_CORE	bpf_tracing.h	353;"	d
PT_REGS_IP_CORE	build/usr/include/bpf/bpf_tracing.h	290;"	d
PT_REGS_IP_CORE	build/usr/include/bpf/bpf_tracing.h	353;"	d
PT_REGS_PARM1	bpf_tracing.h	270;"	d
PT_REGS_PARM1	bpf_tracing.h	333;"	d
PT_REGS_PARM1	build/usr/include/bpf/bpf_tracing.h	270;"	d
PT_REGS_PARM1	build/usr/include/bpf/bpf_tracing.h	333;"	d
PT_REGS_PARM1_CORE	bpf_tracing.h	281;"	d
PT_REGS_PARM1_CORE	bpf_tracing.h	344;"	d
PT_REGS_PARM1_CORE	build/usr/include/bpf/bpf_tracing.h	281;"	d
PT_REGS_PARM1_CORE	build/usr/include/bpf/bpf_tracing.h	344;"	d
PT_REGS_PARM1_CORE_SYSCALL	bpf_tracing.h	144;"	d
PT_REGS_PARM1_CORE_SYSCALL	bpf_tracing.h	178;"	d
PT_REGS_PARM1_CORE_SYSCALL	bpf_tracing.h	322;"	d
PT_REGS_PARM1_CORE_SYSCALL	bpf_tracing.h	364;"	d
PT_REGS_PARM1_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	144;"	d
PT_REGS_PARM1_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	178;"	d
PT_REGS_PARM1_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	322;"	d
PT_REGS_PARM1_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	364;"	d
PT_REGS_PARM1_SYSCALL	bpf_tracing.h	143;"	d
PT_REGS_PARM1_SYSCALL	bpf_tracing.h	177;"	d
PT_REGS_PARM1_SYSCALL	bpf_tracing.h	312;"	d
PT_REGS_PARM1_SYSCALL	bpf_tracing.h	358;"	d
PT_REGS_PARM1_SYSCALL	build/usr/include/bpf/bpf_tracing.h	143;"	d
PT_REGS_PARM1_SYSCALL	build/usr/include/bpf/bpf_tracing.h	177;"	d
PT_REGS_PARM1_SYSCALL	build/usr/include/bpf/bpf_tracing.h	312;"	d
PT_REGS_PARM1_SYSCALL	build/usr/include/bpf/bpf_tracing.h	358;"	d
PT_REGS_PARM2	bpf_tracing.h	271;"	d
PT_REGS_PARM2	bpf_tracing.h	334;"	d
PT_REGS_PARM2	build/usr/include/bpf/bpf_tracing.h	271;"	d
PT_REGS_PARM2	build/usr/include/bpf/bpf_tracing.h	334;"	d
PT_REGS_PARM2_CORE	bpf_tracing.h	282;"	d
PT_REGS_PARM2_CORE	bpf_tracing.h	345;"	d
PT_REGS_PARM2_CORE	build/usr/include/bpf/bpf_tracing.h	282;"	d
PT_REGS_PARM2_CORE	build/usr/include/bpf/bpf_tracing.h	345;"	d
PT_REGS_PARM2_CORE_SYSCALL	bpf_tracing.h	324;"	d
PT_REGS_PARM2_CORE_SYSCALL	bpf_tracing.h	365;"	d
PT_REGS_PARM2_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	324;"	d
PT_REGS_PARM2_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	365;"	d
PT_REGS_PARM2_SYSCALL	bpf_tracing.h	314;"	d
PT_REGS_PARM2_SYSCALL	bpf_tracing.h	359;"	d
PT_REGS_PARM2_SYSCALL	build/usr/include/bpf/bpf_tracing.h	314;"	d
PT_REGS_PARM2_SYSCALL	build/usr/include/bpf/bpf_tracing.h	359;"	d
PT_REGS_PARM3	bpf_tracing.h	272;"	d
PT_REGS_PARM3	bpf_tracing.h	335;"	d
PT_REGS_PARM3	build/usr/include/bpf/bpf_tracing.h	272;"	d
PT_REGS_PARM3	build/usr/include/bpf/bpf_tracing.h	335;"	d
PT_REGS_PARM3_CORE	bpf_tracing.h	283;"	d
PT_REGS_PARM3_CORE	bpf_tracing.h	346;"	d
PT_REGS_PARM3_CORE	build/usr/include/bpf/bpf_tracing.h	283;"	d
PT_REGS_PARM3_CORE	build/usr/include/bpf/bpf_tracing.h	346;"	d
PT_REGS_PARM3_CORE_SYSCALL	bpf_tracing.h	325;"	d
PT_REGS_PARM3_CORE_SYSCALL	bpf_tracing.h	366;"	d
PT_REGS_PARM3_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	325;"	d
PT_REGS_PARM3_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	366;"	d
PT_REGS_PARM3_SYSCALL	bpf_tracing.h	315;"	d
PT_REGS_PARM3_SYSCALL	bpf_tracing.h	360;"	d
PT_REGS_PARM3_SYSCALL	build/usr/include/bpf/bpf_tracing.h	315;"	d
PT_REGS_PARM3_SYSCALL	build/usr/include/bpf/bpf_tracing.h	360;"	d
PT_REGS_PARM4	bpf_tracing.h	273;"	d
PT_REGS_PARM4	bpf_tracing.h	336;"	d
PT_REGS_PARM4	build/usr/include/bpf/bpf_tracing.h	273;"	d
PT_REGS_PARM4	build/usr/include/bpf/bpf_tracing.h	336;"	d
PT_REGS_PARM4_CORE	bpf_tracing.h	284;"	d
PT_REGS_PARM4_CORE	bpf_tracing.h	347;"	d
PT_REGS_PARM4_CORE	build/usr/include/bpf/bpf_tracing.h	284;"	d
PT_REGS_PARM4_CORE	build/usr/include/bpf/bpf_tracing.h	347;"	d
PT_REGS_PARM4_CORE_SYSCALL	bpf_tracing.h	119;"	d
PT_REGS_PARM4_CORE_SYSCALL	bpf_tracing.h	327;"	d
PT_REGS_PARM4_CORE_SYSCALL	bpf_tracing.h	367;"	d
PT_REGS_PARM4_CORE_SYSCALL	bpf_tracing.h	87;"	d
PT_REGS_PARM4_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	119;"	d
PT_REGS_PARM4_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	327;"	d
PT_REGS_PARM4_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	367;"	d
PT_REGS_PARM4_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	87;"	d
PT_REGS_PARM4_SYSCALL	bpf_tracing.h	118;"	d
PT_REGS_PARM4_SYSCALL	bpf_tracing.h	317;"	d
PT_REGS_PARM4_SYSCALL	bpf_tracing.h	361;"	d
PT_REGS_PARM4_SYSCALL	bpf_tracing.h	86;"	d
PT_REGS_PARM4_SYSCALL	build/usr/include/bpf/bpf_tracing.h	118;"	d
PT_REGS_PARM4_SYSCALL	build/usr/include/bpf/bpf_tracing.h	317;"	d
PT_REGS_PARM4_SYSCALL	build/usr/include/bpf/bpf_tracing.h	361;"	d
PT_REGS_PARM4_SYSCALL	build/usr/include/bpf/bpf_tracing.h	86;"	d
PT_REGS_PARM5	bpf_tracing.h	274;"	d
PT_REGS_PARM5	bpf_tracing.h	337;"	d
PT_REGS_PARM5	build/usr/include/bpf/bpf_tracing.h	274;"	d
PT_REGS_PARM5	build/usr/include/bpf/bpf_tracing.h	337;"	d
PT_REGS_PARM5_CORE	bpf_tracing.h	285;"	d
PT_REGS_PARM5_CORE	bpf_tracing.h	348;"	d
PT_REGS_PARM5_CORE	build/usr/include/bpf/bpf_tracing.h	285;"	d
PT_REGS_PARM5_CORE	build/usr/include/bpf/bpf_tracing.h	348;"	d
PT_REGS_PARM5_CORE_SYSCALL	bpf_tracing.h	329;"	d
PT_REGS_PARM5_CORE_SYSCALL	bpf_tracing.h	368;"	d
PT_REGS_PARM5_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	329;"	d
PT_REGS_PARM5_CORE_SYSCALL	build/usr/include/bpf/bpf_tracing.h	368;"	d
PT_REGS_PARM5_SYSCALL	bpf_tracing.h	319;"	d
PT_REGS_PARM5_SYSCALL	bpf_tracing.h	362;"	d
PT_REGS_PARM5_SYSCALL	build/usr/include/bpf/bpf_tracing.h	319;"	d
PT_REGS_PARM5_SYSCALL	build/usr/include/bpf/bpf_tracing.h	362;"	d
PT_REGS_RC	bpf_tracing.h	277;"	d
PT_REGS_RC	bpf_tracing.h	340;"	d
PT_REGS_RC	build/usr/include/bpf/bpf_tracing.h	277;"	d
PT_REGS_RC	build/usr/include/bpf/bpf_tracing.h	340;"	d
PT_REGS_RC_CORE	bpf_tracing.h	288;"	d
PT_REGS_RC_CORE	bpf_tracing.h	351;"	d
PT_REGS_RC_CORE	build/usr/include/bpf/bpf_tracing.h	288;"	d
PT_REGS_RC_CORE	build/usr/include/bpf/bpf_tracing.h	351;"	d
PT_REGS_RET	bpf_tracing.h	275;"	d
PT_REGS_RET	bpf_tracing.h	338;"	d
PT_REGS_RET	build/usr/include/bpf/bpf_tracing.h	275;"	d
PT_REGS_RET	build/usr/include/bpf/bpf_tracing.h	338;"	d
PT_REGS_RET_CORE	bpf_tracing.h	286;"	d
PT_REGS_RET_CORE	bpf_tracing.h	349;"	d
PT_REGS_RET_CORE	build/usr/include/bpf/bpf_tracing.h	286;"	d
PT_REGS_RET_CORE	build/usr/include/bpf/bpf_tracing.h	349;"	d
PT_REGS_SP	bpf_tracing.h	278;"	d
PT_REGS_SP	bpf_tracing.h	341;"	d
PT_REGS_SP	build/usr/include/bpf/bpf_tracing.h	278;"	d
PT_REGS_SP	build/usr/include/bpf/bpf_tracing.h	341;"	d
PT_REGS_SP_CORE	bpf_tracing.h	289;"	d
PT_REGS_SP_CORE	bpf_tracing.h	352;"	d
PT_REGS_SP_CORE	build/usr/include/bpf/bpf_tracing.h	289;"	d
PT_REGS_SP_CORE	build/usr/include/bpf/bpf_tracing.h	352;"	d
PT_REGS_SYSCALL_REGS	bpf_tracing.h	206;"	d
PT_REGS_SYSCALL_REGS	bpf_tracing.h	240;"	d
PT_REGS_SYSCALL_REGS	bpf_tracing.h	257;"	d
PT_REGS_SYSCALL_REGS	bpf_tracing.h	379;"	d
PT_REGS_SYSCALL_REGS	build/usr/include/bpf/bpf_tracing.h	206;"	d
PT_REGS_SYSCALL_REGS	build/usr/include/bpf/bpf_tracing.h	240;"	d
PT_REGS_SYSCALL_REGS	build/usr/include/bpf/bpf_tracing.h	257;"	d
PT_REGS_SYSCALL_REGS	build/usr/include/bpf/bpf_tracing.h	379;"	d
Q	Makefile	/^	Q = @$/;"	m
Q	Makefile	/^	Q =$/;"	m
RELO_CALL	libbpf.c	/^	RELO_CALL,$/;"	e	enum:reloc_type	file:
RELO_CORE	libbpf.c	/^	RELO_CORE,$/;"	e	enum:reloc_type	file:
RELO_DATA	libbpf.c	/^	RELO_DATA,$/;"	e	enum:reloc_type	file:
RELO_EXTERN_FUNC	libbpf.c	/^	RELO_EXTERN_FUNC,$/;"	e	enum:reloc_type	file:
RELO_EXTERN_VAR	libbpf.c	/^	RELO_EXTERN_VAR,$/;"	e	enum:reloc_type	file:
RELO_LD64	libbpf.c	/^	RELO_LD64,$/;"	e	enum:reloc_type	file:
RELO_SUBPROG_ADDR	libbpf.c	/^	RELO_SUBPROG_ADDR,$/;"	e	enum:reloc_type	file:
RODATA_SEC	libbpf.c	346;"	d	file:
R_BPF_64_32	libbpf_internal.h	44;"	d
R_BPF_64_64	libbpf_internal.h	35;"	d
R_BPF_64_ABS32	libbpf_internal.h	41;"	d
R_BPF_64_ABS64	libbpf_internal.h	38;"	d
SEC	bpf_helpers.h	25;"	d
SEC	build/usr/include/bpf/bpf_helpers.h	25;"	d
SEC_ATTACHABLE	libbpf.c	/^	SEC_ATTACHABLE = 2,$/;"	e	enum:sec_def_flags	file:
SEC_ATTACHABLE_OPT	libbpf.c	/^	SEC_ATTACHABLE_OPT = SEC_ATTACHABLE | SEC_EXP_ATTACH_OPT,$/;"	e	enum:sec_def_flags	file:
SEC_ATTACH_BTF	libbpf.c	/^	SEC_ATTACH_BTF = 4,$/;"	e	enum:sec_def_flags	file:
SEC_BSS	libbpf.c	/^	SEC_BSS,$/;"	e	enum:sec_type	file:
SEC_DATA	libbpf.c	/^	SEC_DATA,$/;"	e	enum:sec_type	file:
SEC_DEF	libbpf.c	9033;"	d	file:
SEC_DEPRECATED	libbpf.c	/^	SEC_DEPRECATED = 64,$/;"	e	enum:sec_def_flags	file:
SEC_EXP_ATTACH_OPT	libbpf.c	/^	SEC_EXP_ATTACH_OPT = 1,$/;"	e	enum:sec_def_flags	file:
SEC_NONE	libbpf.c	/^	SEC_NONE = 0,$/;"	e	enum:sec_def_flags	file:
SEC_RELO	libbpf.c	/^	SEC_RELO,$/;"	e	enum:sec_type	file:
SEC_RODATA	libbpf.c	/^	SEC_RODATA,$/;"	e	enum:sec_type	file:
SEC_SLEEPABLE	libbpf.c	/^	SEC_SLEEPABLE = 8,$/;"	e	enum:sec_def_flags	file:
SEC_SLOPPY_PFX	libbpf.c	/^	SEC_SLOPPY_PFX = 16,$/;"	e	enum:sec_def_flags	file:
SEC_UNUSED	libbpf.c	/^	SEC_UNUSED = 0,$/;"	e	enum:sec_type	file:
SEC_XDP_FRAGS	libbpf.c	/^	SEC_XDP_FRAGS = 32,$/;"	e	enum:sec_def_flags	file:
SHARED_LIBS	Makefile	/^	SHARED_LIBS := $(OBJDIR)\/libbpf.so \\$/;"	m
SHARED_OBJDIR	Makefile	/^SHARED_OBJDIR := $(OBJDIR)\/sharedobjs$/;"	m
SHARED_OBJS	Makefile	/^SHARED_OBJS := $(addprefix $(SHARED_OBJDIR)\/,$(OBJS))$/;"	m
SHT_LLVM_ADDRSIG	libbpf_internal.h	48;"	d
SOL_NETLINK	netlink.c	22;"	d	file:
SOL_XDP	xsk.c	44;"	d	file:
SO_NETNS_COOKIE	xsk.c	56;"	d	file:
STATIC_LIBS	Makefile	/^STATIC_LIBS := $(OBJDIR)\/libbpf.a$/;"	m
STATIC_OBJDIR	Makefile	/^STATIC_OBJDIR := $(OBJDIR)\/staticobjs$/;"	m
STATIC_OBJS	Makefile	/^STATIC_OBJS := $(addprefix $(STATIC_OBJDIR)\/,$(OBJS))$/;"	m
STRERR_BUFSIZE	libbpf.c	133;"	d	file:
STRUCT_OPS_SEC	libbpf.c	349;"	d	file:
STRUCT_OPS_VALUE_PREFIX	libbpf.c	870;"	d	file:
TAGS_PROG	Makefile	/^TAGS_PROG := $(if $(shell which etags 2>\/dev\/null),etags,ctags)$/;"	m
TOPDIR	Makefile	/^TOPDIR = ..$/;"	m
TRI_MODULE	bpf_helpers.h	/^	TRI_MODULE = 2,$/;"	e	enum:libbpf_tristate
TRI_MODULE	build/usr/include/bpf/bpf_helpers.h	/^	TRI_MODULE = 2,$/;"	e	enum:libbpf_tristate
TRI_MODULE	build/usr/include/bpf/libbpf.h	/^	TRI_MODULE = 2,$/;"	e	enum:libbpf_tristate
TRI_MODULE	libbpf.h	/^	TRI_MODULE = 2,$/;"	e	enum:libbpf_tristate
TRI_NO	bpf_helpers.h	/^	TRI_NO = 0,$/;"	e	enum:libbpf_tristate
TRI_NO	build/usr/include/bpf/bpf_helpers.h	/^	TRI_NO = 0,$/;"	e	enum:libbpf_tristate
TRI_NO	build/usr/include/bpf/libbpf.h	/^	TRI_NO = 0,$/;"	e	enum:libbpf_tristate
TRI_NO	libbpf.h	/^	TRI_NO = 0,$/;"	e	enum:libbpf_tristate
TRI_YES	bpf_helpers.h	/^	TRI_YES = 1,$/;"	e	enum:libbpf_tristate
TRI_YES	build/usr/include/bpf/bpf_helpers.h	/^	TRI_YES = 1,$/;"	e	enum:libbpf_tristate
TRI_YES	build/usr/include/bpf/libbpf.h	/^	TRI_YES = 1,$/;"	e	enum:libbpf_tristate
TRI_YES	libbpf.h	/^	TRI_YES = 1,$/;"	e	enum:libbpf_tristate
UAPIDIR	Makefile	/^UAPIDIR ?= $(PREFIX)\/include$/;"	m
UAPI_HEADERS	Makefile	/^UAPI_HEADERS := $(addprefix $(TOPDIR)\/include\/uapi\/linux\/,\\$/;"	m
USDT_ARG_CONST	usdt.c	/^	USDT_ARG_CONST,$/;"	e	enum:usdt_arg_type	file:
USDT_ARG_REG	usdt.c	/^	USDT_ARG_REG,$/;"	e	enum:usdt_arg_type	file:
USDT_ARG_REG_DEREF	usdt.c	/^	USDT_ARG_REG_DEREF,$/;"	e	enum:usdt_arg_type	file:
USDT_BASE_SEC	usdt.c	191;"	d	file:
USDT_MAX_ARG_CNT	usdt.c	214;"	d	file:
USDT_NOTE_NAME	usdt.c	195;"	d	file:
USDT_NOTE_SEC	usdt.c	193;"	d	file:
USDT_NOTE_TYPE	usdt.c	194;"	d	file:
USDT_SEMA_SEC	usdt.c	192;"	d	file:
VERSION_SCRIPT	Makefile	/^	VERSION_SCRIPT := libbpf.map$/;"	m
XSK_LIBBPF_FLAGS__INHIBIT_PROG_LOAD	build/usr/include/bpf/xsk.h	280;"	d
XSK_LIBBPF_FLAGS__INHIBIT_PROG_LOAD	xsk.h	280;"	d
XSK_PROG_FALLBACK	xsk.c	/^	XSK_PROG_FALLBACK,$/;"	e	enum:xsk_prog	file:
XSK_PROG_REDIRECT_FLAGS	xsk.c	/^	XSK_PROG_REDIRECT_FLAGS,$/;"	e	enum:xsk_prog	file:
XSK_RING_CONS__DEFAULT_NUM_DESCS	build/usr/include/bpf/xsk.h	259;"	d
XSK_RING_CONS__DEFAULT_NUM_DESCS	xsk.h	259;"	d
XSK_RING_PROD__DEFAULT_NUM_DESCS	build/usr/include/bpf/xsk.h	260;"	d
XSK_RING_PROD__DEFAULT_NUM_DESCS	xsk.h	260;"	d
XSK_UMEM__DEFAULT_FLAGS	build/usr/include/bpf/xsk.h	264;"	d
XSK_UMEM__DEFAULT_FLAGS	xsk.h	264;"	d
XSK_UMEM__DEFAULT_FRAME_HEADROOM	build/usr/include/bpf/xsk.h	263;"	d
XSK_UMEM__DEFAULT_FRAME_HEADROOM	xsk.h	263;"	d
XSK_UMEM__DEFAULT_FRAME_SHIFT	build/usr/include/bpf/xsk.h	261;"	d
XSK_UMEM__DEFAULT_FRAME_SHIFT	xsk.h	261;"	d
XSK_UMEM__DEFAULT_FRAME_SIZE	build/usr/include/bpf/xsk.h	262;"	d
XSK_UMEM__DEFAULT_FRAME_SIZE	xsk.h	262;"	d
_GNU_SOURCE	libbpf.c	14;"	d	file:
_GNU_SOURCE	libbpf_errno.c	10;"	d	file:
_GNU_SOURCE	ringbuf.c	8;"	d	file:
_GNU_SOURCE	str_error.c	2;"	d	file:
_S	libbpf.c	176;"	d	file:
_S	libbpf.c	178;"	d	file:
__BPF_CORE_READ_H__	bpf_core_read.h	3;"	d
__BPF_CORE_READ_H__	build/usr/include/bpf/bpf_core_read.h	3;"	d
__BPF_ENDIAN__	bpf_endian.h	3;"	d
__BPF_ENDIAN__	build/usr/include/bpf/bpf_endian.h	3;"	d
__BPF_GEN_INTERNAL_H	bpf_gen_internal.h	4;"	d
__BPF_HELPERS__	bpf_helpers.h	3;"	d
__BPF_HELPERS__	build/usr/include/bpf/bpf_helpers.h	3;"	d
__BPF_TARGET_MISSING	bpf_tracing.h	68;"	d
__BPF_TARGET_MISSING	build/usr/include/bpf/bpf_tracing.h	68;"	d
__BPF_TRACING_H__	bpf_tracing.h	3;"	d
__BPF_TRACING_H__	build/usr/include/bpf/bpf_tracing.h	3;"	d
__CORE_BITFIELD_PROBE_READ	bpf_core_read.h	44;"	d
__CORE_BITFIELD_PROBE_READ	bpf_core_read.h	54;"	d
__CORE_BITFIELD_PROBE_READ	build/usr/include/bpf/bpf_core_read.h	44;"	d
__CORE_BITFIELD_PROBE_READ	build/usr/include/bpf/bpf_core_read.h	54;"	d
__CORE_RELO	bpf_core_read.h	40;"	d
__CORE_RELO	build/usr/include/bpf/bpf_core_read.h	40;"	d
__FEAT_CNT	libbpf_internal.h	/^	__FEAT_CNT,$/;"	e	enum:kern_feature_id
__LIBBPF_BPF_H	bpf.h	24;"	d
__LIBBPF_BPF_H	build/usr/include/bpf/bpf.h	24;"	d
__LIBBPF_BTF_H	btf.h	6;"	d
__LIBBPF_BTF_H	build/usr/include/bpf/btf.h	6;"	d
__LIBBPF_CURRENT_VERSION_GEQ	build/usr/include/bpf/libbpf_common.h	26;"	d
__LIBBPF_CURRENT_VERSION_GEQ	libbpf_common.h	26;"	d
__LIBBPF_ERRNO__END	build/usr/include/bpf/libbpf.h	/^	__LIBBPF_ERRNO__END,$/;"	e	enum:libbpf_errno
__LIBBPF_ERRNO__END	libbpf.h	/^	__LIBBPF_ERRNO__END,$/;"	e	enum:libbpf_errno
__LIBBPF_ERRNO__START	build/usr/include/bpf/libbpf.h	/^	__LIBBPF_ERRNO__START = 4000,$/;"	e	enum:libbpf_errno
__LIBBPF_ERRNO__START	libbpf.h	/^	__LIBBPF_ERRNO__START = 4000,$/;"	e	enum:libbpf_errno
__LIBBPF_HASHMAP_H	hashmap.h	9;"	d
__LIBBPF_LEGACY_BPF_H	build/usr/include/bpf/libbpf_legacy.h	11;"	d
__LIBBPF_LEGACY_BPF_H	libbpf_legacy.h	11;"	d
__LIBBPF_LIBBPF_COMMON_H	build/usr/include/bpf/libbpf_common.h	10;"	d
__LIBBPF_LIBBPF_COMMON_H	libbpf_common.h	10;"	d
__LIBBPF_LIBBPF_H	build/usr/include/bpf/libbpf.h	11;"	d
__LIBBPF_LIBBPF_H	libbpf.h	11;"	d
__LIBBPF_LIBBPF_INTERNAL_H	libbpf_internal.h	10;"	d
__LIBBPF_MARK_DEPRECATED_0_6	build/usr/include/bpf/libbpf_common.h	34;"	d
__LIBBPF_MARK_DEPRECATED_0_6	build/usr/include/bpf/libbpf_common.h	36;"	d
__LIBBPF_MARK_DEPRECATED_0_6	libbpf_common.h	34;"	d
__LIBBPF_MARK_DEPRECATED_0_6	libbpf_common.h	36;"	d
__LIBBPF_MARK_DEPRECATED_0_7	build/usr/include/bpf/libbpf_common.h	39;"	d
__LIBBPF_MARK_DEPRECATED_0_7	build/usr/include/bpf/libbpf_common.h	41;"	d
__LIBBPF_MARK_DEPRECATED_0_7	libbpf_common.h	39;"	d
__LIBBPF_MARK_DEPRECATED_0_7	libbpf_common.h	41;"	d
__LIBBPF_MARK_DEPRECATED_0_8	build/usr/include/bpf/libbpf_common.h	44;"	d
__LIBBPF_MARK_DEPRECATED_0_8	build/usr/include/bpf/libbpf_common.h	46;"	d
__LIBBPF_MARK_DEPRECATED_0_8	libbpf_common.h	44;"	d
__LIBBPF_MARK_DEPRECATED_0_8	libbpf_common.h	46;"	d
__LIBBPF_NLATTR_H	nlattr.h	10;"	d
__LIBBPF_NLA_TYPE_MAX	nlattr.h	/^	__LIBBPF_NLA_TYPE_MAX,$/;"	e	enum:__anon18
__LIBBPF_STRICT_LAST	build/usr/include/bpf/libbpf_legacy.h	/^	__LIBBPF_STRICT_LAST,$/;"	e	enum:libbpf_strict_mode
__LIBBPF_STRICT_LAST	libbpf_legacy.h	/^	__LIBBPF_STRICT_LAST,$/;"	e	enum:libbpf_strict_mode
__LIBBPF_STRSET_H	strset.h	5;"	d
__LIBBPF_STR_ERROR_H	str_error.h	3;"	d
__LIBBPF_VERSION_H	build/usr/include/bpf/libbpf_version.h	4;"	d
__LIBBPF_VERSION_H	libbpf_version.h	4;"	d
__LIBBPF_XSK_H	build/usr/include/bpf/xsk.h	13;"	d
__LIBBPF_XSK_H	xsk.h	13;"	d
__LINUX_NETLINK_H	nlattr.h	19;"	d
__NR_bpf	bpf.c	45;"	d	file:
__NR_bpf	bpf.c	47;"	d	file:
__NR_bpf	bpf.c	49;"	d	file:
__NR_bpf	bpf.c	51;"	d	file:
__NR_bpf	bpf.c	53;"	d	file:
__NR_bpf	bpf.c	55;"	d	file:
__NR_bpf	bpf.c	57;"	d	file:
__NR_bpf	bpf.c	59;"	d	file:
__NR_bpf	bpf.c	61;"	d	file:
__NR_bpf	build/usr/include/bpf/skel_internal.h	22;"	d
__NR_bpf	build/usr/include/bpf/skel_internal.h	24;"	d
__NR_bpf	build/usr/include/bpf/skel_internal.h	26;"	d
__NR_bpf	skel_internal.h	22;"	d
__NR_bpf	skel_internal.h	24;"	d
__NR_bpf	skel_internal.h	26;"	d
__PT_FP_REG	bpf_tracing.h	100;"	d
__PT_FP_REG	bpf_tracing.h	113;"	d
__PT_FP_REG	bpf_tracing.h	139;"	d
__PT_FP_REG	bpf_tracing.h	154;"	d
__PT_FP_REG	bpf_tracing.h	173;"	d
__PT_FP_REG	bpf_tracing.h	188;"	d
__PT_FP_REG	bpf_tracing.h	201;"	d
__PT_FP_REG	bpf_tracing.h	216;"	d
__PT_FP_REG	bpf_tracing.h	235;"	d
__PT_FP_REG	bpf_tracing.h	252;"	d
__PT_FP_REG	bpf_tracing.h	81;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	100;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	113;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	139;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	154;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	173;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	188;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	201;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	216;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	235;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	252;"	d
__PT_FP_REG	build/usr/include/bpf/bpf_tracing.h	81;"	d
__PT_IP_REG	bpf_tracing.h	103;"	d
__PT_IP_REG	bpf_tracing.h	116;"	d
__PT_IP_REG	bpf_tracing.h	142;"	d
__PT_IP_REG	bpf_tracing.h	157;"	d
__PT_IP_REG	bpf_tracing.h	176;"	d
__PT_IP_REG	bpf_tracing.h	191;"	d
__PT_IP_REG	bpf_tracing.h	204;"	d
__PT_IP_REG	bpf_tracing.h	221;"	d
__PT_IP_REG	bpf_tracing.h	223;"	d
__PT_IP_REG	bpf_tracing.h	238;"	d
__PT_IP_REG	bpf_tracing.h	255;"	d
__PT_IP_REG	bpf_tracing.h	84;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	103;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	116;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	142;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	157;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	176;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	191;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	204;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	221;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	223;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	238;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	255;"	d
__PT_IP_REG	build/usr/include/bpf/bpf_tracing.h	84;"	d
__PT_PARM1_REG	bpf_tracing.h	107;"	d
__PT_PARM1_REG	bpf_tracing.h	133;"	d
__PT_PARM1_REG	bpf_tracing.h	148;"	d
__PT_PARM1_REG	bpf_tracing.h	167;"	d
__PT_PARM1_REG	bpf_tracing.h	182;"	d
__PT_PARM1_REG	bpf_tracing.h	195;"	d
__PT_PARM1_REG	bpf_tracing.h	210;"	d
__PT_PARM1_REG	bpf_tracing.h	229;"	d
__PT_PARM1_REG	bpf_tracing.h	246;"	d
__PT_PARM1_REG	bpf_tracing.h	75;"	d
__PT_PARM1_REG	bpf_tracing.h	93;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	107;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	133;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	148;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	167;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	182;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	195;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	210;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	229;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	246;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	75;"	d
__PT_PARM1_REG	build/usr/include/bpf/bpf_tracing.h	93;"	d
__PT_PARM2_REG	bpf_tracing.h	108;"	d
__PT_PARM2_REG	bpf_tracing.h	134;"	d
__PT_PARM2_REG	bpf_tracing.h	149;"	d
__PT_PARM2_REG	bpf_tracing.h	168;"	d
__PT_PARM2_REG	bpf_tracing.h	183;"	d
__PT_PARM2_REG	bpf_tracing.h	196;"	d
__PT_PARM2_REG	bpf_tracing.h	211;"	d
__PT_PARM2_REG	bpf_tracing.h	230;"	d
__PT_PARM2_REG	bpf_tracing.h	247;"	d
__PT_PARM2_REG	bpf_tracing.h	76;"	d
__PT_PARM2_REG	bpf_tracing.h	94;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	108;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	134;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	149;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	168;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	183;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	196;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	211;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	230;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	247;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	76;"	d
__PT_PARM2_REG	build/usr/include/bpf/bpf_tracing.h	94;"	d
__PT_PARM3_REG	bpf_tracing.h	109;"	d
__PT_PARM3_REG	bpf_tracing.h	135;"	d
__PT_PARM3_REG	bpf_tracing.h	150;"	d
__PT_PARM3_REG	bpf_tracing.h	169;"	d
__PT_PARM3_REG	bpf_tracing.h	184;"	d
__PT_PARM3_REG	bpf_tracing.h	197;"	d
__PT_PARM3_REG	bpf_tracing.h	212;"	d
__PT_PARM3_REG	bpf_tracing.h	231;"	d
__PT_PARM3_REG	bpf_tracing.h	248;"	d
__PT_PARM3_REG	bpf_tracing.h	77;"	d
__PT_PARM3_REG	bpf_tracing.h	95;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	109;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	135;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	150;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	169;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	184;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	197;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	212;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	231;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	248;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	77;"	d
__PT_PARM3_REG	build/usr/include/bpf/bpf_tracing.h	95;"	d
__PT_PARM4_REG	bpf_tracing.h	110;"	d
__PT_PARM4_REG	bpf_tracing.h	136;"	d
__PT_PARM4_REG	bpf_tracing.h	151;"	d
__PT_PARM4_REG	bpf_tracing.h	170;"	d
__PT_PARM4_REG	bpf_tracing.h	185;"	d
__PT_PARM4_REG	bpf_tracing.h	198;"	d
__PT_PARM4_REG	bpf_tracing.h	213;"	d
__PT_PARM4_REG	bpf_tracing.h	232;"	d
__PT_PARM4_REG	bpf_tracing.h	249;"	d
__PT_PARM4_REG	bpf_tracing.h	78;"	d
__PT_PARM4_REG	bpf_tracing.h	97;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	110;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	136;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	151;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	170;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	185;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	198;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	213;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	232;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	249;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	78;"	d
__PT_PARM4_REG	build/usr/include/bpf/bpf_tracing.h	97;"	d
__PT_PARM5_REG	bpf_tracing.h	111;"	d
__PT_PARM5_REG	bpf_tracing.h	137;"	d
__PT_PARM5_REG	bpf_tracing.h	152;"	d
__PT_PARM5_REG	bpf_tracing.h	171;"	d
__PT_PARM5_REG	bpf_tracing.h	186;"	d
__PT_PARM5_REG	bpf_tracing.h	199;"	d
__PT_PARM5_REG	bpf_tracing.h	214;"	d
__PT_PARM5_REG	bpf_tracing.h	233;"	d
__PT_PARM5_REG	bpf_tracing.h	250;"	d
__PT_PARM5_REG	bpf_tracing.h	79;"	d
__PT_PARM5_REG	bpf_tracing.h	98;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	111;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	137;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	152;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	171;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	186;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	199;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	214;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	233;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	250;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	79;"	d
__PT_PARM5_REG	build/usr/include/bpf/bpf_tracing.h	98;"	d
__PT_RC_REG	bpf_tracing.h	101;"	d
__PT_RC_REG	bpf_tracing.h	114;"	d
__PT_RC_REG	bpf_tracing.h	140;"	d
__PT_RC_REG	bpf_tracing.h	155;"	d
__PT_RC_REG	bpf_tracing.h	174;"	d
__PT_RC_REG	bpf_tracing.h	189;"	d
__PT_RC_REG	bpf_tracing.h	202;"	d
__PT_RC_REG	bpf_tracing.h	217;"	d
__PT_RC_REG	bpf_tracing.h	236;"	d
__PT_RC_REG	bpf_tracing.h	253;"	d
__PT_RC_REG	bpf_tracing.h	82;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	101;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	114;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	140;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	155;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	174;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	189;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	202;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	217;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	236;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	253;"	d
__PT_RC_REG	build/usr/include/bpf/bpf_tracing.h	82;"	d
__PT_REGS_CAST	bpf_tracing.h	132;"	d
__PT_REGS_CAST	bpf_tracing.h	166;"	d
__PT_REGS_CAST	bpf_tracing.h	228;"	d
__PT_REGS_CAST	bpf_tracing.h	245;"	d
__PT_REGS_CAST	bpf_tracing.h	267;"	d
__PT_REGS_CAST	build/usr/include/bpf/bpf_tracing.h	132;"	d
__PT_REGS_CAST	build/usr/include/bpf/bpf_tracing.h	166;"	d
__PT_REGS_CAST	build/usr/include/bpf/bpf_tracing.h	228;"	d
__PT_REGS_CAST	build/usr/include/bpf/bpf_tracing.h	245;"	d
__PT_REGS_CAST	build/usr/include/bpf/bpf_tracing.h	267;"	d
__PT_RET_REG	bpf_tracing.h	112;"	d
__PT_RET_REG	bpf_tracing.h	138;"	d
__PT_RET_REG	bpf_tracing.h	153;"	d
__PT_RET_REG	bpf_tracing.h	172;"	d
__PT_RET_REG	bpf_tracing.h	187;"	d
__PT_RET_REG	bpf_tracing.h	200;"	d
__PT_RET_REG	bpf_tracing.h	215;"	d
__PT_RET_REG	bpf_tracing.h	234;"	d
__PT_RET_REG	bpf_tracing.h	251;"	d
__PT_RET_REG	bpf_tracing.h	80;"	d
__PT_RET_REG	bpf_tracing.h	99;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	112;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	138;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	153;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	172;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	187;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	200;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	215;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	234;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	251;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	80;"	d
__PT_RET_REG	build/usr/include/bpf/bpf_tracing.h	99;"	d
__PT_SP_REG	bpf_tracing.h	102;"	d
__PT_SP_REG	bpf_tracing.h	115;"	d
__PT_SP_REG	bpf_tracing.h	141;"	d
__PT_SP_REG	bpf_tracing.h	156;"	d
__PT_SP_REG	bpf_tracing.h	175;"	d
__PT_SP_REG	bpf_tracing.h	190;"	d
__PT_SP_REG	bpf_tracing.h	203;"	d
__PT_SP_REG	bpf_tracing.h	218;"	d
__PT_SP_REG	bpf_tracing.h	237;"	d
__PT_SP_REG	bpf_tracing.h	254;"	d
__PT_SP_REG	bpf_tracing.h	83;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	102;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	115;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	141;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	156;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	175;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	190;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	203;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	218;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	237;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	254;"	d
__PT_SP_REG	build/usr/include/bpf/bpf_tracing.h	83;"	d
__RELO_CORE_H	relo_core.h	5;"	d
__S	libbpf.c	175;"	d	file:
__S	libbpf.c	179;"	d	file:
__SKEL_INTERNAL_H	build/usr/include/bpf/skel_internal.h	4;"	d
__SKEL_INTERNAL_H	skel_internal.h	4;"	d
__USDT_BPF_H__	build/usr/include/bpf/usdt.bpf.h	4;"	d
__USDT_BPF_H__	usdt.bpf.h	4;"	d
__XSK_READ_ONCE	build/usr/include/bpf/xsk.h	39;"	d
__XSK_READ_ONCE	xsk.h	39;"	d
__XSK_WRITE_ONCE	build/usr/include/bpf/xsk.h	40;"	d
__XSK_WRITE_ONCE	xsk.h	40;"	d
___apply	bpf_core_read.h	253;"	d
___apply	build/usr/include/bpf/bpf_core_read.h	253;"	d
___arrow	bpf_core_read.h	301;"	d
___arrow	build/usr/include/bpf/bpf_core_read.h	301;"	d
___arrow1	bpf_core_read.h	291;"	d
___arrow1	build/usr/include/bpf/bpf_core_read.h	291;"	d
___arrow10	bpf_core_read.h	300;"	d
___arrow10	build/usr/include/bpf/bpf_core_read.h	300;"	d
___arrow2	bpf_core_read.h	292;"	d
___arrow2	build/usr/include/bpf/bpf_core_read.h	292;"	d
___arrow3	bpf_core_read.h	293;"	d
___arrow3	build/usr/include/bpf/bpf_core_read.h	293;"	d
___arrow4	bpf_core_read.h	294;"	d
___arrow4	build/usr/include/bpf/bpf_core_read.h	294;"	d
___arrow5	bpf_core_read.h	295;"	d
___arrow5	build/usr/include/bpf/bpf_core_read.h	295;"	d
___arrow6	bpf_core_read.h	296;"	d
___arrow6	build/usr/include/bpf/bpf_core_read.h	296;"	d
___arrow7	bpf_core_read.h	297;"	d
___arrow7	build/usr/include/bpf/bpf_core_read.h	297;"	d
___arrow8	bpf_core_read.h	298;"	d
___arrow8	build/usr/include/bpf/bpf_core_read.h	298;"	d
___arrow9	bpf_core_read.h	299;"	d
___arrow9	build/usr/include/bpf/bpf_core_read.h	299;"	d
___bpf_apply	bpf_helpers.h	183;"	d
___bpf_apply	bpf_tracing.h	386;"	d
___bpf_apply	build/usr/include/bpf/bpf_helpers.h	183;"	d
___bpf_apply	build/usr/include/bpf/bpf_tracing.h	386;"	d
___bpf_concat	bpf_helpers.h	180;"	d
___bpf_concat	bpf_tracing.h	383;"	d
___bpf_concat	build/usr/include/bpf/bpf_helpers.h	180;"	d
___bpf_concat	build/usr/include/bpf/bpf_tracing.h	383;"	d
___bpf_ctx_cast	bpf_tracing.h	408;"	d
___bpf_ctx_cast	build/usr/include/bpf/bpf_tracing.h	408;"	d
___bpf_ctx_cast0	bpf_tracing.h	395;"	d
___bpf_ctx_cast0	build/usr/include/bpf/bpf_tracing.h	395;"	d
___bpf_ctx_cast1	bpf_tracing.h	396;"	d
___bpf_ctx_cast1	build/usr/include/bpf/bpf_tracing.h	396;"	d
___bpf_ctx_cast10	bpf_tracing.h	405;"	d
___bpf_ctx_cast10	build/usr/include/bpf/bpf_tracing.h	405;"	d
___bpf_ctx_cast11	bpf_tracing.h	406;"	d
___bpf_ctx_cast11	build/usr/include/bpf/bpf_tracing.h	406;"	d
___bpf_ctx_cast12	bpf_tracing.h	407;"	d
___bpf_ctx_cast12	build/usr/include/bpf/bpf_tracing.h	407;"	d
___bpf_ctx_cast2	bpf_tracing.h	397;"	d
___bpf_ctx_cast2	build/usr/include/bpf/bpf_tracing.h	397;"	d
___bpf_ctx_cast3	bpf_tracing.h	398;"	d
___bpf_ctx_cast3	build/usr/include/bpf/bpf_tracing.h	398;"	d
___bpf_ctx_cast4	bpf_tracing.h	399;"	d
___bpf_ctx_cast4	build/usr/include/bpf/bpf_tracing.h	399;"	d
___bpf_ctx_cast5	bpf_tracing.h	400;"	d
___bpf_ctx_cast5	build/usr/include/bpf/bpf_tracing.h	400;"	d
___bpf_ctx_cast6	bpf_tracing.h	401;"	d
___bpf_ctx_cast6	build/usr/include/bpf/bpf_tracing.h	401;"	d
___bpf_ctx_cast7	bpf_tracing.h	402;"	d
___bpf_ctx_cast7	build/usr/include/bpf/bpf_tracing.h	402;"	d
___bpf_ctx_cast8	bpf_tracing.h	403;"	d
___bpf_ctx_cast8	build/usr/include/bpf/bpf_tracing.h	403;"	d
___bpf_ctx_cast9	bpf_tracing.h	404;"	d
___bpf_ctx_cast9	build/usr/include/bpf/bpf_tracing.h	404;"	d
___bpf_field_ref	bpf_core_read.h	115;"	d
___bpf_field_ref	build/usr/include/bpf/bpf_core_read.h	115;"	d
___bpf_field_ref1	bpf_core_read.h	113;"	d
___bpf_field_ref1	build/usr/include/bpf/bpf_core_read.h	113;"	d
___bpf_field_ref2	bpf_core_read.h	114;"	d
___bpf_field_ref2	build/usr/include/bpf/bpf_core_read.h	114;"	d
___bpf_fill	bpf_helpers.h	206;"	d
___bpf_fill	build/usr/include/bpf/bpf_helpers.h	206;"	d
___bpf_fill0	bpf_helpers.h	193;"	d
___bpf_fill0	build/usr/include/bpf/bpf_helpers.h	193;"	d
___bpf_fill1	bpf_helpers.h	194;"	d
___bpf_fill1	build/usr/include/bpf/bpf_helpers.h	194;"	d
___bpf_fill10	bpf_helpers.h	203;"	d
___bpf_fill10	build/usr/include/bpf/bpf_helpers.h	203;"	d
___bpf_fill11	bpf_helpers.h	204;"	d
___bpf_fill11	build/usr/include/bpf/bpf_helpers.h	204;"	d
___bpf_fill12	bpf_helpers.h	205;"	d
___bpf_fill12	build/usr/include/bpf/bpf_helpers.h	205;"	d
___bpf_fill2	bpf_helpers.h	195;"	d
___bpf_fill2	build/usr/include/bpf/bpf_helpers.h	195;"	d
___bpf_fill3	bpf_helpers.h	196;"	d
___bpf_fill3	build/usr/include/bpf/bpf_helpers.h	196;"	d
___bpf_fill4	bpf_helpers.h	197;"	d
___bpf_fill4	build/usr/include/bpf/bpf_helpers.h	197;"	d
___bpf_fill5	bpf_helpers.h	198;"	d
___bpf_fill5	build/usr/include/bpf/bpf_helpers.h	198;"	d
___bpf_fill6	bpf_helpers.h	199;"	d
___bpf_fill6	build/usr/include/bpf/bpf_helpers.h	199;"	d
___bpf_fill7	bpf_helpers.h	200;"	d
___bpf_fill7	build/usr/include/bpf/bpf_helpers.h	200;"	d
___bpf_fill8	bpf_helpers.h	201;"	d
___bpf_fill8	build/usr/include/bpf/bpf_helpers.h	201;"	d
___bpf_fill9	bpf_helpers.h	202;"	d
___bpf_fill9	build/usr/include/bpf/bpf_helpers.h	202;"	d
___bpf_kprobe_args	bpf_tracing.h	447;"	d
___bpf_kprobe_args	build/usr/include/bpf/bpf_tracing.h	447;"	d
___bpf_kprobe_args0	bpf_tracing.h	441;"	d
___bpf_kprobe_args0	build/usr/include/bpf/bpf_tracing.h	441;"	d
___bpf_kprobe_args1	bpf_tracing.h	442;"	d
___bpf_kprobe_args1	build/usr/include/bpf/bpf_tracing.h	442;"	d
___bpf_kprobe_args2	bpf_tracing.h	443;"	d
___bpf_kprobe_args2	build/usr/include/bpf/bpf_tracing.h	443;"	d
___bpf_kprobe_args3	bpf_tracing.h	444;"	d
___bpf_kprobe_args3	build/usr/include/bpf/bpf_tracing.h	444;"	d
___bpf_kprobe_args4	bpf_tracing.h	445;"	d
___bpf_kprobe_args4	build/usr/include/bpf/bpf_tracing.h	445;"	d
___bpf_kprobe_args5	bpf_tracing.h	446;"	d
___bpf_kprobe_args5	build/usr/include/bpf/bpf_tracing.h	446;"	d
___bpf_kretprobe_args	bpf_tracing.h	475;"	d
___bpf_kretprobe_args	build/usr/include/bpf/bpf_tracing.h	475;"	d
___bpf_kretprobe_args0	bpf_tracing.h	473;"	d
___bpf_kretprobe_args0	build/usr/include/bpf/bpf_tracing.h	473;"	d
___bpf_kretprobe_args1	bpf_tracing.h	474;"	d
___bpf_kretprobe_args1	build/usr/include/bpf/bpf_tracing.h	474;"	d
___bpf_mvb	bpf_endian.h	13;"	d
___bpf_mvb	build/usr/include/bpf/bpf_endian.h	13;"	d
___bpf_narg	bpf_helpers.h	189;"	d
___bpf_narg	bpf_tracing.h	392;"	d
___bpf_narg	build/usr/include/bpf/bpf_helpers.h	189;"	d
___bpf_narg	build/usr/include/bpf/bpf_tracing.h	392;"	d
___bpf_nth	bpf_helpers.h	186;"	d
___bpf_nth	bpf_tracing.h	389;"	d
___bpf_nth	build/usr/include/bpf/bpf_helpers.h	186;"	d
___bpf_nth	build/usr/include/bpf/bpf_tracing.h	389;"	d
___bpf_pick_printk	bpf_helpers.h	279;"	d
___bpf_pick_printk	build/usr/include/bpf/bpf_helpers.h	279;"	d
___bpf_prog_load4	bpf.h	165;"	d
___bpf_prog_load4	build/usr/include/bpf/bpf.h	165;"	d
___bpf_prog_load6	bpf.h	167;"	d
___bpf_prog_load6	build/usr/include/bpf/bpf.h	167;"	d
___bpf_swab16	bpf_endian.h	15;"	d
___bpf_swab16	build/usr/include/bpf/bpf_endian.h	15;"	d
___bpf_swab32	bpf_endian.h	19;"	d
___bpf_swab32	build/usr/include/bpf/bpf_endian.h	19;"	d
___bpf_swab64	bpf_endian.h	25;"	d
___bpf_swab64	build/usr/include/bpf/bpf_endian.h	25;"	d
___bpf_syscall_args	bpf_tracing.h	502;"	d
___bpf_syscall_args	build/usr/include/bpf/bpf_tracing.h	502;"	d
___bpf_syscall_args0	bpf_tracing.h	496;"	d
___bpf_syscall_args0	build/usr/include/bpf/bpf_tracing.h	496;"	d
___bpf_syscall_args1	bpf_tracing.h	497;"	d
___bpf_syscall_args1	build/usr/include/bpf/bpf_tracing.h	497;"	d
___bpf_syscall_args2	bpf_tracing.h	498;"	d
___bpf_syscall_args2	build/usr/include/bpf/bpf_tracing.h	498;"	d
___bpf_syscall_args3	bpf_tracing.h	499;"	d
___bpf_syscall_args3	build/usr/include/bpf/bpf_tracing.h	499;"	d
___bpf_syscall_args4	bpf_tracing.h	500;"	d
___bpf_syscall_args4	build/usr/include/bpf/bpf_tracing.h	500;"	d
___bpf_syscall_args5	bpf_tracing.h	501;"	d
___bpf_syscall_args5	build/usr/include/bpf/bpf_tracing.h	501;"	d
___bpf_usdt_args	build/usr/include/bpf/usdt.bpf.h	238;"	d
___bpf_usdt_args	usdt.bpf.h	238;"	d
___bpf_usdt_args0	build/usr/include/bpf/usdt.bpf.h	225;"	d
___bpf_usdt_args0	usdt.bpf.h	225;"	d
___bpf_usdt_args1	build/usr/include/bpf/usdt.bpf.h	226;"	d
___bpf_usdt_args1	usdt.bpf.h	226;"	d
___bpf_usdt_args10	build/usr/include/bpf/usdt.bpf.h	235;"	d
___bpf_usdt_args10	usdt.bpf.h	235;"	d
___bpf_usdt_args11	build/usr/include/bpf/usdt.bpf.h	236;"	d
___bpf_usdt_args11	usdt.bpf.h	236;"	d
___bpf_usdt_args12	build/usr/include/bpf/usdt.bpf.h	237;"	d
___bpf_usdt_args12	usdt.bpf.h	237;"	d
___bpf_usdt_args2	build/usr/include/bpf/usdt.bpf.h	227;"	d
___bpf_usdt_args2	usdt.bpf.h	227;"	d
___bpf_usdt_args3	build/usr/include/bpf/usdt.bpf.h	228;"	d
___bpf_usdt_args3	usdt.bpf.h	228;"	d
___bpf_usdt_args4	build/usr/include/bpf/usdt.bpf.h	229;"	d
___bpf_usdt_args4	usdt.bpf.h	229;"	d
___bpf_usdt_args5	build/usr/include/bpf/usdt.bpf.h	230;"	d
___bpf_usdt_args5	usdt.bpf.h	230;"	d
___bpf_usdt_args6	build/usr/include/bpf/usdt.bpf.h	231;"	d
___bpf_usdt_args6	usdt.bpf.h	231;"	d
___bpf_usdt_args7	build/usr/include/bpf/usdt.bpf.h	232;"	d
___bpf_usdt_args7	usdt.bpf.h	232;"	d
___bpf_usdt_args8	build/usr/include/bpf/usdt.bpf.h	233;"	d
___bpf_usdt_args8	usdt.bpf.h	233;"	d
___bpf_usdt_args9	build/usr/include/bpf/usdt.bpf.h	234;"	d
___bpf_usdt_args9	usdt.bpf.h	234;"	d
___btf_dedup2	btf.h	266;"	d
___btf_dedup2	build/usr/include/bpf/btf.h	266;"	d
___btf_dedup3	btf.h	265;"	d
___btf_dedup3	build/usr/include/bpf/btf.h	265;"	d
___concat	bpf_core_read.h	252;"	d
___concat	build/usr/include/bpf/bpf_core_read.h	252;"	d
___core_read	bpf_core_read.h	330;"	d
___core_read	build/usr/include/bpf/bpf_core_read.h	330;"	d
___core_read0	bpf_core_read.h	324;"	d
___core_read0	build/usr/include/bpf/bpf_core_read.h	324;"	d
___core_readN	bpf_core_read.h	326;"	d
___core_readN	build/usr/include/bpf/bpf_core_read.h	326;"	d
___empty	bpf_core_read.h	266;"	d
___empty	build/usr/include/bpf/bpf_core_read.h	266;"	d
___last	bpf_core_read.h	278;"	d
___last	build/usr/include/bpf/bpf_core_read.h	278;"	d
___last1	bpf_core_read.h	268;"	d
___last1	build/usr/include/bpf/bpf_core_read.h	268;"	d
___last10	bpf_core_read.h	277;"	d
___last10	build/usr/include/bpf/bpf_core_read.h	277;"	d
___last2	bpf_core_read.h	269;"	d
___last2	build/usr/include/bpf/bpf_core_read.h	269;"	d
___last3	bpf_core_read.h	270;"	d
___last3	build/usr/include/bpf/bpf_core_read.h	270;"	d
___last4	bpf_core_read.h	271;"	d
___last4	build/usr/include/bpf/bpf_core_read.h	271;"	d
___last5	bpf_core_read.h	272;"	d
___last5	build/usr/include/bpf/bpf_core_read.h	272;"	d
___last6	bpf_core_read.h	273;"	d
___last6	build/usr/include/bpf/bpf_core_read.h	273;"	d
___last7	bpf_core_read.h	274;"	d
___last7	build/usr/include/bpf/bpf_core_read.h	274;"	d
___last8	bpf_core_read.h	275;"	d
___last8	build/usr/include/bpf/bpf_core_read.h	275;"	d
___last9	bpf_core_read.h	276;"	d
___last9	build/usr/include/bpf/bpf_core_read.h	276;"	d
___libbpf_cat	build/usr/include/bpf/libbpf_common.h	55;"	d
___libbpf_cat	libbpf_common.h	55;"	d
___libbpf_cnt	build/usr/include/bpf/libbpf_common.h	58;"	d
___libbpf_cnt	libbpf_common.h	58;"	d
___libbpf_nth	build/usr/include/bpf/libbpf_common.h	57;"	d
___libbpf_nth	libbpf_common.h	57;"	d
___libbpf_overload	build/usr/include/bpf/libbpf_common.h	59;"	d
___libbpf_overload	libbpf_common.h	59;"	d
___libbpf_select	build/usr/include/bpf/libbpf_common.h	56;"	d
___libbpf_select	libbpf_common.h	56;"	d
___narg	bpf_core_read.h	260;"	d
___narg	build/usr/include/bpf/bpf_core_read.h	260;"	d
___nolast	bpf_core_read.h	289;"	d
___nolast	build/usr/include/bpf/bpf_core_read.h	289;"	d
___nolast10	bpf_core_read.h	288;"	d
___nolast10	build/usr/include/bpf/bpf_core_read.h	288;"	d
___nolast2	bpf_core_read.h	280;"	d
___nolast2	build/usr/include/bpf/bpf_core_read.h	280;"	d
___nolast3	bpf_core_read.h	281;"	d
___nolast3	build/usr/include/bpf/bpf_core_read.h	281;"	d
___nolast4	bpf_core_read.h	282;"	d
___nolast4	build/usr/include/bpf/bpf_core_read.h	282;"	d
___nolast5	bpf_core_read.h	283;"	d
___nolast5	build/usr/include/bpf/bpf_core_read.h	283;"	d
___nolast6	bpf_core_read.h	284;"	d
___nolast6	build/usr/include/bpf/bpf_core_read.h	284;"	d
___nolast7	bpf_core_read.h	285;"	d
___nolast7	build/usr/include/bpf/bpf_core_read.h	285;"	d
___nolast8	bpf_core_read.h	286;"	d
___nolast8	build/usr/include/bpf/bpf_core_read.h	286;"	d
___nolast9	bpf_core_read.h	287;"	d
___nolast9	build/usr/include/bpf/bpf_core_read.h	287;"	d
___nth	bpf_core_read.h	254;"	d
___nth	build/usr/include/bpf/bpf_core_read.h	254;"	d
___perf_buffer_new3	build/usr/include/bpf/libbpf.h	1315;"	d
___perf_buffer_new3	libbpf.h	1315;"	d
___perf_buffer_new6	build/usr/include/bpf/libbpf.h	1313;"	d
___perf_buffer_new6	libbpf.h	1313;"	d
___perf_buffer_new_raw3	build/usr/include/bpf/libbpf.h	1374;"	d
___perf_buffer_new_raw3	libbpf.h	1374;"	d
___perf_buffer_new_raw6	build/usr/include/bpf/libbpf.h	1372;"	d
___perf_buffer_new_raw6	libbpf.h	1372;"	d
___rd_first	bpf_core_read.h	309;"	d
___rd_first	build/usr/include/bpf/bpf_core_read.h	309;"	d
___rd_last	bpf_core_read.h	310;"	d
___rd_last	build/usr/include/bpf/bpf_core_read.h	310;"	d
___rd_p1	bpf_core_read.h	312;"	d
___rd_p1	build/usr/include/bpf/bpf_core_read.h	312;"	d
___rd_p2	bpf_core_read.h	313;"	d
___rd_p2	build/usr/include/bpf/bpf_core_read.h	313;"	d
___rd_p3	bpf_core_read.h	314;"	d
___rd_p3	build/usr/include/bpf/bpf_core_read.h	314;"	d
___rd_p4	bpf_core_read.h	315;"	d
___rd_p4	build/usr/include/bpf/bpf_core_read.h	315;"	d
___rd_p5	bpf_core_read.h	316;"	d
___rd_p5	build/usr/include/bpf/bpf_core_read.h	316;"	d
___rd_p6	bpf_core_read.h	317;"	d
___rd_p6	build/usr/include/bpf/bpf_core_read.h	317;"	d
___rd_p7	bpf_core_read.h	318;"	d
___rd_p7	build/usr/include/bpf/bpf_core_read.h	318;"	d
___rd_p8	bpf_core_read.h	319;"	d
___rd_p8	build/usr/include/bpf/bpf_core_read.h	319;"	d
___rd_p9	bpf_core_read.h	320;"	d
___rd_p9	build/usr/include/bpf/bpf_core_read.h	320;"	d
___read	bpf_core_read.h	305;"	d
___read	build/usr/include/bpf/bpf_core_read.h	305;"	d
___read_ptrs	bpf_core_read.h	321;"	d
___read_ptrs	build/usr/include/bpf/bpf_core_read.h	321;"	d
___type	bpf_core_read.h	303;"	d
___type	build/usr/include/bpf/bpf_core_read.h	303;"	d
__alias	libbpf_internal.h	96;"	d
__always_inline	bpf_helpers.h	32;"	d
__always_inline	bpf_helpers.h	33;"	d
__always_inline	build/usr/include/bpf/bpf_helpers.h	32;"	d
__always_inline	build/usr/include/bpf/bpf_helpers.h	33;"	d
__array	bpf_helpers.h	15;"	d
__array	build/usr/include/bpf/bpf_helpers.h	15;"	d
__base_pr	libbpf.c	/^static int __base_pr(enum libbpf_print_level level, const char *format,$/;"	f	file:
__bpf_be64_to_cpu	bpf_endian.h	59;"	d
__bpf_be64_to_cpu	bpf_endian.h	72;"	d
__bpf_be64_to_cpu	build/usr/include/bpf/bpf_endian.h	59;"	d
__bpf_be64_to_cpu	build/usr/include/bpf/bpf_endian.h	72;"	d
__bpf_constant_be64_to_cpu	bpf_endian.h	61;"	d
__bpf_constant_be64_to_cpu	bpf_endian.h	74;"	d
__bpf_constant_be64_to_cpu	build/usr/include/bpf/bpf_endian.h	61;"	d
__bpf_constant_be64_to_cpu	build/usr/include/bpf/bpf_endian.h	74;"	d
__bpf_constant_cpu_to_be64	bpf_endian.h	62;"	d
__bpf_constant_cpu_to_be64	bpf_endian.h	75;"	d
__bpf_constant_cpu_to_be64	build/usr/include/bpf/bpf_endian.h	62;"	d
__bpf_constant_cpu_to_be64	build/usr/include/bpf/bpf_endian.h	75;"	d
__bpf_constant_htonl	bpf_endian.h	58;"	d
__bpf_constant_htonl	bpf_endian.h	71;"	d
__bpf_constant_htonl	build/usr/include/bpf/bpf_endian.h	58;"	d
__bpf_constant_htonl	build/usr/include/bpf/bpf_endian.h	71;"	d
__bpf_constant_htons	bpf_endian.h	54;"	d
__bpf_constant_htons	bpf_endian.h	67;"	d
__bpf_constant_htons	build/usr/include/bpf/bpf_endian.h	54;"	d
__bpf_constant_htons	build/usr/include/bpf/bpf_endian.h	67;"	d
__bpf_constant_ntohl	bpf_endian.h	57;"	d
__bpf_constant_ntohl	bpf_endian.h	70;"	d
__bpf_constant_ntohl	build/usr/include/bpf/bpf_endian.h	57;"	d
__bpf_constant_ntohl	build/usr/include/bpf/bpf_endian.h	70;"	d
__bpf_constant_ntohs	bpf_endian.h	53;"	d
__bpf_constant_ntohs	bpf_endian.h	66;"	d
__bpf_constant_ntohs	build/usr/include/bpf/bpf_endian.h	53;"	d
__bpf_constant_ntohs	build/usr/include/bpf/bpf_endian.h	66;"	d
__bpf_cpu_to_be64	bpf_endian.h	60;"	d
__bpf_cpu_to_be64	bpf_endian.h	73;"	d
__bpf_cpu_to_be64	build/usr/include/bpf/bpf_endian.h	60;"	d
__bpf_cpu_to_be64	build/usr/include/bpf/bpf_endian.h	73;"	d
__bpf_htonl	bpf_endian.h	56;"	d
__bpf_htonl	bpf_endian.h	69;"	d
__bpf_htonl	build/usr/include/bpf/bpf_endian.h	56;"	d
__bpf_htonl	build/usr/include/bpf/bpf_endian.h	69;"	d
__bpf_htons	bpf_endian.h	52;"	d
__bpf_htons	bpf_endian.h	65;"	d
__bpf_htons	build/usr/include/bpf/bpf_endian.h	52;"	d
__bpf_htons	build/usr/include/bpf/bpf_endian.h	65;"	d
__bpf_map__iter	libbpf.c	/^__bpf_map__iter(const struct bpf_map *m, const struct bpf_object *obj, int i)$/;"	f	file:
__bpf_ntohl	bpf_endian.h	55;"	d
__bpf_ntohl	bpf_endian.h	68;"	d
__bpf_ntohl	build/usr/include/bpf/bpf_endian.h	55;"	d
__bpf_ntohl	build/usr/include/bpf/bpf_endian.h	68;"	d
__bpf_ntohs	bpf_endian.h	51;"	d
__bpf_ntohs	bpf_endian.h	64;"	d
__bpf_ntohs	build/usr/include/bpf/bpf_endian.h	51;"	d
__bpf_ntohs	build/usr/include/bpf/bpf_endian.h	64;"	d
__bpf_object__open_xattr	libbpf.c	/^__bpf_object__open_xattr(struct bpf_object_open_attr *attr, int flags)$/;"	f	file:
__bpf_printk	bpf_helpers.h	251;"	d
__bpf_printk	build/usr/include/bpf/bpf_helpers.h	251;"	d
__bpf_program__iter	libbpf.c	/^__bpf_program__iter(const struct bpf_program *p, const struct bpf_object *obj,$/;"	f	file:
__bpf_program__pin_name	libbpf.c	/^static char *__bpf_program__pin_name(struct bpf_program *prog)$/;"	f	file:
__bpf_set_link_xdp_fd_replace	netlink.c	/^static int __bpf_set_link_xdp_fd_replace(int ifindex, int fd, int old_fd,$/;"	f	file:
__bpf_tc_detach	netlink.c	/^static int __bpf_tc_detach(const struct bpf_tc_hook *hook,$/;"	f	file:
__bpf_unreachable	bpf_helpers.h	115;"	d
__bpf_unreachable	build/usr/include/bpf/bpf_helpers.h	115;"	d
__bpf_usdt_arg_spec	build/usr/include/bpf/usdt.bpf.h	/^struct __bpf_usdt_arg_spec {$/;"	s
__bpf_usdt_arg_spec	usdt.bpf.h	/^struct __bpf_usdt_arg_spec {$/;"	s
__bpf_usdt_arg_type	build/usr/include/bpf/usdt.bpf.h	/^enum __bpf_usdt_arg_type {$/;"	g
__bpf_usdt_arg_type	usdt.bpf.h	/^enum __bpf_usdt_arg_type {$/;"	g
__bpf_usdt_spec	build/usr/include/bpf/usdt.bpf.h	/^struct __bpf_usdt_spec {$/;"	s
__bpf_usdt_spec	usdt.bpf.h	/^struct __bpf_usdt_spec {$/;"	s
__bpf_usdt_spec_id	build/usr/include/bpf/usdt.bpf.h	/^int __bpf_usdt_spec_id(struct pt_regs *ctx)$/;"	f
__bpf_usdt_spec_id	usdt.bpf.h	/^int __bpf_usdt_spec_id(struct pt_regs *ctx)$/;"	f
__bpf_vprintk	bpf_helpers.h	262;"	d
__bpf_vprintk	build/usr/include/bpf/bpf_helpers.h	262;"	d
__btf_kind_str	libbpf.c	/^static const char *__btf_kind_str(__u16 kind)$/;"	f	file:
__dump_link_nlmsg	netlink.c	/^static int __dump_link_nlmsg(struct nlmsghdr *nlh,$/;"	f	file:
__dump_nlmsg_t	netlink.c	/^typedef int (*__dump_nlmsg_t)(struct nlmsghdr *nlmsg, libbpf_dump_nlmsg_t,$/;"	t	file:
__emit_sys_close	gen_loader.c	/^static void __emit_sys_close(struct bpf_gen *gen)$/;"	f	file:
__get_tc_info	netlink.c	/^static int __get_tc_info(void *cookie, struct tcmsg *tc, struct nlattr **tb,$/;"	f	file:
__has_builtin	libbpf_internal.h	160;"	d
__hidden	bpf_helpers.h	48;"	d
__hidden	build/usr/include/bpf/bpf_helpers.h	48;"	d
__kconfig	bpf_helpers.h	174;"	d
__kconfig	build/usr/include/bpf/bpf_helpers.h	174;"	d
__kptr	bpf_helpers.h	176;"	d
__kptr	build/usr/include/bpf/bpf_helpers.h	176;"	d
__kptr_ref	bpf_helpers.h	177;"	d
__kptr_ref	build/usr/include/bpf/bpf_helpers.h	177;"	d
__ksym	bpf_helpers.h	175;"	d
__ksym	build/usr/include/bpf/bpf_helpers.h	175;"	d
__libbpf_pr	libbpf.c	/^static libbpf_print_fn_t __libbpf_pr = __base_pr;$/;"	v	file:
__noinline	bpf_helpers.h	36;"	d
__noinline	build/usr/include/bpf/bpf_helpers.h	36;"	d
__perf_buffer__new	libbpf.c	/^static struct perf_buffer *__perf_buffer__new(int map_fd, size_t page_cnt,$/;"	f	file:
__pr	libbpf_internal.h	150;"	d
__printf	libbpf.c	70;"	d	file:
__type	bpf_helpers.h	14;"	d
__type	build/usr/include/bpf/bpf_helpers.h	14;"	d
__uint	bpf_helpers.h	13;"	d
__uint	build/usr/include/bpf/bpf_helpers.h	13;"	d
__weak	bpf_helpers.h	39;"	d
__weak	build/usr/include/bpf/bpf_helpers.h	39;"	d
__xsk_setup_xdp_prog	xsk.c	/^static int __xsk_setup_xdp_prog(struct xsk_socket *_xdp, int *xsks_map_fd)$/;"	f	file:
abs_ip	usdt.c	/^		long abs_ip;$/;"	m	struct:bpf_link_usdt::__anon20	file:
abs_ip	usdt.c	/^	long abs_ip;$/;"	m	struct:usdt_target	file:
add_btf_ext_rec	linker.c	/^static void *add_btf_ext_rec(struct btf_ext_sec_data *ext_data, const void *src_rec)$/;"	f	file:
add_data	gen_loader.c	/^static int add_data(struct bpf_gen *gen, const void *data, __u32 size)$/;"	f	file:
add_dst_sec	linker.c	/^static struct dst_sec *add_dst_sec(struct bpf_linker *linker, const char *sec_name)$/;"	f	file:
add_dummy_ksym_var	libbpf.c	/^static int add_dummy_ksym_var(struct btf *btf)$/;"	f	file:
add_glob_sym	linker.c	/^static struct glob_sym *add_glob_sym(struct bpf_linker *linker)$/;"	f	file:
add_kfunc_btf_fd	gen_loader.c	/^static int add_kfunc_btf_fd(struct bpf_gen *gen)$/;"	f	file:
add_kprobe_event_legacy	libbpf.c	/^static int add_kprobe_event_legacy(const char *probe_name, bool retprobe,$/;"	f	file:
add_map_fd	gen_loader.c	/^static int add_map_fd(struct bpf_gen *gen)$/;"	f	file:
add_new_sym	linker.c	/^static Elf64_Sym *add_new_sym(struct bpf_linker *linker, size_t *sym_idx)$/;"	f	file:
add_src_sec	linker.c	/^static struct src_sec *add_src_sec(struct src_obj *obj, const char *sec_name)$/;"	f	file:
add_uprobe_event_legacy	libbpf.c	/^static inline int add_uprobe_event_legacy(const char *probe_name, bool retprobe,$/;"	f	file:
addr	build/usr/include/bpf/libbpf.h	/^	void **addr;$/;"	m	struct:bpf_var_skeleton
addr	libbpf.c	/^			unsigned long long addr;$/;"	m	struct:extern_desc::__anon42::__anon44	file:
addr	libbpf.h	/^	void **addr;$/;"	m	struct:bpf_var_skeleton
addrs	bpf.h	/^			const unsigned long *addrs;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon15
addrs	build/usr/include/bpf/bpf.h	/^			const unsigned long *addrs;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon33
addrs	build/usr/include/bpf/libbpf.h	/^	const unsigned long *addrs;$/;"	m	struct:bpf_kprobe_multi_opts
addrs	libbpf.c	/^	unsigned long *addrs;$/;"	m	struct:kprobe_multi_resolve	file:
addrs	libbpf.h	/^	const unsigned long *addrs;$/;"	m	struct:bpf_kprobe_multi_opts
adjust_prog_btf_ext_info	libbpf.c	/^static int adjust_prog_btf_ext_info(const struct bpf_object *obj,$/;"	f	file:
adjust_ringbuf_sz	libbpf.c	/^static size_t adjust_ringbuf_sz(size_t sz)$/;"	f	file:
align	libbpf.c	/^			int align;$/;"	m	struct:extern_desc::__anon42::__anon43	file:
alloc_iov	netlink.c	/^static int alloc_iov(struct iovec *iov, int len)$/;"	f	file:
alloc_zero_tailing_info	bpf.c	/^alloc_zero_tailing_info(const void *orecord, __u32 cnt,$/;"	f	file:
allocate_spec_id	usdt.c	/^static int allocate_spec_id(struct usdt_manager *man, struct hashmap *specs_hash,$/;"	f	file:
append_buf	relo_core.c	1065;"	d	file:
append_buf	relo_core.c	1116;"	d	file:
append_subprog_relos	libbpf.c	/^static int append_subprog_relos(struct bpf_program *main_prog, struct bpf_program *subprog)$/;"	f	file:
append_to_file	libbpf.c	/^static int append_to_file(const char *file, const char *fmt, ...)$/;"	f	file:
arch_specific_lib_paths	libbpf.c	/^static const char *arch_specific_lib_paths(void)$/;"	f	file:
arg_bitshift	build/usr/include/bpf/usdt.bpf.h	/^	char arg_bitshift;$/;"	m	struct:__bpf_usdt_arg_spec
arg_bitshift	usdt.bpf.h	/^	char arg_bitshift;$/;"	m	struct:__bpf_usdt_arg_spec
arg_bitshift	usdt.c	/^	char arg_bitshift;$/;"	m	struct:usdt_arg_spec	file:
arg_cnt	build/usr/include/bpf/usdt.bpf.h	/^	short arg_cnt;$/;"	m	struct:__bpf_usdt_spec
arg_cnt	usdt.bpf.h	/^	short arg_cnt;$/;"	m	struct:__bpf_usdt_spec
arg_cnt	usdt.c	/^	short arg_cnt;$/;"	m	struct:usdt_spec	file:
arg_signed	build/usr/include/bpf/usdt.bpf.h	/^	bool arg_signed;$/;"	m	struct:__bpf_usdt_arg_spec
arg_signed	usdt.bpf.h	/^	bool arg_signed;$/;"	m	struct:__bpf_usdt_arg_spec
arg_signed	usdt.c	/^	bool arg_signed;$/;"	m	struct:usdt_arg_spec	file:
arg_type	build/usr/include/bpf/usdt.bpf.h	/^	enum __bpf_usdt_arg_type arg_type;$/;"	m	struct:__bpf_usdt_arg_spec	typeref:enum:__bpf_usdt_arg_spec::__bpf_usdt_arg_type
arg_type	usdt.bpf.h	/^	enum __bpf_usdt_arg_type arg_type;$/;"	m	struct:__bpf_usdt_arg_spec	typeref:enum:__bpf_usdt_arg_spec::__bpf_usdt_arg_type
arg_type	usdt.c	/^	enum usdt_arg_type arg_type;$/;"	m	struct:usdt_arg_spec	typeref:enum:usdt_arg_spec::usdt_arg_type	file:
args	build/usr/include/bpf/usdt.bpf.h	/^	struct __bpf_usdt_arg_spec args[BPF_USDT_MAX_ARG_CNT];$/;"	m	struct:__bpf_usdt_spec	typeref:struct:__bpf_usdt_spec::__bpf_usdt_arg_spec
args	usdt.bpf.h	/^	struct __bpf_usdt_arg_spec args[BPF_USDT_MAX_ARG_CNT];$/;"	m	struct:__bpf_usdt_spec	typeref:struct:__bpf_usdt_spec::__bpf_usdt_arg_spec
args	usdt.c	/^	const char *args;$/;"	m	struct:usdt_note	file:
args	usdt.c	/^	struct usdt_arg_spec args[USDT_MAX_ARG_CNT];$/;"	m	struct:usdt_spec	typeref:struct:usdt_spec::usdt_arg_spec	file:
array_offset	libbpf.c	/^	int	array_offset;	\/* e.g. offset of jited_prog_insns *\/$/;"	m	struct:bpf_prog_info_array_desc	file:
arrays	build/usr/include/bpf/libbpf.h	/^	__u64			arrays;$/;"	m	struct:bpf_prog_info_linear
arrays	libbpf.h	/^	__u64			arrays;$/;"	m	struct:bpf_prog_info_linear
attach_btf_id	bpf.h	/^		__u32 attach_btf_id;$/;"	m	union:bpf_load_program_attr::__anon12
attach_btf_id	bpf.h	/^	__u32 attach_btf_id;$/;"	m	struct:bpf_prog_load_opts
attach_btf_id	build/usr/include/bpf/bpf.h	/^		__u32 attach_btf_id;$/;"	m	union:bpf_load_program_attr::__anon30
attach_btf_id	build/usr/include/bpf/bpf.h	/^	__u32 attach_btf_id;$/;"	m	struct:bpf_prog_load_opts
attach_btf_id	libbpf.c	/^	__u32 attach_btf_id;$/;"	m	struct:bpf_program	file:
attach_btf_obj_fd	bpf.h	/^	__u32 attach_btf_obj_fd;$/;"	m	struct:bpf_prog_load_opts
attach_btf_obj_fd	build/usr/include/bpf/bpf.h	/^	__u32 attach_btf_obj_fd;$/;"	m	struct:bpf_prog_load_opts
attach_btf_obj_fd	libbpf.c	/^	__u32 attach_btf_obj_fd;$/;"	m	struct:bpf_program	file:
attach_iter	libbpf.c	/^static int attach_iter(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_kind	bpf_gen_internal.h	/^	int attach_kind;$/;"	m	struct:bpf_gen
attach_kprobe	libbpf.c	/^static int attach_kprobe(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_kprobe_multi	libbpf.c	/^static int attach_kprobe_multi(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_lsm	libbpf.c	/^static int attach_lsm(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_mode	build/usr/include/bpf/libbpf.h	/^	__u8 attach_mode;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
attach_mode	build/usr/include/bpf/libbpf.h	/^	__u8 attach_mode;$/;"	m	struct:xdp_link_info
attach_mode	libbpf.h	/^	__u8 attach_mode;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
attach_mode	libbpf.h	/^	__u8 attach_mode;$/;"	m	struct:xdp_link_info
attach_point	build/usr/include/bpf/libbpf.h	/^	enum bpf_tc_attach_point attach_point;$/;"	m	struct:bpf_tc_hook	typeref:enum:bpf_tc_hook::bpf_tc_attach_point
attach_point	libbpf.h	/^	enum bpf_tc_attach_point attach_point;$/;"	m	struct:bpf_tc_hook	typeref:enum:bpf_tc_hook::bpf_tc_attach_point
attach_point_to_config	netlink.c	/^static int attach_point_to_config(struct bpf_tc_hook *hook,$/;"	f	file:
attach_prog_fd	bpf.h	/^		__u32 attach_prog_fd;$/;"	m	union:bpf_load_program_attr::__anon11
attach_prog_fd	bpf.h	/^	__u32 attach_prog_fd;$/;"	m	struct:bpf_prog_load_opts
attach_prog_fd	build/usr/include/bpf/bpf.h	/^		__u32 attach_prog_fd;$/;"	m	union:bpf_load_program_attr::__anon29
attach_prog_fd	build/usr/include/bpf/bpf.h	/^	__u32 attach_prog_fd;$/;"	m	struct:bpf_prog_load_opts
attach_prog_fd	build/usr/include/bpf/libbpf.h	/^	__u32 attach_prog_fd;$/;"	m	struct:bpf_object_open_opts
attach_prog_fd	libbpf.c	/^	__u32 attach_prog_fd;$/;"	m	struct:bpf_program	file:
attach_prog_fd	libbpf.h	/^	__u32 attach_prog_fd;$/;"	m	struct:bpf_object_open_opts
attach_raw_tp	libbpf.c	/^static int attach_raw_tp(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_target	bpf_gen_internal.h	/^	char attach_target[128];$/;"	m	struct:bpf_gen
attach_tp	libbpf.c	/^static int attach_tp(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_trace	libbpf.c	/^static int attach_trace(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_uprobe	libbpf.c	/^static int attach_uprobe(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attach_usdt	libbpf.c	/^static int attach_usdt(const struct bpf_program *prog, long cookie, struct bpf_link **link)$/;"	f	file:
attempts	bpf.h	/^	int attempts;$/;"	m	struct:bpf_prog_load_opts
attempts	build/usr/include/bpf/bpf.h	/^	int attempts;$/;"	m	struct:bpf_prog_load_opts
attr	build/usr/include/bpf/libbpf.h	/^			struct perf_event_attr *attr;$/;"	m	struct:perf_buffer_raw_opts::__anon25::__anon27	typeref:struct:perf_buffer_raw_opts::__anon25::__anon27::perf_event_attr
attr	libbpf.c	/^	struct perf_event_attr *attr;$/;"	m	struct:perf_buffer_params	typeref:struct:perf_buffer_params::perf_event_attr	file:
attr	libbpf.h	/^			struct perf_event_attr *attr;$/;"	m	struct:perf_buffer_raw_opts::__anon7::__anon9	typeref:struct:perf_buffer_raw_opts::__anon7::__anon9::perf_event_attr
attr_field	gen_loader.c	43;"	d	file:
autocreate	libbpf.c	/^	bool autocreate;$/;"	m	struct:bpf_map	file:
autoload	libbpf.c	/^	bool autoload;$/;"	m	struct:bpf_program	file:
barrier	bpf_helpers.h	82;"	d
barrier	build/usr/include/bpf/bpf_helpers.h	82;"	d
barrier_var	bpf_helpers.h	99;"	d
barrier_var	build/usr/include/bpf/bpf_helpers.h	99;"	d
base	libbpf.c	/^	void *base; \/* mmap()'ed memory *\/$/;"	m	struct:perf_cpu_buf	file:
base_addr	usdt.c	/^	long base_addr;$/;"	m	struct:usdt_note	file:
base_btf	btf.c	/^	struct btf *base_btf;$/;"	m	struct:btf	typeref:struct:btf::btf	file:
batch_size	bpf.h	/^	__u32 batch_size;$/;"	m	struct:bpf_test_run_opts
batch_size	build/usr/include/bpf/bpf.h	/^	__u32 batch_size;$/;"	m	struct:bpf_test_run_opts
bind_flags	build/usr/include/bpf/xsk.h	/^	__u16 bind_flags;$/;"	m	struct:xsk_socket_config
bind_flags	xsk.h	/^	__u16 bind_flags;$/;"	m	struct:xsk_socket_config
bit_offset	relo_core.h	/^	__u32 bit_offset;$/;"	m	struct:bpf_core_spec
blob_fd_array_off	gen_loader.c	/^static int blob_fd_array_off(struct bpf_gen *gen, int index)$/;"	f	file:
bpf_be64_to_cpu	bpf_endian.h	95;"	d
bpf_be64_to_cpu	build/usr/include/bpf/bpf_endian.h	95;"	d
bpf_bind	bpf_helper_defs.h	/^static long (*bpf_bind)(struct bpf_sock_addr *ctx, struct sockaddr *addr, int addr_len) = (void *) 64;$/;"	v
bpf_bind	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_bind)(struct bpf_sock_addr *ctx, struct sockaddr *addr, int addr_len) = (void *) 64;$/;"	v
bpf_bprm_opts_set	bpf_helper_defs.h	/^static long (*bpf_bprm_opts_set)(struct linux_binprm *bprm, __u64 flags) = (void *) 159;$/;"	v
bpf_bprm_opts_set	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_bprm_opts_set)(struct linux_binprm *bprm, __u64 flags) = (void *) 159;$/;"	v
bpf_btf_find_by_name_kind	bpf_helper_defs.h	/^static long (*bpf_btf_find_by_name_kind)(char *name, int name_sz, __u32 kind, int flags) = (void *) 167;$/;"	v
bpf_btf_find_by_name_kind	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_btf_find_by_name_kind)(char *name, int name_sz, __u32 kind, int flags) = (void *) 167;$/;"	v
bpf_btf_get_fd_by_id	bpf.c	/^int bpf_btf_get_fd_by_id(__u32 id)$/;"	f
bpf_btf_get_next_id	bpf.c	/^int bpf_btf_get_next_id(__u32 start_id, __u32 *next_id)$/;"	f
bpf_btf_load	bpf.c	/^int bpf_btf_load(const void *btf_data, size_t btf_size, const struct bpf_btf_load_opts *opts)$/;"	f
bpf_btf_load_opts	bpf.h	/^struct bpf_btf_load_opts {$/;"	s
bpf_btf_load_opts	build/usr/include/bpf/bpf.h	/^struct bpf_btf_load_opts {$/;"	s
bpf_btf_load_opts__last_field	bpf.h	227;"	d
bpf_btf_load_opts__last_field	build/usr/include/bpf/bpf.h	227;"	d
bpf_cb_ctx	netlink.c	/^struct bpf_cb_ctx {$/;"	s	file:
bpf_check_mtu	bpf_helper_defs.h	/^static long (*bpf_check_mtu)(void *ctx, __u32 ifindex, __u32 *mtu_len, __s32 len_diff, __u64 flags) = (void *) 163;$/;"	v
bpf_check_mtu	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_check_mtu)(void *ctx, __u32 ifindex, __u32 *mtu_len, __s32 len_diff, __u64 flags) = (void *) 163;$/;"	v
bpf_clone_redirect	bpf_helper_defs.h	/^static long (*bpf_clone_redirect)(struct __sk_buff *skb, __u32 ifindex, __u64 flags) = (void *) 13;$/;"	v
bpf_clone_redirect	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_clone_redirect)(struct __sk_buff *skb, __u32 ifindex, __u64 flags) = (void *) 13;$/;"	v
bpf_cookie	bpf.h	/^			__u64 bpf_cookie;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon14
bpf_cookie	build/usr/include/bpf/bpf.h	/^			__u64 bpf_cookie;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon32
bpf_cookie	build/usr/include/bpf/libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_kprobe_opts
bpf_cookie	build/usr/include/bpf/libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_perf_event_opts
bpf_cookie	build/usr/include/bpf/libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_tracepoint_opts
bpf_cookie	build/usr/include/bpf/libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_uprobe_opts
bpf_cookie	libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_kprobe_opts
bpf_cookie	libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_perf_event_opts
bpf_cookie	libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_tracepoint_opts
bpf_cookie	libbpf.h	/^	__u64 bpf_cookie;$/;"	m	struct:bpf_uprobe_opts
bpf_copy_from_user	bpf_helper_defs.h	/^static long (*bpf_copy_from_user)(void *dst, __u32 size, const void *user_ptr) = (void *) 148;$/;"	v
bpf_copy_from_user	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_copy_from_user)(void *dst, __u32 size, const void *user_ptr) = (void *) 148;$/;"	v
bpf_copy_from_user_task	bpf_helper_defs.h	/^static long (*bpf_copy_from_user_task)(void *dst, __u32 size, const void *user_ptr, struct task_struct *tsk, __u64 flags) = (void *) 191;$/;"	v
bpf_copy_from_user_task	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_copy_from_user_task)(void *dst, __u32 size, const void *user_ptr, struct task_struct *tsk, __u64 flags) = (void *) 191;$/;"	v
bpf_core_accessor	relo_core.h	/^struct bpf_core_accessor {$/;"	s
bpf_core_add_cands	libbpf.c	/^int bpf_core_add_cands(struct bpf_core_cand *local_cand,$/;"	f
bpf_core_calc_enumval_relo	relo_core.c	/^static int bpf_core_calc_enumval_relo(const struct bpf_core_relo *relo,$/;"	f	file:
bpf_core_calc_field_relo	relo_core.c	/^static int bpf_core_calc_field_relo(const char *prog_name,$/;"	f	file:
bpf_core_calc_relo	relo_core.c	/^static int bpf_core_calc_relo(const char *prog_name,$/;"	f	file:
bpf_core_calc_relo_insn	relo_core.c	/^int bpf_core_calc_relo_insn(const char *prog_name,$/;"	f
bpf_core_calc_type_relo	relo_core.c	/^static int bpf_core_calc_type_relo(const struct bpf_core_relo *relo,$/;"	f	file:
bpf_core_cand	relo_core.h	/^struct bpf_core_cand {$/;"	s
bpf_core_cand_list	relo_core.h	/^struct bpf_core_cand_list {$/;"	s
bpf_core_enum_value	bpf_core_read.h	215;"	d
bpf_core_enum_value	build/usr/include/bpf/bpf_core_read.h	215;"	d
bpf_core_enum_value_exists	bpf_core_read.h	204;"	d
bpf_core_enum_value_exists	build/usr/include/bpf/bpf_core_read.h	204;"	d
bpf_core_equal_fn	libbpf.c	/^static bool bpf_core_equal_fn(const void *k1, const void *k2, void *ctx)$/;"	f	file:
bpf_core_essential_name_len	libbpf.c	/^size_t bpf_core_essential_name_len(const char *name)$/;"	f
bpf_core_field_exists	bpf_core_read.h	130;"	d
bpf_core_field_exists	build/usr/include/bpf/bpf_core_read.h	130;"	d
bpf_core_field_offset	bpf_core_read.h	155;"	d
bpf_core_field_offset	build/usr/include/bpf/bpf_core_read.h	155;"	d
bpf_core_field_size	bpf_core_read.h	143;"	d
bpf_core_field_size	build/usr/include/bpf/bpf_core_read.h	143;"	d
bpf_core_fields_are_compat	relo_core.c	/^static int bpf_core_fields_are_compat(const struct btf *local_btf,$/;"	f	file:
bpf_core_find_cands	libbpf.c	/^bpf_core_find_cands(struct bpf_object *obj, const struct btf *local_btf, __u32 local_type_id)$/;"	f	file:
bpf_core_format_spec	relo_core.c	/^int bpf_core_format_spec(char *buf, size_t buf_sz, const struct bpf_core_spec *spec)$/;"	f
bpf_core_free_cands	libbpf.c	/^void bpf_core_free_cands(struct bpf_core_cand_list *cands)$/;"	f
bpf_core_hash_fn	libbpf.c	/^static size_t bpf_core_hash_fn(const void *key, void *ctx)$/;"	f	file:
bpf_core_is_flavor_sep	libbpf.c	/^static bool bpf_core_is_flavor_sep(const char *s)$/;"	f	file:
bpf_core_match_member	relo_core.c	/^static int bpf_core_match_member(const struct btf *local_btf,$/;"	f	file:
bpf_core_parse_spec	relo_core.c	/^int bpf_core_parse_spec(const char *prog_name, const struct btf *btf,$/;"	f
bpf_core_patch_insn	relo_core.c	/^int bpf_core_patch_insn(const char *prog_name, struct bpf_insn *insn,$/;"	f
bpf_core_poison_insn	relo_core.c	/^static void bpf_core_poison_insn(const char *prog_name, int relo_idx,$/;"	f	file:
bpf_core_read	bpf_core_read.h	234;"	d
bpf_core_read	build/usr/include/bpf/bpf_core_read.h	234;"	d
bpf_core_read_str	bpf_core_read.h	245;"	d
bpf_core_read_str	build/usr/include/bpf/bpf_core_read.h	245;"	d
bpf_core_read_user	bpf_core_read.h	238;"	d
bpf_core_read_user	build/usr/include/bpf/bpf_core_read.h	238;"	d
bpf_core_read_user_str	bpf_core_read.h	249;"	d
bpf_core_read_user_str	build/usr/include/bpf/bpf_core_read.h	249;"	d
bpf_core_relo_res	relo_core.h	/^struct bpf_core_relo_res {$/;"	s
bpf_core_resolve_relo	libbpf.c	/^static int bpf_core_resolve_relo(struct bpf_program *prog,$/;"	f	file:
bpf_core_spec	relo_core.h	/^struct bpf_core_spec {$/;"	s
bpf_core_spec_match	relo_core.c	/^static int bpf_core_spec_match(struct bpf_core_spec *local_spec,$/;"	f	file:
bpf_core_type_exists	bpf_core_read.h	183;"	d
bpf_core_type_exists	build/usr/include/bpf/bpf_core_read.h	183;"	d
bpf_core_type_id_kernel	bpf_core_read.h	173;"	d
bpf_core_type_id_kernel	build/usr/include/bpf/bpf_core_read.h	173;"	d
bpf_core_type_id_local	bpf_core_read.h	163;"	d
bpf_core_type_id_local	build/usr/include/bpf/bpf_core_read.h	163;"	d
bpf_core_type_size	bpf_core_read.h	193;"	d
bpf_core_type_size	build/usr/include/bpf/bpf_core_read.h	193;"	d
bpf_core_types_are_compat	libbpf.c	/^int bpf_core_types_are_compat(const struct btf *local_btf, __u32 local_id,$/;"	f
bpf_cpu_to_be64	bpf_endian.h	92;"	d
bpf_cpu_to_be64	build/usr/include/bpf/bpf_endian.h	92;"	d
bpf_create_map	bpf.c	/^int bpf_create_map(enum bpf_map_type map_type, int key_size,$/;"	f
bpf_create_map_attr	bpf.h	/^struct bpf_create_map_attr {$/;"	s
bpf_create_map_attr	build/usr/include/bpf/bpf.h	/^struct bpf_create_map_attr {$/;"	s
bpf_create_map_in_map	bpf.c	/^int bpf_create_map_in_map(enum bpf_map_type map_type, const char *name,$/;"	f
bpf_create_map_in_map_node	bpf.c	/^int bpf_create_map_in_map_node(enum bpf_map_type map_type, const char *name,$/;"	f
bpf_create_map_name	bpf.c	/^int bpf_create_map_name(enum bpf_map_type map_type, const char *name,$/;"	f
bpf_create_map_node	bpf.c	/^int bpf_create_map_node(enum bpf_map_type map_type, const char *name,$/;"	f
bpf_create_map_xattr	bpf.c	/^int bpf_create_map_xattr(const struct bpf_create_map_attr *create_attr)$/;"	f
bpf_csum_diff	bpf_helper_defs.h	/^static __s64 (*bpf_csum_diff)(__be32 *from, __u32 from_size, __be32 *to, __u32 to_size, __wsum seed) = (void *) 28;$/;"	v
bpf_csum_diff	build/usr/include/bpf/bpf_helper_defs.h	/^static __s64 (*bpf_csum_diff)(__be32 *from, __u32 from_size, __be32 *to, __u32 to_size, __wsum seed) = (void *) 28;$/;"	v
bpf_csum_level	bpf_helper_defs.h	/^static long (*bpf_csum_level)(struct __sk_buff *skb, __u64 level) = (void *) 135;$/;"	v
bpf_csum_level	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_csum_level)(struct __sk_buff *skb, __u64 level) = (void *) 135;$/;"	v
bpf_csum_update	bpf_helper_defs.h	/^static __s64 (*bpf_csum_update)(struct __sk_buff *skb, __wsum csum) = (void *) 40;$/;"	v
bpf_csum_update	build/usr/include/bpf/bpf_helper_defs.h	/^static __s64 (*bpf_csum_update)(struct __sk_buff *skb, __wsum csum) = (void *) 40;$/;"	v
bpf_current_task_under_cgroup	bpf_helper_defs.h	/^static long (*bpf_current_task_under_cgroup)(void *map, __u32 index) = (void *) 37;$/;"	v
bpf_current_task_under_cgroup	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_current_task_under_cgroup)(void *map, __u32 index) = (void *) 37;$/;"	v
bpf_d_path	bpf_helper_defs.h	/^static long (*bpf_d_path)(struct path *path, char *buf, __u32 sz) = (void *) 147;$/;"	v
bpf_d_path	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_d_path)(struct path *path, char *buf, __u32 sz) = (void *) 147;$/;"	v
bpf_enable_stats	bpf.c	/^int bpf_enable_stats(enum bpf_stats_type type)$/;"	f
bpf_enum_value_kind	bpf_core_read.h	/^enum bpf_enum_value_kind {$/;"	g
bpf_enum_value_kind	build/usr/include/bpf/bpf_core_read.h	/^enum bpf_enum_value_kind {$/;"	g
bpf_fib_lookup	bpf_helper_defs.h	/^static long (*bpf_fib_lookup)(void *ctx, struct bpf_fib_lookup *params, int plen, __u32 flags) = (void *) 69;$/;"	v
bpf_fib_lookup	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_fib_lookup)(void *ctx, struct bpf_fib_lookup *params, int plen, __u32 flags) = (void *) 69;$/;"	v
bpf_field_info_kind	bpf_core_read.h	/^enum bpf_field_info_kind {$/;"	g
bpf_field_info_kind	build/usr/include/bpf/bpf_core_read.h	/^enum bpf_field_info_kind {$/;"	g
bpf_find_vma	bpf_helper_defs.h	/^static long (*bpf_find_vma)(struct task_struct *task, __u64 addr, void *callback_fn, void *callback_ctx, __u64 flags) = (void *) 180;$/;"	v
bpf_find_vma	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_find_vma)(struct task_struct *task, __u64 addr, void *callback_fn, void *callback_ctx, __u64 flags) = (void *) 180;$/;"	v
bpf_for_each_map_elem	bpf_helper_defs.h	/^static long (*bpf_for_each_map_elem)(void *map, void *callback_fn, void *callback_ctx, __u64 flags) = (void *) 164;$/;"	v
bpf_for_each_map_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_for_each_map_elem)(void *map, void *callback_fn, void *callback_ctx, __u64 flags) = (void *) 164;$/;"	v
bpf_func_id___usdt	build/usr/include/bpf/usdt.bpf.h	/^enum bpf_func_id___usdt {$/;"	g
bpf_func_id___usdt	usdt.bpf.h	/^enum bpf_func_id___usdt {$/;"	g
bpf_func_info_min	libbpf_internal.h	/^struct bpf_func_info_min {$/;"	s
bpf_gen	bpf_gen_internal.h	/^struct bpf_gen {$/;"	s
bpf_gen__finish	gen_loader.c	/^int bpf_gen__finish(struct bpf_gen *gen, int nr_progs, int nr_maps)$/;"	f
bpf_gen__free	gen_loader.c	/^void bpf_gen__free(struct bpf_gen *gen)$/;"	f
bpf_gen__init	gen_loader.c	/^void bpf_gen__init(struct bpf_gen *gen, int log_level, int nr_progs, int nr_maps)$/;"	f
bpf_gen__load_btf	gen_loader.c	/^void bpf_gen__load_btf(struct bpf_gen *gen, const void *btf_raw_data,$/;"	f
bpf_gen__map_create	gen_loader.c	/^void bpf_gen__map_create(struct bpf_gen *gen,$/;"	f
bpf_gen__map_freeze	gen_loader.c	/^void bpf_gen__map_freeze(struct bpf_gen *gen, int map_idx)$/;"	f
bpf_gen__map_update_elem	gen_loader.c	/^void bpf_gen__map_update_elem(struct bpf_gen *gen, int map_idx, void *pvalue,$/;"	f
bpf_gen__populate_outer_map	gen_loader.c	/^void bpf_gen__populate_outer_map(struct bpf_gen *gen, int outer_map_idx, int slot,$/;"	f
bpf_gen__prog_load	gen_loader.c	/^void bpf_gen__prog_load(struct bpf_gen *gen,$/;"	f
bpf_gen__record_attach_target	gen_loader.c	/^void bpf_gen__record_attach_target(struct bpf_gen *gen, const char *attach_name,$/;"	f
bpf_gen__record_extern	gen_loader.c	/^void bpf_gen__record_extern(struct bpf_gen *gen, const char *name, bool is_weak,$/;"	f
bpf_gen__record_relo_core	gen_loader.c	/^void bpf_gen__record_relo_core(struct bpf_gen *gen,$/;"	f
bpf_get_attach_cookie	bpf_helper_defs.h	/^static __u64 (*bpf_get_attach_cookie)(void *ctx) = (void *) 174;$/;"	v
bpf_get_attach_cookie	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_attach_cookie)(void *ctx) = (void *) 174;$/;"	v
bpf_get_branch_snapshot	bpf_helper_defs.h	/^static long (*bpf_get_branch_snapshot)(void *entries, __u32 size, __u64 flags) = (void *) 176;$/;"	v
bpf_get_branch_snapshot	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_branch_snapshot)(void *entries, __u32 size, __u64 flags) = (void *) 176;$/;"	v
bpf_get_cgroup_classid	bpf_helper_defs.h	/^static __u32 (*bpf_get_cgroup_classid)(struct __sk_buff *skb) = (void *) 17;$/;"	v
bpf_get_cgroup_classid	build/usr/include/bpf/bpf_helper_defs.h	/^static __u32 (*bpf_get_cgroup_classid)(struct __sk_buff *skb) = (void *) 17;$/;"	v
bpf_get_current_ancestor_cgroup_id	bpf_helper_defs.h	/^static __u64 (*bpf_get_current_ancestor_cgroup_id)(int ancestor_level) = (void *) 123;$/;"	v
bpf_get_current_ancestor_cgroup_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_current_ancestor_cgroup_id)(int ancestor_level) = (void *) 123;$/;"	v
bpf_get_current_cgroup_id	bpf_helper_defs.h	/^static __u64 (*bpf_get_current_cgroup_id)(void) = (void *) 80;$/;"	v
bpf_get_current_cgroup_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_current_cgroup_id)(void) = (void *) 80;$/;"	v
bpf_get_current_comm	bpf_helper_defs.h	/^static long (*bpf_get_current_comm)(void *buf, __u32 size_of_buf) = (void *) 16;$/;"	v
bpf_get_current_comm	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_current_comm)(void *buf, __u32 size_of_buf) = (void *) 16;$/;"	v
bpf_get_current_pid_tgid	bpf_helper_defs.h	/^static __u64 (*bpf_get_current_pid_tgid)(void) = (void *) 14;$/;"	v
bpf_get_current_pid_tgid	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_current_pid_tgid)(void) = (void *) 14;$/;"	v
bpf_get_current_task	bpf_helper_defs.h	/^static __u64 (*bpf_get_current_task)(void) = (void *) 35;$/;"	v
bpf_get_current_task	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_current_task)(void) = (void *) 35;$/;"	v
bpf_get_current_task_btf	bpf_helper_defs.h	/^static struct task_struct *(*bpf_get_current_task_btf)(void) = (void *) 158;$/;"	v	typeref:struct:bpf_get_current_task_btf
bpf_get_current_task_btf	build/usr/include/bpf/bpf_helper_defs.h	/^static struct task_struct *(*bpf_get_current_task_btf)(void) = (void *) 158;$/;"	v	typeref:struct:bpf_get_current_task_btf
bpf_get_current_uid_gid	bpf_helper_defs.h	/^static __u64 (*bpf_get_current_uid_gid)(void) = (void *) 15;$/;"	v
bpf_get_current_uid_gid	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_current_uid_gid)(void) = (void *) 15;$/;"	v
bpf_get_func_arg	bpf_helper_defs.h	/^static long (*bpf_get_func_arg)(void *ctx, __u32 n, __u64 *value) = (void *) 183;$/;"	v
bpf_get_func_arg	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_func_arg)(void *ctx, __u32 n, __u64 *value) = (void *) 183;$/;"	v
bpf_get_func_arg_cnt	bpf_helper_defs.h	/^static long (*bpf_get_func_arg_cnt)(void *ctx) = (void *) 185;$/;"	v
bpf_get_func_arg_cnt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_func_arg_cnt)(void *ctx) = (void *) 185;$/;"	v
bpf_get_func_ip	bpf_helper_defs.h	/^static __u64 (*bpf_get_func_ip)(void *ctx) = (void *) 173;$/;"	v
bpf_get_func_ip	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_func_ip)(void *ctx) = (void *) 173;$/;"	v
bpf_get_func_ret	bpf_helper_defs.h	/^static long (*bpf_get_func_ret)(void *ctx, __u64 *value) = (void *) 184;$/;"	v
bpf_get_func_ret	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_func_ret)(void *ctx, __u64 *value) = (void *) 184;$/;"	v
bpf_get_hash_recalc	bpf_helper_defs.h	/^static __u32 (*bpf_get_hash_recalc)(struct __sk_buff *skb) = (void *) 34;$/;"	v
bpf_get_hash_recalc	build/usr/include/bpf/bpf_helper_defs.h	/^static __u32 (*bpf_get_hash_recalc)(struct __sk_buff *skb) = (void *) 34;$/;"	v
bpf_get_link_xdp_id	netlink.c	/^int bpf_get_link_xdp_id(int ifindex, __u32 *prog_id, __u32 flags)$/;"	f
bpf_get_link_xdp_info	netlink.c	/^int bpf_get_link_xdp_info(int ifindex, struct xdp_link_info *info,$/;"	f
bpf_get_listener_sock	bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_get_listener_sock)(struct bpf_sock *sk) = (void *) 98;$/;"	v	typeref:struct:bpf_get_listener_sock
bpf_get_listener_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_get_listener_sock)(struct bpf_sock *sk) = (void *) 98;$/;"	v	typeref:struct:bpf_get_listener_sock
bpf_get_local_storage	bpf_helper_defs.h	/^static void *(*bpf_get_local_storage)(void *map, __u64 flags) = (void *) 81;$/;"	v
bpf_get_local_storage	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_get_local_storage)(void *map, __u64 flags) = (void *) 81;$/;"	v
bpf_get_map_info_from_fdinfo	libbpf.c	/^static int bpf_get_map_info_from_fdinfo(int fd, struct bpf_map_info *info)$/;"	f	file:
bpf_get_netns_cookie	bpf_helper_defs.h	/^static __u64 (*bpf_get_netns_cookie)(void *ctx) = (void *) 122;$/;"	v
bpf_get_netns_cookie	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_netns_cookie)(void *ctx) = (void *) 122;$/;"	v
bpf_get_ns_current_pid_tgid	bpf_helper_defs.h	/^static long (*bpf_get_ns_current_pid_tgid)(__u64 dev, __u64 ino, struct bpf_pidns_info *nsdata, __u32 size) = (void *) 120;$/;"	v
bpf_get_ns_current_pid_tgid	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_ns_current_pid_tgid)(__u64 dev, __u64 ino, struct bpf_pidns_info *nsdata, __u32 size) = (void *) 120;$/;"	v
bpf_get_numa_node_id	bpf_helper_defs.h	/^static long (*bpf_get_numa_node_id)(void) = (void *) 42;$/;"	v
bpf_get_numa_node_id	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_numa_node_id)(void) = (void *) 42;$/;"	v
bpf_get_prandom_u32	bpf_helper_defs.h	/^static __u32 (*bpf_get_prandom_u32)(void) = (void *) 7;$/;"	v
bpf_get_prandom_u32	build/usr/include/bpf/bpf_helper_defs.h	/^static __u32 (*bpf_get_prandom_u32)(void) = (void *) 7;$/;"	v
bpf_get_retval	bpf_helper_defs.h	/^static int (*bpf_get_retval)(void) = (void *) 186;$/;"	v
bpf_get_retval	build/usr/include/bpf/bpf_helper_defs.h	/^static int (*bpf_get_retval)(void) = (void *) 186;$/;"	v
bpf_get_route_realm	bpf_helper_defs.h	/^static __u32 (*bpf_get_route_realm)(struct __sk_buff *skb) = (void *) 24;$/;"	v
bpf_get_route_realm	build/usr/include/bpf/bpf_helper_defs.h	/^static __u32 (*bpf_get_route_realm)(struct __sk_buff *skb) = (void *) 24;$/;"	v
bpf_get_smp_processor_id	bpf_helper_defs.h	/^static __u32 (*bpf_get_smp_processor_id)(void) = (void *) 8;$/;"	v
bpf_get_smp_processor_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u32 (*bpf_get_smp_processor_id)(void) = (void *) 8;$/;"	v
bpf_get_socket_cookie	bpf_helper_defs.h	/^static __u64 (*bpf_get_socket_cookie)(void *ctx) = (void *) 46;$/;"	v
bpf_get_socket_cookie	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_get_socket_cookie)(void *ctx) = (void *) 46;$/;"	v
bpf_get_socket_uid	bpf_helper_defs.h	/^static __u32 (*bpf_get_socket_uid)(struct __sk_buff *skb) = (void *) 47;$/;"	v
bpf_get_socket_uid	build/usr/include/bpf/bpf_helper_defs.h	/^static __u32 (*bpf_get_socket_uid)(struct __sk_buff *skb) = (void *) 47;$/;"	v
bpf_get_stack	bpf_helper_defs.h	/^static long (*bpf_get_stack)(void *ctx, void *buf, __u32 size, __u64 flags) = (void *) 67;$/;"	v
bpf_get_stack	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_stack)(void *ctx, void *buf, __u32 size, __u64 flags) = (void *) 67;$/;"	v
bpf_get_stackid	bpf_helper_defs.h	/^static long (*bpf_get_stackid)(void *ctx, void *map, __u64 flags) = (void *) 27;$/;"	v
bpf_get_stackid	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_stackid)(void *ctx, void *map, __u64 flags) = (void *) 27;$/;"	v
bpf_get_task_stack	bpf_helper_defs.h	/^static long (*bpf_get_task_stack)(struct task_struct *task, void *buf, __u32 size, __u64 flags) = (void *) 141;$/;"	v
bpf_get_task_stack	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_get_task_stack)(struct task_struct *task, void *buf, __u32 size, __u64 flags) = (void *) 141;$/;"	v
bpf_getsockopt	bpf_helper_defs.h	/^static long (*bpf_getsockopt)(void *bpf_socket, int level, int optname, void *optval, int optlen) = (void *) 57;$/;"	v
bpf_getsockopt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_getsockopt)(void *bpf_socket, int level, int optname, void *optval, int optlen) = (void *) 57;$/;"	v
bpf_htonl	bpf_endian.h	86;"	d
bpf_htonl	build/usr/include/bpf/bpf_endian.h	86;"	d
bpf_htons	bpf_endian.h	80;"	d
bpf_htons	build/usr/include/bpf/bpf_endian.h	80;"	d
bpf_ima_file_hash	bpf_helper_defs.h	/^static long (*bpf_ima_file_hash)(struct file *file, void *dst, __u32 size) = (void *) 193;$/;"	v
bpf_ima_file_hash	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_ima_file_hash)(struct file *file, void *dst, __u32 size) = (void *) 193;$/;"	v
bpf_ima_inode_hash	bpf_helper_defs.h	/^static long (*bpf_ima_inode_hash)(struct inode *inode, void *dst, __u32 size) = (void *) 161;$/;"	v
bpf_ima_inode_hash	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_ima_inode_hash)(struct inode *inode, void *dst, __u32 size) = (void *) 161;$/;"	v
bpf_inode_storage_delete	bpf_helper_defs.h	/^static int (*bpf_inode_storage_delete)(void *map, void *inode) = (void *) 146;$/;"	v
bpf_inode_storage_delete	build/usr/include/bpf/bpf_helper_defs.h	/^static int (*bpf_inode_storage_delete)(void *map, void *inode) = (void *) 146;$/;"	v
bpf_inode_storage_get	bpf_helper_defs.h	/^static void *(*bpf_inode_storage_get)(void *map, void *inode, void *value, __u64 flags) = (void *) 145;$/;"	v
bpf_inode_storage_get	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_inode_storage_get)(void *map, void *inode, void *value, __u64 flags) = (void *) 145;$/;"	v
bpf_iter_attach_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_iter_attach_opts {$/;"	s
bpf_iter_attach_opts	libbpf.h	/^struct bpf_iter_attach_opts {$/;"	s
bpf_iter_attach_opts__last_field	build/usr/include/bpf/libbpf.h	659;"	d
bpf_iter_attach_opts__last_field	libbpf.h	659;"	d
bpf_iter_create	bpf.c	/^int bpf_iter_create(int link_fd)$/;"	f
bpf_jiffies64	bpf_helper_defs.h	/^static __u64 (*bpf_jiffies64)(void) = (void *) 118;$/;"	v
bpf_jiffies64	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_jiffies64)(void) = (void *) 118;$/;"	v
bpf_kallsyms_lookup_name	bpf_helper_defs.h	/^static long (*bpf_kallsyms_lookup_name)(const char *name, int name_sz, int flags, __u64 *res) = (void *) 179;$/;"	v
bpf_kallsyms_lookup_name	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_kallsyms_lookup_name)(const char *name, int name_sz, int flags, __u64 *res) = (void *) 179;$/;"	v
bpf_kprobe_multi_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_kprobe_multi_opts {$/;"	s
bpf_kprobe_multi_opts	libbpf.h	/^struct bpf_kprobe_multi_opts {$/;"	s
bpf_kprobe_multi_opts__last_field	build/usr/include/bpf/libbpf.h	502;"	d
bpf_kprobe_multi_opts__last_field	libbpf.h	502;"	d
bpf_kprobe_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_kprobe_opts {$/;"	s
bpf_kprobe_opts	libbpf.h	/^struct bpf_kprobe_opts {$/;"	s
bpf_kprobe_opts__last_field	build/usr/include/bpf/libbpf.h	476;"	d
bpf_kprobe_opts__last_field	libbpf.h	476;"	d
bpf_kptr_xchg	bpf_helper_defs.h	/^static void *(*bpf_kptr_xchg)(void *map_value, void *ptr) = (void *) 194;$/;"	v
bpf_kptr_xchg	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_kptr_xchg)(void *map_value, void *ptr) = (void *) 194;$/;"	v
bpf_ktime_get_boot_ns	bpf_helper_defs.h	/^static __u64 (*bpf_ktime_get_boot_ns)(void) = (void *) 125;$/;"	v
bpf_ktime_get_boot_ns	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_ktime_get_boot_ns)(void) = (void *) 125;$/;"	v
bpf_ktime_get_coarse_ns	bpf_helper_defs.h	/^static __u64 (*bpf_ktime_get_coarse_ns)(void) = (void *) 160;$/;"	v
bpf_ktime_get_coarse_ns	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_ktime_get_coarse_ns)(void) = (void *) 160;$/;"	v
bpf_ktime_get_ns	bpf_helper_defs.h	/^static __u64 (*bpf_ktime_get_ns)(void) = (void *) 5;$/;"	v
bpf_ktime_get_ns	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_ktime_get_ns)(void) = (void *) 5;$/;"	v
bpf_l3_csum_replace	bpf_helper_defs.h	/^static long (*bpf_l3_csum_replace)(struct __sk_buff *skb, __u32 offset, __u64 from, __u64 to, __u64 size) = (void *) 10;$/;"	v
bpf_l3_csum_replace	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_l3_csum_replace)(struct __sk_buff *skb, __u32 offset, __u64 from, __u64 to, __u64 size) = (void *) 10;$/;"	v
bpf_l4_csum_replace	bpf_helper_defs.h	/^static long (*bpf_l4_csum_replace)(struct __sk_buff *skb, __u32 offset, __u64 from, __u64 to, __u64 flags) = (void *) 11;$/;"	v
bpf_l4_csum_replace	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_l4_csum_replace)(struct __sk_buff *skb, __u32 offset, __u64 from, __u64 to, __u64 flags) = (void *) 11;$/;"	v
bpf_line_info_min	libbpf_internal.h	/^struct bpf_line_info_min {$/;"	s
bpf_link	libbpf_internal.h	/^struct bpf_link {$/;"	s
bpf_link__destroy	libbpf.c	/^int bpf_link__destroy(struct bpf_link *link)$/;"	f
bpf_link__detach	libbpf.c	/^int bpf_link__detach(struct bpf_link *link)$/;"	f
bpf_link__detach_fd	libbpf.c	/^static int bpf_link__detach_fd(struct bpf_link *link)$/;"	f	file:
bpf_link__detach_struct_ops	libbpf.c	/^static int bpf_link__detach_struct_ops(struct bpf_link *link)$/;"	f	file:
bpf_link__disconnect	libbpf.c	/^void bpf_link__disconnect(struct bpf_link *link)$/;"	f
bpf_link__fd	libbpf.c	/^int bpf_link__fd(const struct bpf_link *link)$/;"	f
bpf_link__open	libbpf.c	/^struct bpf_link *bpf_link__open(const char *path)$/;"	f
bpf_link__pin	libbpf.c	/^int bpf_link__pin(struct bpf_link *link, const char *path)$/;"	f
bpf_link__pin_path	libbpf.c	/^const char *bpf_link__pin_path(const struct bpf_link *link)$/;"	f
bpf_link__unpin	libbpf.c	/^int bpf_link__unpin(struct bpf_link *link)$/;"	f
bpf_link__update_program	libbpf.c	/^int bpf_link__update_program(struct bpf_link *link, struct bpf_program *prog)$/;"	f
bpf_link_create	bpf.c	/^int bpf_link_create(int prog_fd, int target_fd,$/;"	f
bpf_link_create_opts	bpf.h	/^struct bpf_link_create_opts {$/;"	s
bpf_link_create_opts	build/usr/include/bpf/bpf.h	/^struct bpf_link_create_opts {$/;"	s
bpf_link_create_opts__last_field	bpf.h	430;"	d
bpf_link_create_opts__last_field	build/usr/include/bpf/bpf.h	430;"	d
bpf_link_detach	bpf.c	/^int bpf_link_detach(int link_fd)$/;"	f
bpf_link_get_fd_by_id	bpf.c	/^int bpf_link_get_fd_by_id(__u32 id)$/;"	f
bpf_link_get_next_id	bpf.c	/^int bpf_link_get_next_id(__u32 start_id, __u32 *next_id)$/;"	f
bpf_link_perf	libbpf.c	/^struct bpf_link_perf {$/;"	s	file:
bpf_link_perf_dealloc	libbpf.c	/^static void bpf_link_perf_dealloc(struct bpf_link *link)$/;"	f	file:
bpf_link_perf_detach	libbpf.c	/^static int bpf_link_perf_detach(struct bpf_link *link)$/;"	f	file:
bpf_link_update	bpf.c	/^int bpf_link_update(int link_fd, int new_prog_fd,$/;"	f
bpf_link_update_opts	bpf.h	/^struct bpf_link_update_opts {$/;"	s
bpf_link_update_opts	build/usr/include/bpf/bpf.h	/^struct bpf_link_update_opts {$/;"	s
bpf_link_update_opts__last_field	bpf.h	443;"	d
bpf_link_update_opts__last_field	build/usr/include/bpf/bpf.h	443;"	d
bpf_link_usdt	usdt.c	/^struct bpf_link_usdt {$/;"	s	file:
bpf_link_usdt_dealloc	usdt.c	/^static void bpf_link_usdt_dealloc(struct bpf_link *link)$/;"	f	file:
bpf_link_usdt_detach	usdt.c	/^static int bpf_link_usdt_detach(struct bpf_link *link)$/;"	f	file:
bpf_linker	linker.c	/^struct bpf_linker {$/;"	s	file:
bpf_linker__add_file	linker.c	/^int bpf_linker__add_file(struct bpf_linker *linker, const char *filename,$/;"	f
bpf_linker__finalize	linker.c	/^int bpf_linker__finalize(struct bpf_linker *linker)$/;"	f
bpf_linker__free	linker.c	/^void bpf_linker__free(struct bpf_linker *linker)$/;"	f
bpf_linker__new	linker.c	/^struct bpf_linker *bpf_linker__new(const char *filename, struct bpf_linker_opts *opts)$/;"	f
bpf_linker_file_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_linker_file_opts {$/;"	s
bpf_linker_file_opts	libbpf.h	/^struct bpf_linker_file_opts {$/;"	s
bpf_linker_file_opts__last_field	build/usr/include/bpf/libbpf.h	1643;"	d
bpf_linker_file_opts__last_field	libbpf.h	1643;"	d
bpf_linker_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_linker_opts {$/;"	s
bpf_linker_opts	libbpf.h	/^struct bpf_linker_opts {$/;"	s
bpf_linker_opts__last_field	build/usr/include/bpf/libbpf.h	1637;"	d
bpf_linker_opts__last_field	libbpf.h	1637;"	d
bpf_load_and_run	build/usr/include/bpf/skel_internal.h	/^static inline int bpf_load_and_run(struct bpf_load_and_run_opts *opts)$/;"	f
bpf_load_and_run	skel_internal.h	/^static inline int bpf_load_and_run(struct bpf_load_and_run_opts *opts)$/;"	f
bpf_load_and_run_opts	build/usr/include/bpf/skel_internal.h	/^struct bpf_load_and_run_opts {$/;"	s
bpf_load_and_run_opts	skel_internal.h	/^struct bpf_load_and_run_opts {$/;"	s
bpf_load_btf	bpf.c	/^int bpf_load_btf(const void *btf, __u32 btf_size, char *log_buf, __u32 log_buf_size, bool do_log)$/;"	f
bpf_load_hdr_opt	bpf_helper_defs.h	/^static long (*bpf_load_hdr_opt)(struct bpf_sock_ops *skops, void *searchby_res, __u32 len, __u64 flags) = (void *) 142;$/;"	v
bpf_load_hdr_opt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_load_hdr_opt)(struct bpf_sock_ops *skops, void *searchby_res, __u32 len, __u64 flags) = (void *) 142;$/;"	v
bpf_load_program	bpf.c	/^int bpf_load_program(enum bpf_prog_type type, const struct bpf_insn *insns,$/;"	f
bpf_load_program_attr	bpf.h	/^struct bpf_load_program_attr {$/;"	s
bpf_load_program_attr	build/usr/include/bpf/bpf.h	/^struct bpf_load_program_attr {$/;"	s
bpf_load_program_xattr2	bpf.c	/^static int bpf_load_program_xattr2(const struct bpf_load_program_attr *load_attr,$/;"	f	file:
bpf_loader_ctx	build/usr/include/bpf/skel_internal.h	/^struct bpf_loader_ctx {$/;"	s
bpf_loader_ctx	skel_internal.h	/^struct bpf_loader_ctx {$/;"	s
bpf_loop	bpf_helper_defs.h	/^static long (*bpf_loop)(__u32 nr_loops, void *callback_fn, void *callback_ctx, __u64 flags) = (void *) 181;$/;"	v
bpf_loop	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_loop)(__u32 nr_loops, void *callback_fn, void *callback_ctx, __u64 flags) = (void *) 181;$/;"	v
bpf_lwt_push_encap	bpf_helper_defs.h	/^static long (*bpf_lwt_push_encap)(struct __sk_buff *skb, __u32 type, void *hdr, __u32 len) = (void *) 73;$/;"	v
bpf_lwt_push_encap	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_lwt_push_encap)(struct __sk_buff *skb, __u32 type, void *hdr, __u32 len) = (void *) 73;$/;"	v
bpf_lwt_seg6_action	bpf_helper_defs.h	/^static long (*bpf_lwt_seg6_action)(struct __sk_buff *skb, __u32 action, void *param, __u32 param_len) = (void *) 76;$/;"	v
bpf_lwt_seg6_action	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_lwt_seg6_action)(struct __sk_buff *skb, __u32 action, void *param, __u32 param_len) = (void *) 76;$/;"	v
bpf_lwt_seg6_adjust_srh	bpf_helper_defs.h	/^static long (*bpf_lwt_seg6_adjust_srh)(struct __sk_buff *skb, __u32 offset, __s32 delta) = (void *) 75;$/;"	v
bpf_lwt_seg6_adjust_srh	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_lwt_seg6_adjust_srh)(struct __sk_buff *skb, __u32 offset, __s32 delta) = (void *) 75;$/;"	v
bpf_lwt_seg6_store_bytes	bpf_helper_defs.h	/^static long (*bpf_lwt_seg6_store_bytes)(struct __sk_buff *skb, __u32 offset, const void *from, __u32 len) = (void *) 74;$/;"	v
bpf_lwt_seg6_store_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_lwt_seg6_store_bytes)(struct __sk_buff *skb, __u32 offset, const void *from, __u32 len) = (void *) 74;$/;"	v
bpf_map	libbpf.c	/^struct bpf_map {$/;"	s	file:
bpf_map__attach_struct_ops	libbpf.c	/^struct bpf_link *bpf_map__attach_struct_ops(const struct bpf_map *map)$/;"	f
bpf_map__autocreate	libbpf.c	/^bool bpf_map__autocreate(const struct bpf_map *map)$/;"	f
bpf_map__btf_key_type_id	libbpf.c	/^__u32 bpf_map__btf_key_type_id(const struct bpf_map *map)$/;"	f
bpf_map__btf_value_type_id	libbpf.c	/^__u32 bpf_map__btf_value_type_id(const struct bpf_map *map)$/;"	f
bpf_map__def	libbpf.c	/^const struct bpf_map_def *bpf_map__def(const struct bpf_map *map)$/;"	f
bpf_map__delete_elem	libbpf.c	/^int bpf_map__delete_elem(const struct bpf_map *map,$/;"	f
bpf_map__destroy	libbpf.c	/^static void bpf_map__destroy(struct bpf_map *map)$/;"	f	file:
bpf_map__fd	libbpf.c	/^int bpf_map__fd(const struct bpf_map *map)$/;"	f
bpf_map__for_each	build/usr/include/bpf/libbpf.h	892;"	d
bpf_map__for_each	libbpf.h	892;"	d
bpf_map__get_next_key	libbpf.c	/^int bpf_map__get_next_key(const struct bpf_map *map,$/;"	f
bpf_map__ifindex	libbpf.c	/^__u32 bpf_map__ifindex(const struct bpf_map *map)$/;"	f
bpf_map__init_kern_struct_ops	libbpf.c	/^static int bpf_map__init_kern_struct_ops(struct bpf_map *map,$/;"	f	file:
bpf_map__initial_value	libbpf.c	/^const void *bpf_map__initial_value(struct bpf_map *map, size_t *psize)$/;"	f
bpf_map__inner_map	libbpf.c	/^struct bpf_map *bpf_map__inner_map(struct bpf_map *map)$/;"	f
bpf_map__is_internal	libbpf.c	/^bool bpf_map__is_internal(const struct bpf_map *map)$/;"	f
bpf_map__is_offload_neutral	libbpf.c	/^bool bpf_map__is_offload_neutral(const struct bpf_map *map)$/;"	f
bpf_map__is_pinned	libbpf.c	/^bool bpf_map__is_pinned(const struct bpf_map *map)$/;"	f
bpf_map__is_struct_ops	libbpf.c	/^static bool bpf_map__is_struct_ops(const struct bpf_map *map)$/;"	f	file:
bpf_map__key_size	libbpf.c	/^__u32 bpf_map__key_size(const struct bpf_map *map)$/;"	f
bpf_map__lookup_and_delete_elem	libbpf.c	/^int bpf_map__lookup_and_delete_elem(const struct bpf_map *map,$/;"	f
bpf_map__lookup_elem	libbpf.c	/^int bpf_map__lookup_elem(const struct bpf_map *map,$/;"	f
bpf_map__map_extra	libbpf.c	/^__u64 bpf_map__map_extra(const struct bpf_map *map)$/;"	f
bpf_map__map_flags	libbpf.c	/^__u32 bpf_map__map_flags(const struct bpf_map *map)$/;"	f
bpf_map__max_entries	libbpf.c	/^__u32 bpf_map__max_entries(const struct bpf_map *map)$/;"	f
bpf_map__name	libbpf.c	/^const char *bpf_map__name(const struct bpf_map *map)$/;"	f
bpf_map__next	libbpf.c	/^bpf_map__next(const struct bpf_map *prev, const struct bpf_object *obj)$/;"	f
bpf_map__numa_node	libbpf.c	/^__u32 bpf_map__numa_node(const struct bpf_map *map)$/;"	f
bpf_map__pin	libbpf.c	/^int bpf_map__pin(struct bpf_map *map, const char *path)$/;"	f
bpf_map__prev	libbpf.c	/^bpf_map__prev(const struct bpf_map *next, const struct bpf_object *obj)$/;"	f
bpf_map__priv	libbpf.c	/^void *bpf_map__priv(const struct bpf_map *map)$/;"	f
bpf_map__resize	libbpf.c	/^int bpf_map__resize(struct bpf_map *map, __u32 max_entries)$/;"	f
bpf_map__reuse_fd	libbpf.c	/^int bpf_map__reuse_fd(struct bpf_map *map, int fd)$/;"	f
bpf_map__set_autocreate	libbpf.c	/^int bpf_map__set_autocreate(struct bpf_map *map, bool autocreate)$/;"	f
bpf_map__set_ifindex	libbpf.c	/^int bpf_map__set_ifindex(struct bpf_map *map, __u32 ifindex)$/;"	f
bpf_map__set_initial_value	libbpf.c	/^int bpf_map__set_initial_value(struct bpf_map *map,$/;"	f
bpf_map__set_inner_map_fd	libbpf.c	/^int bpf_map__set_inner_map_fd(struct bpf_map *map, int fd)$/;"	f
bpf_map__set_key_size	libbpf.c	/^int bpf_map__set_key_size(struct bpf_map *map, __u32 size)$/;"	f
bpf_map__set_map_extra	libbpf.c	/^int bpf_map__set_map_extra(struct bpf_map *map, __u64 map_extra)$/;"	f
bpf_map__set_map_flags	libbpf.c	/^int bpf_map__set_map_flags(struct bpf_map *map, __u32 flags)$/;"	f
bpf_map__set_max_entries	libbpf.c	/^int bpf_map__set_max_entries(struct bpf_map *map, __u32 max_entries)$/;"	f
bpf_map__set_numa_node	libbpf.c	/^int bpf_map__set_numa_node(struct bpf_map *map, __u32 numa_node)$/;"	f
bpf_map__set_pin_path	libbpf.c	/^int bpf_map__set_pin_path(struct bpf_map *map, const char *path)$/;"	f
bpf_map__set_priv	libbpf.c	/^int bpf_map__set_priv(struct bpf_map *map, void *priv,$/;"	f
bpf_map__set_type	libbpf.c	/^int bpf_map__set_type(struct bpf_map *map, enum bpf_map_type type)$/;"	f
bpf_map__set_value_size	libbpf.c	/^int bpf_map__set_value_size(struct bpf_map *map, __u32 size)$/;"	f
bpf_map__type	libbpf.c	/^enum bpf_map_type bpf_map__type(const struct bpf_map *map)$/;"	f
bpf_map__unpin	libbpf.c	/^int bpf_map__unpin(struct bpf_map *map, const char *path)$/;"	f
bpf_map__update_elem	libbpf.c	/^int bpf_map__update_elem(const struct bpf_map *map,$/;"	f
bpf_map__value_size	libbpf.c	/^__u32 bpf_map__value_size(const struct bpf_map *map)$/;"	f
bpf_map_batch_common	bpf.c	/^static int bpf_map_batch_common(int cmd, int fd, void  *in_batch,$/;"	f	file:
bpf_map_batch_opts	bpf.h	/^struct bpf_map_batch_opts {$/;"	s
bpf_map_batch_opts	build/usr/include/bpf/bpf.h	/^struct bpf_map_batch_opts {$/;"	s
bpf_map_batch_opts__last_field	bpf.h	256;"	d
bpf_map_batch_opts__last_field	build/usr/include/bpf/bpf.h	256;"	d
bpf_map_clear_priv_t	build/usr/include/bpf/libbpf.h	/^typedef void (*bpf_map_clear_priv_t)(struct bpf_map *, void *);$/;"	t
bpf_map_clear_priv_t	libbpf.h	/^typedef void (*bpf_map_clear_priv_t)(struct bpf_map *, void *);$/;"	t
bpf_map_create	bpf.c	/^int bpf_map_create(enum bpf_map_type map_type,$/;"	f
bpf_map_create_opts	bpf.h	/^struct bpf_map_create_opts {$/;"	s
bpf_map_create_opts	build/usr/include/bpf/bpf.h	/^struct bpf_map_create_opts {$/;"	s
bpf_map_create_opts__last_field	bpf.h	55;"	d
bpf_map_create_opts__last_field	build/usr/include/bpf/bpf.h	55;"	d
bpf_map_def	bpf_helpers.h	/^struct bpf_map_def {$/;"	s
bpf_map_def	build/usr/include/bpf/bpf_helpers.h	/^struct bpf_map_def {$/;"	s
bpf_map_def	build/usr/include/bpf/libbpf.h	/^struct bpf_map_def {$/;"	s
bpf_map_def	libbpf.h	/^struct bpf_map_def {$/;"	s
bpf_map_delete_batch	bpf.c	/^int bpf_map_delete_batch(int fd, const void *keys, __u32 *count,$/;"	f
bpf_map_delete_elem	bpf.c	/^int bpf_map_delete_elem(int fd, const void *key)$/;"	f
bpf_map_delete_elem	bpf_helper_defs.h	/^static long (*bpf_map_delete_elem)(void *map, const void *key) = (void *) 3;$/;"	v
bpf_map_delete_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_map_delete_elem)(void *map, const void *key) = (void *) 3;$/;"	v
bpf_map_delete_elem_flags	bpf.c	/^int bpf_map_delete_elem_flags(int fd, const void *key, __u64 flags)$/;"	f
bpf_map_desc	build/usr/include/bpf/skel_internal.h	/^struct bpf_map_desc {$/;"	s
bpf_map_desc	skel_internal.h	/^struct bpf_map_desc {$/;"	s
bpf_map_find_btf_info	libbpf.c	/^static int bpf_map_find_btf_info(struct bpf_object *obj, struct bpf_map *map)$/;"	f	file:
bpf_map_freeze	bpf.c	/^int bpf_map_freeze(int fd)$/;"	f
bpf_map_get_fd_by_id	bpf.c	/^int bpf_map_get_fd_by_id(__u32 id)$/;"	f
bpf_map_get_next_id	bpf.c	/^int bpf_map_get_next_id(__u32 start_id, __u32 *next_id)$/;"	f
bpf_map_get_next_key	bpf.c	/^int bpf_map_get_next_key(int fd, const void *key, void *next_key)$/;"	f
bpf_map_lookup_and_delete_batch	bpf.c	/^int bpf_map_lookup_and_delete_batch(int fd, void *in_batch, void *out_batch,$/;"	f
bpf_map_lookup_and_delete_elem	bpf.c	/^int bpf_map_lookup_and_delete_elem(int fd, const void *key, void *value)$/;"	f
bpf_map_lookup_and_delete_elem_flags	bpf.c	/^int bpf_map_lookup_and_delete_elem_flags(int fd, const void *key, void *value, __u64 flags)$/;"	f
bpf_map_lookup_batch	bpf.c	/^int bpf_map_lookup_batch(int fd, void *in_batch, void *out_batch, void *keys,$/;"	f
bpf_map_lookup_elem	bpf.c	/^int bpf_map_lookup_elem(int fd, const void *key, void *value)$/;"	f
bpf_map_lookup_elem	bpf_helper_defs.h	/^static void *(*bpf_map_lookup_elem)(void *map, const void *key) = (void *) 1;$/;"	v
bpf_map_lookup_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_map_lookup_elem)(void *map, const void *key) = (void *) 1;$/;"	v
bpf_map_lookup_elem_flags	bpf.c	/^int bpf_map_lookup_elem_flags(int fd, const void *key, void *value, __u64 flags)$/;"	f
bpf_map_lookup_percpu_elem	bpf_helper_defs.h	/^static void *(*bpf_map_lookup_percpu_elem)(void *map, const void *key, __u32 cpu) = (void *) 195;$/;"	v
bpf_map_lookup_percpu_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_map_lookup_percpu_elem)(void *map, const void *key, __u32 cpu) = (void *) 195;$/;"	v
bpf_map_mmap_sz	libbpf.c	/^static size_t bpf_map_mmap_sz(const struct bpf_map *map)$/;"	f	file:
bpf_map_peek_elem	bpf_helper_defs.h	/^static long (*bpf_map_peek_elem)(void *map, void *value) = (void *) 89;$/;"	v
bpf_map_peek_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_map_peek_elem)(void *map, void *value) = (void *) 89;$/;"	v
bpf_map_pop_elem	bpf_helper_defs.h	/^static long (*bpf_map_pop_elem)(void *map, void *value) = (void *) 88;$/;"	v
bpf_map_pop_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_map_pop_elem)(void *map, void *value) = (void *) 88;$/;"	v
bpf_map_push_elem	bpf_helper_defs.h	/^static long (*bpf_map_push_elem)(void *map, const void *value, __u64 flags) = (void *) 87;$/;"	v
bpf_map_push_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_map_push_elem)(void *map, const void *value, __u64 flags) = (void *) 87;$/;"	v
bpf_map_skeleton	build/usr/include/bpf/libbpf.h	/^struct bpf_map_skeleton {$/;"	s
bpf_map_skeleton	libbpf.h	/^struct bpf_map_skeleton {$/;"	s
bpf_map_type__is_map_in_map	libbpf.c	/^static bool bpf_map_type__is_map_in_map(enum bpf_map_type type)$/;"	f	file:
bpf_map_update_batch	bpf.c	/^int bpf_map_update_batch(int fd, const void *keys, const void *values, __u32 *count,$/;"	f
bpf_map_update_elem	bpf.c	/^int bpf_map_update_elem(int fd, const void *key, const void *value,$/;"	f
bpf_map_update_elem	bpf_helper_defs.h	/^static long (*bpf_map_update_elem)(void *map, const void *key, const void *value, __u64 flags) = (void *) 2;$/;"	v
bpf_map_update_elem	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_map_update_elem)(void *map, const void *key, const void *value, __u64 flags) = (void *) 2;$/;"	v
bpf_msg_apply_bytes	bpf_helper_defs.h	/^static long (*bpf_msg_apply_bytes)(struct sk_msg_md *msg, __u32 bytes) = (void *) 61;$/;"	v
bpf_msg_apply_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_apply_bytes)(struct sk_msg_md *msg, __u32 bytes) = (void *) 61;$/;"	v
bpf_msg_cork_bytes	bpf_helper_defs.h	/^static long (*bpf_msg_cork_bytes)(struct sk_msg_md *msg, __u32 bytes) = (void *) 62;$/;"	v
bpf_msg_cork_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_cork_bytes)(struct sk_msg_md *msg, __u32 bytes) = (void *) 62;$/;"	v
bpf_msg_pop_data	bpf_helper_defs.h	/^static long (*bpf_msg_pop_data)(struct sk_msg_md *msg, __u32 start, __u32 len, __u64 flags) = (void *) 91;$/;"	v
bpf_msg_pop_data	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_pop_data)(struct sk_msg_md *msg, __u32 start, __u32 len, __u64 flags) = (void *) 91;$/;"	v
bpf_msg_pull_data	bpf_helper_defs.h	/^static long (*bpf_msg_pull_data)(struct sk_msg_md *msg, __u32 start, __u32 end, __u64 flags) = (void *) 63;$/;"	v
bpf_msg_pull_data	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_pull_data)(struct sk_msg_md *msg, __u32 start, __u32 end, __u64 flags) = (void *) 63;$/;"	v
bpf_msg_push_data	bpf_helper_defs.h	/^static long (*bpf_msg_push_data)(struct sk_msg_md *msg, __u32 start, __u32 len, __u64 flags) = (void *) 90;$/;"	v
bpf_msg_push_data	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_push_data)(struct sk_msg_md *msg, __u32 start, __u32 len, __u64 flags) = (void *) 90;$/;"	v
bpf_msg_redirect_hash	bpf_helper_defs.h	/^static long (*bpf_msg_redirect_hash)(struct sk_msg_md *msg, void *map, void *key, __u64 flags) = (void *) 71;$/;"	v
bpf_msg_redirect_hash	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_redirect_hash)(struct sk_msg_md *msg, void *map, void *key, __u64 flags) = (void *) 71;$/;"	v
bpf_msg_redirect_map	bpf_helper_defs.h	/^static long (*bpf_msg_redirect_map)(struct sk_msg_md *msg, void *map, __u32 key, __u64 flags) = (void *) 60;$/;"	v
bpf_msg_redirect_map	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_msg_redirect_map)(struct sk_msg_md *msg, void *map, __u32 key, __u64 flags) = (void *) 60;$/;"	v
bpf_ntohl	bpf_endian.h	89;"	d
bpf_ntohl	build/usr/include/bpf/bpf_endian.h	89;"	d
bpf_ntohs	bpf_endian.h	83;"	d
bpf_ntohs	build/usr/include/bpf/bpf_endian.h	83;"	d
bpf_obj_get	bpf.c	/^int bpf_obj_get(const char *pathname)$/;"	f
bpf_obj_get_info_by_fd	bpf.c	/^int bpf_obj_get_info_by_fd(int bpf_fd, void *info, __u32 *info_len)$/;"	f
bpf_obj_get_next_id	bpf.c	/^static int bpf_obj_get_next_id(__u32 start_id, __u32 *next_id, int cmd)$/;"	f	file:
bpf_obj_pin	bpf.c	/^int bpf_obj_pin(int fd, const char *pathname)$/;"	f
bpf_object	libbpf.c	/^struct bpf_object {$/;"	s	file:
bpf_object__add_map	libbpf.c	/^static struct bpf_map *bpf_object__add_map(struct bpf_object *obj)$/;"	f	file:
bpf_object__add_programs	libbpf.c	/^bpf_object__add_programs(struct bpf_object *obj, Elf_Data *sec_data,$/;"	f	file:
bpf_object__attach_skeleton	libbpf.c	/^int bpf_object__attach_skeleton(struct bpf_object_skeleton *s)$/;"	f
bpf_object__btf	libbpf.c	/^struct btf *bpf_object__btf(const struct bpf_object *obj)$/;"	f
bpf_object__btf_fd	libbpf.c	/^int bpf_object__btf_fd(const struct bpf_object *obj)$/;"	f
bpf_object__check_endianness	libbpf.c	/^static int bpf_object__check_endianness(struct bpf_object *obj)$/;"	f	file:
bpf_object__close	libbpf.c	/^void bpf_object__close(struct bpf_object *obj)$/;"	f
bpf_object__collect_externs	libbpf.c	/^static int bpf_object__collect_externs(struct bpf_object *obj)$/;"	f	file:
bpf_object__collect_map_relos	libbpf.c	/^static int bpf_object__collect_map_relos(struct bpf_object *obj,$/;"	f	file:
bpf_object__collect_prog_relos	libbpf.c	/^bpf_object__collect_prog_relos(struct bpf_object *obj, Elf64_Shdr *shdr, Elf_Data *data)$/;"	f	file:
bpf_object__collect_relos	libbpf.c	/^static int bpf_object__collect_relos(struct bpf_object *obj)$/;"	f	file:
bpf_object__collect_st_ops_relos	libbpf.c	/^static int bpf_object__collect_st_ops_relos(struct bpf_object *obj,$/;"	f	file:
bpf_object__create_map	libbpf.c	/^static int bpf_object__create_map(struct bpf_object *obj, struct bpf_map *map, bool is_inner)$/;"	f	file:
bpf_object__create_maps	libbpf.c	/^bpf_object__create_maps(struct bpf_object *obj)$/;"	f	file:
bpf_object__destroy_skeleton	libbpf.c	/^void bpf_object__destroy_skeleton(struct bpf_object_skeleton *s)$/;"	f
bpf_object__destroy_subskeleton	libbpf.c	/^void bpf_object__destroy_subskeleton(struct bpf_object_subskeleton *s)$/;"	f
bpf_object__detach_skeleton	libbpf.c	/^void bpf_object__detach_skeleton(struct bpf_object_skeleton *s)$/;"	f
bpf_object__elf_collect	libbpf.c	/^static int bpf_object__elf_collect(struct bpf_object *obj)$/;"	f	file:
bpf_object__elf_finish	libbpf.c	/^static void bpf_object__elf_finish(struct bpf_object *obj)$/;"	f	file:
bpf_object__elf_init	libbpf.c	/^static int bpf_object__elf_init(struct bpf_object *obj)$/;"	f	file:
bpf_object__finalize_btf	libbpf.c	/^static int bpf_object__finalize_btf(struct bpf_object *obj)$/;"	f	file:
bpf_object__find_map_by_name	libbpf.c	/^bpf_object__find_map_by_name(const struct bpf_object *obj, const char *name)$/;"	f
bpf_object__find_map_by_offset	libbpf.c	/^bpf_object__find_map_by_offset(struct bpf_object *obj, size_t offset)$/;"	f
bpf_object__find_map_fd_by_name	libbpf.c	/^bpf_object__find_map_fd_by_name(const struct bpf_object *obj, const char *name)$/;"	f
bpf_object__find_program_by_name	libbpf.c	/^bpf_object__find_program_by_name(const struct bpf_object *obj,$/;"	f
bpf_object__find_program_by_title	libbpf.c	/^bpf_object__find_program_by_title(const struct bpf_object *obj,$/;"	f
bpf_object__for_each_map	build/usr/include/bpf/libbpf.h	888;"	d
bpf_object__for_each_map	libbpf.h	888;"	d
bpf_object__for_each_program	build/usr/include/bpf/libbpf.h	271;"	d
bpf_object__for_each_program	libbpf.h	271;"	d
bpf_object__for_each_safe	build/usr/include/bpf/libbpf.h	242;"	d
bpf_object__for_each_safe	libbpf.h	242;"	d
bpf_object__free_relocs	libbpf.c	/^bpf_object__free_relocs(struct bpf_object *obj)$/;"	f	file:
bpf_object__gen_loader	libbpf.c	/^int bpf_object__gen_loader(struct bpf_object *obj, struct gen_loader_opts *opts)$/;"	f
bpf_object__init_btf	libbpf.c	/^static int bpf_object__init_btf(struct bpf_object *obj,$/;"	f	file:
bpf_object__init_global_data_maps	libbpf.c	/^static int bpf_object__init_global_data_maps(struct bpf_object *obj)$/;"	f	file:
bpf_object__init_internal_map	libbpf.c	/^bpf_object__init_internal_map(struct bpf_object *obj, enum libbpf_map_type type,$/;"	f	file:
bpf_object__init_kconfig_map	libbpf.c	/^static int bpf_object__init_kconfig_map(struct bpf_object *obj)$/;"	f	file:
bpf_object__init_kern_struct_ops_maps	libbpf.c	/^static int bpf_object__init_kern_struct_ops_maps(struct bpf_object *obj)$/;"	f	file:
bpf_object__init_kversion	libbpf.c	/^bpf_object__init_kversion(struct bpf_object *obj, void *data, size_t size)$/;"	f	file:
bpf_object__init_license	libbpf.c	/^bpf_object__init_license(struct bpf_object *obj, void *data, size_t size)$/;"	f	file:
bpf_object__init_maps	libbpf.c	/^static int bpf_object__init_maps(struct bpf_object *obj,$/;"	f	file:
bpf_object__init_prog	libbpf.c	/^bpf_object__init_prog(struct bpf_object *obj, struct bpf_program *prog,$/;"	f	file:
bpf_object__init_struct_ops_maps	libbpf.c	/^static int bpf_object__init_struct_ops_maps(struct bpf_object *obj)$/;"	f	file:
bpf_object__init_user_btf_map	libbpf.c	/^static int bpf_object__init_user_btf_map(struct bpf_object *obj,$/;"	f	file:
bpf_object__init_user_btf_maps	libbpf.c	/^static int bpf_object__init_user_btf_maps(struct bpf_object *obj, bool strict,$/;"	f	file:
bpf_object__init_user_maps	libbpf.c	/^static int bpf_object__init_user_maps(struct bpf_object *obj, bool strict)$/;"	f	file:
bpf_object__kversion	libbpf.c	/^unsigned int bpf_object__kversion(const struct bpf_object *obj)$/;"	f
bpf_object__load	libbpf.c	/^int bpf_object__load(struct bpf_object *obj)$/;"	f
bpf_object__load_progs	libbpf.c	/^bpf_object__load_progs(struct bpf_object *obj, int log_level)$/;"	f	file:
bpf_object__load_skeleton	libbpf.c	/^int bpf_object__load_skeleton(struct bpf_object_skeleton *s)$/;"	f
bpf_object__load_vmlinux_btf	libbpf.c	/^static int bpf_object__load_vmlinux_btf(struct bpf_object *obj, bool force)$/;"	f	file:
bpf_object__load_xattr	libbpf.c	/^int bpf_object__load_xattr(struct bpf_object_load_attr *attr)$/;"	f
bpf_object__name	libbpf.c	/^const char *bpf_object__name(const struct bpf_object *obj)$/;"	f
bpf_object__new	libbpf.c	/^static struct bpf_object *bpf_object__new(const char *path,$/;"	f	file:
bpf_object__next	libbpf.c	/^bpf_object__next(struct bpf_object *prev)$/;"	f
bpf_object__next_map	libbpf.c	/^bpf_object__next_map(const struct bpf_object *obj, const struct bpf_map *prev)$/;"	f
bpf_object__next_program	libbpf.c	/^bpf_object__next_program(const struct bpf_object *obj, struct bpf_program *prev)$/;"	f
bpf_object__open	libbpf.c	/^struct bpf_object *bpf_object__open(const char *path)$/;"	f
bpf_object__open_buffer	libbpf.c	/^bpf_object__open_buffer(const void *obj_buf, size_t obj_buf_sz,$/;"	f
bpf_object__open_file	libbpf.c	/^bpf_object__open_file(const char *path, const struct bpf_object_open_opts *opts)$/;"	f
bpf_object__open_mem	libbpf.c	/^bpf_object__open_mem(const void *obj_buf, size_t obj_buf_sz,$/;"	f
bpf_object__open_skeleton	libbpf.c	/^int bpf_object__open_skeleton(struct bpf_object_skeleton *s,$/;"	f
bpf_object__open_subskeleton	libbpf.c	/^int bpf_object__open_subskeleton(struct bpf_object_subskeleton *s)$/;"	f
bpf_object__open_xattr	libbpf.c	/^struct bpf_object *bpf_object__open_xattr(struct bpf_object_open_attr *attr)$/;"	f
bpf_object__pin	libbpf.c	/^int bpf_object__pin(struct bpf_object *obj, const char *path)$/;"	f
bpf_object__pin_maps	libbpf.c	/^int bpf_object__pin_maps(struct bpf_object *obj, const char *path)$/;"	f
bpf_object__pin_programs	libbpf.c	/^int bpf_object__pin_programs(struct bpf_object *obj, const char *path)$/;"	f
bpf_object__populate_internal_map	libbpf.c	/^bpf_object__populate_internal_map(struct bpf_object *obj, struct bpf_map *map)$/;"	f	file:
bpf_object__prev_map	libbpf.c	/^bpf_object__prev_map(const struct bpf_object *obj, const struct bpf_map *next)$/;"	f
bpf_object__prev_program	libbpf.c	/^bpf_object__prev_program(const struct bpf_object *obj, struct bpf_program *next)$/;"	f
bpf_object__priv	libbpf.c	/^void *bpf_object__priv(const struct bpf_object *obj)$/;"	f
bpf_object__probe_loading	libbpf.c	/^bpf_object__probe_loading(struct bpf_object *obj)$/;"	f	file:
bpf_object__process_kconfig_line	libbpf.c	/^static int bpf_object__process_kconfig_line(struct bpf_object *obj,$/;"	f	file:
bpf_object__read_kallsyms_file	libbpf.c	/^static int bpf_object__read_kallsyms_file(struct bpf_object *obj)$/;"	f	file:
bpf_object__read_kconfig_file	libbpf.c	/^static int bpf_object__read_kconfig_file(struct bpf_object *obj, void *data)$/;"	f	file:
bpf_object__read_kconfig_mem	libbpf.c	/^static int bpf_object__read_kconfig_mem(struct bpf_object *obj,$/;"	f	file:
bpf_object__reloc_code	libbpf.c	/^bpf_object__reloc_code(struct bpf_object *obj, struct bpf_program *main_prog,$/;"	f	file:
bpf_object__relocate	libbpf.c	/^bpf_object__relocate(struct bpf_object *obj, const char *targ_btf_path)$/;"	f	file:
bpf_object__relocate_calls	libbpf.c	/^bpf_object__relocate_calls(struct bpf_object *obj, struct bpf_program *prog)$/;"	f	file:
bpf_object__relocate_core	libbpf.c	/^bpf_object__relocate_core(struct bpf_object *obj, const char *targ_btf_path)$/;"	f	file:
bpf_object__relocate_data	libbpf.c	/^bpf_object__relocate_data(struct bpf_object *obj, struct bpf_program *prog)$/;"	f	file:
bpf_object__resolve_externs	libbpf.c	/^static int bpf_object__resolve_externs(struct bpf_object *obj,$/;"	f	file:
bpf_object__resolve_ksym_func_btf_id	libbpf.c	/^static int bpf_object__resolve_ksym_func_btf_id(struct bpf_object *obj,$/;"	f	file:
bpf_object__resolve_ksym_var_btf_id	libbpf.c	/^static int bpf_object__resolve_ksym_var_btf_id(struct bpf_object *obj,$/;"	f	file:
bpf_object__resolve_ksyms_btf_id	libbpf.c	/^static int bpf_object__resolve_ksyms_btf_id(struct bpf_object *obj)$/;"	f	file:
bpf_object__reuse_map	libbpf.c	/^bpf_object__reuse_map(struct bpf_map *map)$/;"	f	file:
bpf_object__sanitize_and_load_btf	libbpf.c	/^static int bpf_object__sanitize_and_load_btf(struct bpf_object *obj)$/;"	f	file:
bpf_object__sanitize_btf	libbpf.c	/^static void bpf_object__sanitize_btf(struct bpf_object *obj, struct btf *btf)$/;"	f	file:
bpf_object__sanitize_maps	libbpf.c	/^static int bpf_object__sanitize_maps(struct bpf_object *obj)$/;"	f	file:
bpf_object__sanitize_prog	libbpf.c	/^static int bpf_object__sanitize_prog(struct bpf_object *obj, struct bpf_program *prog)$/;"	f	file:
bpf_object__section_to_libbpf_map_type	libbpf.c	/^bpf_object__section_to_libbpf_map_type(const struct bpf_object *obj, int shndx)$/;"	f	file:
bpf_object__set_kversion	libbpf.c	/^int bpf_object__set_kversion(struct bpf_object *obj, __u32 kern_version)$/;"	f
bpf_object__set_priv	libbpf.c	/^int bpf_object__set_priv(struct bpf_object *obj, void *priv,$/;"	f
bpf_object__shndx_is_data	libbpf.c	/^static bool bpf_object__shndx_is_data(const struct bpf_object *obj,$/;"	f	file:
bpf_object__shndx_is_maps	libbpf.c	/^static bool bpf_object__shndx_is_maps(const struct bpf_object *obj,$/;"	f	file:
bpf_object__sort_relos	libbpf.c	/^static void bpf_object__sort_relos(struct bpf_object *obj)$/;"	f	file:
bpf_object__unpin_maps	libbpf.c	/^int bpf_object__unpin_maps(struct bpf_object *obj, const char *path)$/;"	f
bpf_object__unpin_programs	libbpf.c	/^int bpf_object__unpin_programs(struct bpf_object *obj, const char *path)$/;"	f
bpf_object_clear_priv_t	build/usr/include/bpf/libbpf.h	/^typedef void (*bpf_object_clear_priv_t)(struct bpf_object *, void *);$/;"	t
bpf_object_clear_priv_t	libbpf.h	/^typedef void (*bpf_object_clear_priv_t)(struct bpf_object *, void *);$/;"	t
bpf_object_init_prog_arrays	libbpf.c	/^static int bpf_object_init_prog_arrays(struct bpf_object *obj)$/;"	f	file:
bpf_object_init_progs	libbpf.c	/^static int bpf_object_init_progs(struct bpf_object *obj, const struct bpf_object_open_opts *opts)$/;"	f	file:
bpf_object_load	libbpf.c	/^static int bpf_object_load(struct bpf_object *obj, int extra_log_level, const char *target_btf_path)$/;"	f	file:
bpf_object_load_attr	build/usr/include/bpf/libbpf.h	/^struct bpf_object_load_attr {$/;"	s
bpf_object_load_attr	libbpf.h	/^struct bpf_object_load_attr {$/;"	s
bpf_object_load_prog	libbpf.c	/^static int bpf_object_load_prog(struct bpf_object *obj, struct bpf_program *prog,$/;"	f	file:
bpf_object_load_prog_instance	libbpf.c	/^static int bpf_object_load_prog_instance(struct bpf_object *obj, struct bpf_program *prog,$/;"	f	file:
bpf_object_open	libbpf.c	/^static struct bpf_object *bpf_object_open(const char *path, const void *obj_buf, size_t obj_buf_sz,$/;"	f	file:
bpf_object_open_attr	build/usr/include/bpf/libbpf.h	/^struct bpf_object_open_attr {$/;"	s
bpf_object_open_attr	libbpf.h	/^struct bpf_object_open_attr {$/;"	s
bpf_object_open_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_object_open_opts {$/;"	s
bpf_object_open_opts	libbpf.h	/^struct bpf_object_open_opts {$/;"	s
bpf_object_open_opts__last_field	build/usr/include/bpf/libbpf.h	151;"	d
bpf_object_open_opts__last_field	libbpf.h	151;"	d
bpf_object_skeleton	build/usr/include/bpf/libbpf.h	/^struct bpf_object_skeleton {$/;"	s
bpf_object_skeleton	libbpf.h	/^struct bpf_object_skeleton {$/;"	s
bpf_object_subskeleton	build/usr/include/bpf/libbpf.h	/^struct bpf_object_subskeleton {$/;"	s
bpf_object_subskeleton	libbpf.h	/^struct bpf_object_subskeleton {$/;"	s
bpf_object_unload	libbpf.c	/^static int bpf_object_unload(struct bpf_object *obj)$/;"	f	file:
bpf_override_return	bpf_helper_defs.h	/^static long (*bpf_override_return)(struct pt_regs *regs, __u64 rc) = (void *) 58;$/;"	v
bpf_override_return	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_override_return)(struct pt_regs *regs, __u64 rc) = (void *) 58;$/;"	v
bpf_per_cpu_ptr	bpf_helper_defs.h	/^static void *(*bpf_per_cpu_ptr)(const void *percpu_ptr, __u32 cpu) = (void *) 153;$/;"	v
bpf_per_cpu_ptr	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_per_cpu_ptr)(const void *percpu_ptr, __u32 cpu) = (void *) 153;$/;"	v
bpf_perf_event_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_perf_event_opts {$/;"	s
bpf_perf_event_opts	libbpf.h	/^struct bpf_perf_event_opts {$/;"	s
bpf_perf_event_opts__last_field	build/usr/include/bpf/libbpf.h	456;"	d
bpf_perf_event_opts__last_field	libbpf.h	456;"	d
bpf_perf_event_output	bpf_helper_defs.h	/^static long (*bpf_perf_event_output)(void *ctx, void *map, __u64 flags, void *data, __u64 size) = (void *) 25;$/;"	v
bpf_perf_event_output	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_perf_event_output)(void *ctx, void *map, __u64 flags, void *data, __u64 size) = (void *) 25;$/;"	v
bpf_perf_event_print_t	build/usr/include/bpf/libbpf.h	/^	(*bpf_perf_event_print_t)(struct perf_event_header *hdr,$/;"	t	typeref:enum:bpf_perf_event_print_t
bpf_perf_event_print_t	libbpf.h	/^	(*bpf_perf_event_print_t)(struct perf_event_header *hdr,$/;"	t	typeref:enum:bpf_perf_event_print_t
bpf_perf_event_read	bpf_helper_defs.h	/^static __u64 (*bpf_perf_event_read)(void *map, __u64 flags) = (void *) 22;$/;"	v
bpf_perf_event_read	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_perf_event_read)(void *map, __u64 flags) = (void *) 22;$/;"	v
bpf_perf_event_read_value	bpf_helper_defs.h	/^static long (*bpf_perf_event_read_value)(void *map, __u64 flags, struct bpf_perf_event_value *buf, __u32 buf_size) = (void *) 55;$/;"	v
bpf_perf_event_read_value	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_perf_event_read_value)(void *map, __u64 flags, struct bpf_perf_event_value *buf, __u32 buf_size) = (void *) 55;$/;"	v
bpf_perf_event_ret	build/usr/include/bpf/libbpf.h	/^enum bpf_perf_event_ret {$/;"	g
bpf_perf_event_ret	libbpf.h	/^enum bpf_perf_event_ret {$/;"	g
bpf_perf_prog_read_value	bpf_helper_defs.h	/^static long (*bpf_perf_prog_read_value)(struct bpf_perf_event_data *ctx, struct bpf_perf_event_value *buf, __u32 buf_size) = (void *) 56;$/;"	v
bpf_perf_prog_read_value	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_perf_prog_read_value)(struct bpf_perf_event_data *ctx, struct bpf_perf_event_value *buf, __u32 buf_size) = (void *) 56;$/;"	v
bpf_printk	bpf_helpers.h	286;"	d
bpf_printk	build/usr/include/bpf/bpf_helpers.h	286;"	d
bpf_probe_helper	libbpf_probes.c	/^bool bpf_probe_helper(enum bpf_func_id id, enum bpf_prog_type prog_type,$/;"	f
bpf_probe_large_insn_limit	libbpf_probes.c	/^bool bpf_probe_large_insn_limit(__u32 ifindex)$/;"	f
bpf_probe_map_type	libbpf_probes.c	/^bool bpf_probe_map_type(enum bpf_map_type map_type, __u32 ifindex)$/;"	f
bpf_probe_prog_type	libbpf_probes.c	/^bool bpf_probe_prog_type(enum bpf_prog_type prog_type, __u32 ifindex)$/;"	f
bpf_probe_read	bpf_helper_defs.h	/^static long (*bpf_probe_read)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 4;$/;"	v
bpf_probe_read	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_read)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 4;$/;"	v
bpf_probe_read_kernel	bpf_helper_defs.h	/^static long (*bpf_probe_read_kernel)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 113;$/;"	v
bpf_probe_read_kernel	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_read_kernel)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 113;$/;"	v
bpf_probe_read_kernel_str	bpf_helper_defs.h	/^static long (*bpf_probe_read_kernel_str)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 115;$/;"	v
bpf_probe_read_kernel_str	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_read_kernel_str)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 115;$/;"	v
bpf_probe_read_str	bpf_helper_defs.h	/^static long (*bpf_probe_read_str)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 45;$/;"	v
bpf_probe_read_str	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_read_str)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 45;$/;"	v
bpf_probe_read_user	bpf_helper_defs.h	/^static long (*bpf_probe_read_user)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 112;$/;"	v
bpf_probe_read_user	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_read_user)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 112;$/;"	v
bpf_probe_read_user_str	bpf_helper_defs.h	/^static long (*bpf_probe_read_user_str)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 114;$/;"	v
bpf_probe_read_user_str	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_read_user_str)(void *dst, __u32 size, const void *unsafe_ptr) = (void *) 114;$/;"	v
bpf_probe_write_user	bpf_helper_defs.h	/^static long (*bpf_probe_write_user)(void *dst, const void *src, __u32 len) = (void *) 36;$/;"	v
bpf_probe_write_user	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_probe_write_user)(void *dst, const void *src, __u32 len) = (void *) 36;$/;"	v
bpf_prog_attach	bpf.c	/^int bpf_prog_attach(int prog_fd, int target_fd, enum bpf_attach_type type,$/;"	f
bpf_prog_attach_opts	bpf.c	/^int bpf_prog_attach_opts(int prog_fd, int target_fd,$/;"	f
bpf_prog_attach_opts	bpf.h	/^struct bpf_prog_attach_opts {$/;"	s
bpf_prog_attach_opts	build/usr/include/bpf/bpf.h	/^struct bpf_prog_attach_opts {$/;"	s
bpf_prog_attach_opts__last_field	bpf.h	391;"	d
bpf_prog_attach_opts__last_field	build/usr/include/bpf/bpf.h	391;"	d
bpf_prog_bind_map	bpf.c	/^int bpf_prog_bind_map(int prog_fd, int map_fd,$/;"	f
bpf_prog_bind_opts	bpf.h	/^struct bpf_prog_bind_opts {$/;"	s
bpf_prog_bind_opts	build/usr/include/bpf/bpf.h	/^struct bpf_prog_bind_opts {$/;"	s
bpf_prog_bind_opts__last_field	bpf.h	502;"	d
bpf_prog_bind_opts__last_field	build/usr/include/bpf/bpf.h	502;"	d
bpf_prog_desc	build/usr/include/bpf/skel_internal.h	/^struct bpf_prog_desc {$/;"	s
bpf_prog_desc	skel_internal.h	/^struct bpf_prog_desc {$/;"	s
bpf_prog_detach	bpf.c	/^int bpf_prog_detach(int target_fd, enum bpf_attach_type type)$/;"	f
bpf_prog_detach2	bpf.c	/^int bpf_prog_detach2(int prog_fd, int target_fd, enum bpf_attach_type type)$/;"	f
bpf_prog_get_fd_by_id	bpf.c	/^int bpf_prog_get_fd_by_id(__u32 id)$/;"	f
bpf_prog_get_next_id	bpf.c	/^int bpf_prog_get_next_id(__u32 start_id, __u32 *next_id)$/;"	f
bpf_prog_info_array	build/usr/include/bpf/libbpf.h	/^enum bpf_prog_info_array {$/;"	g
bpf_prog_info_array	libbpf.h	/^enum bpf_prog_info_array {$/;"	g
bpf_prog_info_array_desc	libbpf.c	/^static struct bpf_prog_info_array_desc bpf_prog_info_array_desc[] = {$/;"	v	typeref:struct:bpf_prog_info_array_desc	file:
bpf_prog_info_array_desc	libbpf.c	/^struct bpf_prog_info_array_desc {$/;"	s	file:
bpf_prog_info_linear	build/usr/include/bpf/libbpf.h	/^struct bpf_prog_info_linear {$/;"	s
bpf_prog_info_linear	libbpf.h	/^struct bpf_prog_info_linear {$/;"	s
bpf_prog_info_read_offset_u32	libbpf.c	/^static __u32 bpf_prog_info_read_offset_u32(struct bpf_prog_info *info,$/;"	f	file:
bpf_prog_info_read_offset_u64	libbpf.c	/^static __u64 bpf_prog_info_read_offset_u64(struct bpf_prog_info *info,$/;"	f	file:
bpf_prog_info_set_offset_u32	libbpf.c	/^static void bpf_prog_info_set_offset_u32(struct bpf_prog_info *info, int offset,$/;"	f	file:
bpf_prog_info_set_offset_u64	libbpf.c	/^static void bpf_prog_info_set_offset_u64(struct bpf_prog_info *info, int offset,$/;"	f	file:
bpf_prog_linfo	bpf_prog_linfo.c	/^struct bpf_prog_linfo {$/;"	s	file:
bpf_prog_linfo__free	bpf_prog_linfo.c	/^void bpf_prog_linfo__free(struct bpf_prog_linfo *prog_linfo)$/;"	f
bpf_prog_linfo__lfind	bpf_prog_linfo.c	/^bpf_prog_linfo__lfind(const struct bpf_prog_linfo *prog_linfo,$/;"	f
bpf_prog_linfo__lfind_addr_func	bpf_prog_linfo.c	/^bpf_prog_linfo__lfind_addr_func(const struct bpf_prog_linfo *prog_linfo,$/;"	f
bpf_prog_linfo__new	bpf_prog_linfo.c	/^struct bpf_prog_linfo *bpf_prog_linfo__new(const struct bpf_prog_info *info)$/;"	f
bpf_prog_load	bpf.h	164;"	d
bpf_prog_load	build/usr/include/bpf/bpf.h	164;"	d
bpf_prog_load_attr	build/usr/include/bpf/libbpf.h	/^struct bpf_prog_load_attr {$/;"	s
bpf_prog_load_attr	libbpf.h	/^struct bpf_prog_load_attr {$/;"	s
bpf_prog_load_deprecated	libbpf.c	/^int bpf_prog_load_deprecated(const char *file, enum bpf_prog_type type,$/;"	f
bpf_prog_load_opts	bpf.h	/^struct bpf_prog_load_opts {$/;"	s
bpf_prog_load_opts	build/usr/include/bpf/bpf.h	/^struct bpf_prog_load_opts {$/;"	s
bpf_prog_load_opts__last_field	bpf.h	142;"	d
bpf_prog_load_opts__last_field	build/usr/include/bpf/bpf.h	142;"	d
bpf_prog_load_v0_6_0	bpf.c	/^int bpf_prog_load_v0_6_0(enum bpf_prog_type prog_type,$/;"	f
bpf_prog_load_xattr2	libbpf.c	/^static int bpf_prog_load_xattr2(const struct bpf_prog_load_attr *attr,$/;"	f	file:
bpf_prog_prep_result	build/usr/include/bpf/libbpf.h	/^struct bpf_prog_prep_result {$/;"	s
bpf_prog_prep_result	libbpf.h	/^struct bpf_prog_prep_result {$/;"	s
bpf_prog_query	bpf.c	/^int bpf_prog_query(int target_fd, enum bpf_attach_type type, __u32 query_flags,$/;"	f
bpf_prog_skeleton	build/usr/include/bpf/libbpf.h	/^struct bpf_prog_skeleton {$/;"	s
bpf_prog_skeleton	libbpf.h	/^struct bpf_prog_skeleton {$/;"	s
bpf_prog_test_run	bpf.c	/^int bpf_prog_test_run(int prog_fd, int repeat, void *data, __u32 size,$/;"	f
bpf_prog_test_run_attr	bpf.h	/^struct bpf_prog_test_run_attr {$/;"	s
bpf_prog_test_run_attr	build/usr/include/bpf/bpf.h	/^struct bpf_prog_test_run_attr {$/;"	s
bpf_prog_test_run_opts	bpf.c	/^int bpf_prog_test_run_opts(int prog_fd, struct bpf_test_run_opts *opts)$/;"	f
bpf_prog_test_run_xattr	bpf.c	/^int bpf_prog_test_run_xattr(struct bpf_prog_test_run_attr *test_attr)$/;"	f
bpf_program	libbpf.c	/^struct bpf_program {$/;"	s	file:
bpf_program__attach	libbpf.c	/^struct bpf_link *bpf_program__attach(const struct bpf_program *prog)$/;"	f
bpf_program__attach_btf_id	libbpf.c	/^static struct bpf_link *bpf_program__attach_btf_id(const struct bpf_program *prog,$/;"	f	file:
bpf_program__attach_cgroup	libbpf.c	/^bpf_program__attach_cgroup(const struct bpf_program *prog, int cgroup_fd)$/;"	f
bpf_program__attach_fd	libbpf.c	/^bpf_program__attach_fd(const struct bpf_program *prog, int target_fd, int btf_id,$/;"	f	file:
bpf_program__attach_freplace	libbpf.c	/^struct bpf_link *bpf_program__attach_freplace(const struct bpf_program *prog,$/;"	f
bpf_program__attach_iter	libbpf.c	/^bpf_program__attach_iter(const struct bpf_program *prog,$/;"	f
bpf_program__attach_kprobe	libbpf.c	/^struct bpf_link *bpf_program__attach_kprobe(const struct bpf_program *prog,$/;"	f
bpf_program__attach_kprobe_multi_opts	libbpf.c	/^bpf_program__attach_kprobe_multi_opts(const struct bpf_program *prog,$/;"	f
bpf_program__attach_kprobe_opts	libbpf.c	/^bpf_program__attach_kprobe_opts(const struct bpf_program *prog,$/;"	f
bpf_program__attach_lsm	libbpf.c	/^struct bpf_link *bpf_program__attach_lsm(const struct bpf_program *prog)$/;"	f
bpf_program__attach_netns	libbpf.c	/^bpf_program__attach_netns(const struct bpf_program *prog, int netns_fd)$/;"	f
bpf_program__attach_perf_event	libbpf.c	/^struct bpf_link *bpf_program__attach_perf_event(const struct bpf_program *prog, int pfd)$/;"	f
bpf_program__attach_perf_event_opts	libbpf.c	/^struct bpf_link *bpf_program__attach_perf_event_opts(const struct bpf_program *prog, int pfd,$/;"	f
bpf_program__attach_raw_tracepoint	libbpf.c	/^struct bpf_link *bpf_program__attach_raw_tracepoint(const struct bpf_program *prog,$/;"	f
bpf_program__attach_trace	libbpf.c	/^struct bpf_link *bpf_program__attach_trace(const struct bpf_program *prog)$/;"	f
bpf_program__attach_trace_opts	libbpf.c	/^struct bpf_link *bpf_program__attach_trace_opts(const struct bpf_program *prog,$/;"	f
bpf_program__attach_tracepoint	libbpf.c	/^struct bpf_link *bpf_program__attach_tracepoint(const struct bpf_program *prog,$/;"	f
bpf_program__attach_tracepoint_opts	libbpf.c	/^struct bpf_link *bpf_program__attach_tracepoint_opts(const struct bpf_program *prog,$/;"	f
bpf_program__attach_uprobe	libbpf.c	/^struct bpf_link *bpf_program__attach_uprobe(const struct bpf_program *prog,$/;"	f
bpf_program__attach_uprobe_opts	libbpf.c	/^bpf_program__attach_uprobe_opts(const struct bpf_program *prog, pid_t pid,$/;"	f
bpf_program__attach_usdt	libbpf.c	/^struct bpf_link *bpf_program__attach_usdt(const struct bpf_program *prog,$/;"	f
bpf_program__attach_xdp	libbpf.c	/^struct bpf_link *bpf_program__attach_xdp(const struct bpf_program *prog, int ifindex)$/;"	f
bpf_program__autoload	libbpf.c	/^bool bpf_program__autoload(const struct bpf_program *prog)$/;"	f
bpf_program__bpil_addr_to_offs	libbpf.c	/^void bpf_program__bpil_addr_to_offs(struct bpf_prog_info_linear *info_linear)$/;"	f
bpf_program__bpil_offs_to_addr	libbpf.c	/^void bpf_program__bpil_offs_to_addr(struct bpf_prog_info_linear *info_linear)$/;"	f
bpf_program__exit	libbpf.c	/^static void bpf_program__exit(struct bpf_program *prog)$/;"	f	file:
bpf_program__expected_attach_type	libbpf.c	/^enum bpf_attach_type bpf_program__expected_attach_type(const struct bpf_program *prog)$/;"	g	file:
bpf_program__fd	libbpf.c	/^int bpf_program__fd(const struct bpf_program *prog)$/;"	f
bpf_program__flags	libbpf.c	/^__u32 bpf_program__flags(const struct bpf_program *prog)$/;"	f
bpf_program__get_prog_info_linear	libbpf.c	/^bpf_program__get_prog_info_linear(int fd, __u64 arrays)$/;"	f
bpf_program__insn_cnt	libbpf.c	/^size_t bpf_program__insn_cnt(const struct bpf_program *prog)$/;"	f
bpf_program__insns	libbpf.c	/^const struct bpf_insn *bpf_program__insns(const struct bpf_program *prog)$/;"	f
bpf_program__is_type	libbpf.c	/^static bool bpf_program__is_type(const struct bpf_program *prog,$/;"	f	file:
bpf_program__load	libbpf.c	/^int bpf_program__load(struct bpf_program *prog, const char *license, __u32 kern_ver)$/;"	f
bpf_program__log_buf	libbpf.c	/^const char *bpf_program__log_buf(const struct bpf_program *prog, size_t *log_size)$/;"	f
bpf_program__log_level	libbpf.c	/^__u32 bpf_program__log_level(const struct bpf_program *prog)$/;"	f
bpf_program__name	libbpf.c	/^const char *bpf_program__name(const struct bpf_program *prog)$/;"	f
bpf_program__next	libbpf.c	/^bpf_program__next(struct bpf_program *prev, const struct bpf_object *obj)$/;"	f
bpf_program__pin	libbpf.c	/^int bpf_program__pin(struct bpf_program *prog, const char *path)$/;"	f
bpf_program__prev	libbpf.c	/^bpf_program__prev(struct bpf_program *next, const struct bpf_object *obj)$/;"	f
bpf_program__priv	libbpf.c	/^void *bpf_program__priv(const struct bpf_program *prog)$/;"	f
bpf_program__record_reloc	libbpf.c	/^static int bpf_program__record_reloc(struct bpf_program *prog,$/;"	f	file:
bpf_program__section_name	libbpf.c	/^const char *bpf_program__section_name(const struct bpf_program *prog)$/;"	f
bpf_program__set_attach_target	libbpf.c	/^int bpf_program__set_attach_target(struct bpf_program *prog,$/;"	f
bpf_program__set_autoload	libbpf.c	/^int bpf_program__set_autoload(struct bpf_program *prog, bool autoload)$/;"	f
bpf_program__set_flags	libbpf.c	/^int bpf_program__set_flags(struct bpf_program *prog, __u32 flags)$/;"	f
bpf_program__set_ifindex	libbpf.c	/^void bpf_program__set_ifindex(struct bpf_program *prog, __u32 ifindex)$/;"	f
bpf_program__set_insns	libbpf.c	/^int bpf_program__set_insns(struct bpf_program *prog,$/;"	f
bpf_program__set_log_buf	libbpf.c	/^int bpf_program__set_log_buf(struct bpf_program *prog, char *log_buf, size_t log_size)$/;"	f
bpf_program__set_log_level	libbpf.c	/^int bpf_program__set_log_level(struct bpf_program *prog, __u32 log_level)$/;"	f
bpf_program__set_prep	libbpf.c	/^int bpf_program__set_prep(struct bpf_program *prog, int nr_instances,$/;"	f
bpf_program__set_priv	libbpf.c	/^int bpf_program__set_priv(struct bpf_program *prog, void *priv,$/;"	f
bpf_program__size	libbpf.c	/^size_t bpf_program__size(const struct bpf_program *prog)$/;"	f
bpf_program__title	libbpf.c	/^const char *bpf_program__title(const struct bpf_program *prog, bool needs_copy)$/;"	f
bpf_program__type	libbpf.c	/^enum bpf_prog_type bpf_program__type(const struct bpf_program *prog)$/;"	g	file:
bpf_program__unload	libbpf.c	/^void bpf_program__unload(struct bpf_program *prog)$/;"	f
bpf_program__unpin	libbpf.c	/^int bpf_program__unpin(struct bpf_program *prog, const char *path)$/;"	f
bpf_program_clear_priv_t	build/usr/include/bpf/libbpf.h	/^typedef void (*bpf_program_clear_priv_t)(struct bpf_program *, void *);$/;"	t
bpf_program_clear_priv_t	libbpf.h	/^typedef void (*bpf_program_clear_priv_t)(struct bpf_program *, void *);$/;"	t
bpf_program_nth_fd	libbpf.c	/^static int bpf_program_nth_fd(const struct bpf_program *prog, int n)$/;"	f	file:
bpf_program_pin_instance	libbpf.c	/^static int bpf_program_pin_instance(struct bpf_program *prog, const char *path, int instance)$/;"	f	file:
bpf_program_prep_t	build/usr/include/bpf/libbpf.h	/^typedef int (*bpf_program_prep_t)(struct bpf_program *prog, int n,$/;"	t
bpf_program_prep_t	libbpf.h	/^typedef int (*bpf_program_prep_t)(struct bpf_program *prog, int n,$/;"	t
bpf_program_record_relos	libbpf.c	/^static int bpf_program_record_relos(struct bpf_program *prog)$/;"	f	file:
bpf_program_unpin_instance	libbpf.c	/^static int bpf_program_unpin_instance(struct bpf_program *prog, const char *path, int instance)$/;"	f	file:
bpf_raw_tracepoint_open	bpf.c	/^int bpf_raw_tracepoint_open(const char *name, int prog_fd)$/;"	f
bpf_rc_keydown	bpf_helper_defs.h	/^static long (*bpf_rc_keydown)(void *ctx, __u32 protocol, __u64 scancode, __u32 toggle) = (void *) 78;$/;"	v
bpf_rc_keydown	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_rc_keydown)(void *ctx, __u32 protocol, __u64 scancode, __u32 toggle) = (void *) 78;$/;"	v
bpf_rc_pointer_rel	bpf_helper_defs.h	/^static long (*bpf_rc_pointer_rel)(void *ctx, __s32 rel_x, __s32 rel_y) = (void *) 92;$/;"	v
bpf_rc_pointer_rel	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_rc_pointer_rel)(void *ctx, __s32 rel_x, __s32 rel_y) = (void *) 92;$/;"	v
bpf_rc_repeat	bpf_helper_defs.h	/^static long (*bpf_rc_repeat)(void *ctx) = (void *) 77;$/;"	v
bpf_rc_repeat	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_rc_repeat)(void *ctx) = (void *) 77;$/;"	v
bpf_read_branch_records	bpf_helper_defs.h	/^static long (*bpf_read_branch_records)(struct bpf_perf_event_data *ctx, void *buf, __u32 size, __u64 flags) = (void *) 119;$/;"	v
bpf_read_branch_records	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_read_branch_records)(struct bpf_perf_event_data *ctx, void *buf, __u32 size, __u64 flags) = (void *) 119;$/;"	v
bpf_redirect	bpf_helper_defs.h	/^static long (*bpf_redirect)(__u32 ifindex, __u64 flags) = (void *) 23;$/;"	v
bpf_redirect	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_redirect)(__u32 ifindex, __u64 flags) = (void *) 23;$/;"	v
bpf_redirect_map	bpf_helper_defs.h	/^static long (*bpf_redirect_map)(void *map, __u32 key, __u64 flags) = (void *) 51;$/;"	v
bpf_redirect_map	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_redirect_map)(void *map, __u32 key, __u64 flags) = (void *) 51;$/;"	v
bpf_redirect_neigh	bpf_helper_defs.h	/^static long (*bpf_redirect_neigh)(__u32 ifindex, struct bpf_redir_neigh *params, int plen, __u64 flags) = (void *) 152;$/;"	v
bpf_redirect_neigh	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_redirect_neigh)(__u32 ifindex, struct bpf_redir_neigh *params, int plen, __u64 flags) = (void *) 152;$/;"	v
bpf_redirect_peer	bpf_helper_defs.h	/^static long (*bpf_redirect_peer)(__u32 ifindex, __u64 flags) = (void *) 155;$/;"	v
bpf_redirect_peer	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_redirect_peer)(__u32 ifindex, __u64 flags) = (void *) 155;$/;"	v
bpf_reserve_hdr_opt	bpf_helper_defs.h	/^static long (*bpf_reserve_hdr_opt)(struct bpf_sock_ops *skops, __u32 len, __u64 flags) = (void *) 144;$/;"	v
bpf_reserve_hdr_opt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_reserve_hdr_opt)(struct bpf_sock_ops *skops, __u32 len, __u64 flags) = (void *) 144;$/;"	v
bpf_ringbuf_discard	bpf_helper_defs.h	/^static void (*bpf_ringbuf_discard)(void *data, __u64 flags) = (void *) 133;$/;"	v
bpf_ringbuf_discard	build/usr/include/bpf/bpf_helper_defs.h	/^static void (*bpf_ringbuf_discard)(void *data, __u64 flags) = (void *) 133;$/;"	v
bpf_ringbuf_output	bpf_helper_defs.h	/^static long (*bpf_ringbuf_output)(void *ringbuf, void *data, __u64 size, __u64 flags) = (void *) 130;$/;"	v
bpf_ringbuf_output	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_ringbuf_output)(void *ringbuf, void *data, __u64 size, __u64 flags) = (void *) 130;$/;"	v
bpf_ringbuf_query	bpf_helper_defs.h	/^static __u64 (*bpf_ringbuf_query)(void *ringbuf, __u64 flags) = (void *) 134;$/;"	v
bpf_ringbuf_query	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_ringbuf_query)(void *ringbuf, __u64 flags) = (void *) 134;$/;"	v
bpf_ringbuf_reserve	bpf_helper_defs.h	/^static void *(*bpf_ringbuf_reserve)(void *ringbuf, __u64 size, __u64 flags) = (void *) 131;$/;"	v
bpf_ringbuf_reserve	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_ringbuf_reserve)(void *ringbuf, __u64 size, __u64 flags) = (void *) 131;$/;"	v
bpf_ringbuf_submit	bpf_helper_defs.h	/^static void (*bpf_ringbuf_submit)(void *data, __u64 flags) = (void *) 132;$/;"	v
bpf_ringbuf_submit	build/usr/include/bpf/bpf_helper_defs.h	/^static void (*bpf_ringbuf_submit)(void *data, __u64 flags) = (void *) 132;$/;"	v
bpf_sec_def	libbpf.c	/^struct bpf_sec_def {$/;"	s	file:
bpf_send_signal	bpf_helper_defs.h	/^static long (*bpf_send_signal)(__u32 sig) = (void *) 109;$/;"	v
bpf_send_signal	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_send_signal)(__u32 sig) = (void *) 109;$/;"	v
bpf_send_signal_thread	bpf_helper_defs.h	/^static long (*bpf_send_signal_thread)(__u32 sig) = (void *) 117;$/;"	v
bpf_send_signal_thread	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_send_signal_thread)(__u32 sig) = (void *) 117;$/;"	v
bpf_seq_printf	bpf_helper_defs.h	/^static long (*bpf_seq_printf)(struct seq_file *m, const char *fmt, __u32 fmt_size, const void *data, __u32 data_len) = (void *) 126;$/;"	v
bpf_seq_printf	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_seq_printf)(struct seq_file *m, const char *fmt, __u32 fmt_size, const void *data, __u32 data_len) = (void *) 126;$/;"	v
bpf_seq_printf_btf	bpf_helper_defs.h	/^static long (*bpf_seq_printf_btf)(struct seq_file *m, struct btf_ptr *ptr, __u32 ptr_size, __u64 flags) = (void *) 150;$/;"	v
bpf_seq_printf_btf	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_seq_printf_btf)(struct seq_file *m, struct btf_ptr *ptr, __u32 ptr_size, __u64 flags) = (void *) 150;$/;"	v
bpf_seq_write	bpf_helper_defs.h	/^static long (*bpf_seq_write)(struct seq_file *m, const void *data, __u32 len) = (void *) 127;$/;"	v
bpf_seq_write	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_seq_write)(struct seq_file *m, const void *data, __u32 len) = (void *) 127;$/;"	v
bpf_set_hash	bpf_helper_defs.h	/^static long (*bpf_set_hash)(struct __sk_buff *skb, __u32 hash) = (void *) 48;$/;"	v
bpf_set_hash	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_set_hash)(struct __sk_buff *skb, __u32 hash) = (void *) 48;$/;"	v
bpf_set_hash_invalid	bpf_helper_defs.h	/^static void (*bpf_set_hash_invalid)(struct __sk_buff *skb) = (void *) 41;$/;"	v
bpf_set_hash_invalid	build/usr/include/bpf/bpf_helper_defs.h	/^static void (*bpf_set_hash_invalid)(struct __sk_buff *skb) = (void *) 41;$/;"	v
bpf_set_link_xdp_fd	netlink.c	/^int bpf_set_link_xdp_fd(int ifindex, int fd, __u32 flags)$/;"	f
bpf_set_link_xdp_fd_opts	netlink.c	/^int bpf_set_link_xdp_fd_opts(int ifindex, int fd, __u32 flags,$/;"	f
bpf_set_retval	bpf_helper_defs.h	/^static int (*bpf_set_retval)(int retval) = (void *) 187;$/;"	v
bpf_set_retval	build/usr/include/bpf/bpf_helper_defs.h	/^static int (*bpf_set_retval)(int retval) = (void *) 187;$/;"	v
bpf_setsockopt	bpf_helper_defs.h	/^static long (*bpf_setsockopt)(void *bpf_socket, int level, int optname, void *optval, int optlen) = (void *) 49;$/;"	v
bpf_setsockopt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_setsockopt)(void *bpf_socket, int level, int optname, void *optval, int optlen) = (void *) 49;$/;"	v
bpf_sk_ancestor_cgroup_id	bpf_helper_defs.h	/^static __u64 (*bpf_sk_ancestor_cgroup_id)(void *sk, int ancestor_level) = (void *) 129;$/;"	v
bpf_sk_ancestor_cgroup_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_sk_ancestor_cgroup_id)(void *sk, int ancestor_level) = (void *) 129;$/;"	v
bpf_sk_assign	bpf_helper_defs.h	/^static long (*bpf_sk_assign)(void *ctx, void *sk, __u64 flags) = (void *) 124;$/;"	v
bpf_sk_assign	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sk_assign)(void *ctx, void *sk, __u64 flags) = (void *) 124;$/;"	v
bpf_sk_cgroup_id	bpf_helper_defs.h	/^static __u64 (*bpf_sk_cgroup_id)(void *sk) = (void *) 128;$/;"	v
bpf_sk_cgroup_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_sk_cgroup_id)(void *sk) = (void *) 128;$/;"	v
bpf_sk_fullsock	bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_sk_fullsock)(struct bpf_sock *sk) = (void *) 95;$/;"	v	typeref:struct:bpf_sk_fullsock
bpf_sk_fullsock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_sk_fullsock)(struct bpf_sock *sk) = (void *) 95;$/;"	v	typeref:struct:bpf_sk_fullsock
bpf_sk_lookup_tcp	bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_sk_lookup_tcp)(void *ctx, struct bpf_sock_tuple *tuple, __u32 tuple_size, __u64 netns, __u64 flags) = (void *) 84;$/;"	v	typeref:struct:bpf_sk_lookup_tcp
bpf_sk_lookup_tcp	build/usr/include/bpf/bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_sk_lookup_tcp)(void *ctx, struct bpf_sock_tuple *tuple, __u32 tuple_size, __u64 netns, __u64 flags) = (void *) 84;$/;"	v	typeref:struct:bpf_sk_lookup_tcp
bpf_sk_lookup_udp	bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_sk_lookup_udp)(void *ctx, struct bpf_sock_tuple *tuple, __u32 tuple_size, __u64 netns, __u64 flags) = (void *) 85;$/;"	v	typeref:struct:bpf_sk_lookup_udp
bpf_sk_lookup_udp	build/usr/include/bpf/bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_sk_lookup_udp)(void *ctx, struct bpf_sock_tuple *tuple, __u32 tuple_size, __u64 netns, __u64 flags) = (void *) 85;$/;"	v	typeref:struct:bpf_sk_lookup_udp
bpf_sk_redirect_hash	bpf_helper_defs.h	/^static long (*bpf_sk_redirect_hash)(struct __sk_buff *skb, void *map, void *key, __u64 flags) = (void *) 72;$/;"	v
bpf_sk_redirect_hash	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sk_redirect_hash)(struct __sk_buff *skb, void *map, void *key, __u64 flags) = (void *) 72;$/;"	v
bpf_sk_redirect_map	bpf_helper_defs.h	/^static long (*bpf_sk_redirect_map)(struct __sk_buff *skb, void *map, __u32 key, __u64 flags) = (void *) 52;$/;"	v
bpf_sk_redirect_map	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sk_redirect_map)(struct __sk_buff *skb, void *map, __u32 key, __u64 flags) = (void *) 52;$/;"	v
bpf_sk_release	bpf_helper_defs.h	/^static long (*bpf_sk_release)(void *sock) = (void *) 86;$/;"	v
bpf_sk_release	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sk_release)(void *sock) = (void *) 86;$/;"	v
bpf_sk_select_reuseport	bpf_helper_defs.h	/^static long (*bpf_sk_select_reuseport)(struct sk_reuseport_md *reuse, void *map, void *key, __u64 flags) = (void *) 82;$/;"	v
bpf_sk_select_reuseport	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sk_select_reuseport)(struct sk_reuseport_md *reuse, void *map, void *key, __u64 flags) = (void *) 82;$/;"	v
bpf_sk_storage_delete	bpf_helper_defs.h	/^static long (*bpf_sk_storage_delete)(void *map, void *sk) = (void *) 108;$/;"	v
bpf_sk_storage_delete	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sk_storage_delete)(void *map, void *sk) = (void *) 108;$/;"	v
bpf_sk_storage_get	bpf_helper_defs.h	/^static void *(*bpf_sk_storage_get)(void *map, void *sk, void *value, __u64 flags) = (void *) 107;$/;"	v
bpf_sk_storage_get	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_sk_storage_get)(void *map, void *sk, void *value, __u64 flags) = (void *) 107;$/;"	v
bpf_skb_adjust_room	bpf_helper_defs.h	/^static long (*bpf_skb_adjust_room)(struct __sk_buff *skb, __s32 len_diff, __u32 mode, __u64 flags) = (void *) 50;$/;"	v
bpf_skb_adjust_room	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_adjust_room)(struct __sk_buff *skb, __s32 len_diff, __u32 mode, __u64 flags) = (void *) 50;$/;"	v
bpf_skb_ancestor_cgroup_id	bpf_helper_defs.h	/^static __u64 (*bpf_skb_ancestor_cgroup_id)(struct __sk_buff *skb, int ancestor_level) = (void *) 83;$/;"	v
bpf_skb_ancestor_cgroup_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_skb_ancestor_cgroup_id)(struct __sk_buff *skb, int ancestor_level) = (void *) 83;$/;"	v
bpf_skb_cgroup_classid	bpf_helper_defs.h	/^static __u64 (*bpf_skb_cgroup_classid)(struct __sk_buff *skb) = (void *) 151;$/;"	v
bpf_skb_cgroup_classid	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_skb_cgroup_classid)(struct __sk_buff *skb) = (void *) 151;$/;"	v
bpf_skb_cgroup_id	bpf_helper_defs.h	/^static __u64 (*bpf_skb_cgroup_id)(struct __sk_buff *skb) = (void *) 79;$/;"	v
bpf_skb_cgroup_id	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_skb_cgroup_id)(struct __sk_buff *skb) = (void *) 79;$/;"	v
bpf_skb_change_head	bpf_helper_defs.h	/^static long (*bpf_skb_change_head)(struct __sk_buff *skb, __u32 len, __u64 flags) = (void *) 43;$/;"	v
bpf_skb_change_head	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_change_head)(struct __sk_buff *skb, __u32 len, __u64 flags) = (void *) 43;$/;"	v
bpf_skb_change_proto	bpf_helper_defs.h	/^static long (*bpf_skb_change_proto)(struct __sk_buff *skb, __be16 proto, __u64 flags) = (void *) 31;$/;"	v
bpf_skb_change_proto	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_change_proto)(struct __sk_buff *skb, __be16 proto, __u64 flags) = (void *) 31;$/;"	v
bpf_skb_change_tail	bpf_helper_defs.h	/^static long (*bpf_skb_change_tail)(struct __sk_buff *skb, __u32 len, __u64 flags) = (void *) 38;$/;"	v
bpf_skb_change_tail	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_change_tail)(struct __sk_buff *skb, __u32 len, __u64 flags) = (void *) 38;$/;"	v
bpf_skb_change_type	bpf_helper_defs.h	/^static long (*bpf_skb_change_type)(struct __sk_buff *skb, __u32 type) = (void *) 32;$/;"	v
bpf_skb_change_type	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_change_type)(struct __sk_buff *skb, __u32 type) = (void *) 32;$/;"	v
bpf_skb_ecn_set_ce	bpf_helper_defs.h	/^static long (*bpf_skb_ecn_set_ce)(struct __sk_buff *skb) = (void *) 97;$/;"	v
bpf_skb_ecn_set_ce	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_ecn_set_ce)(struct __sk_buff *skb) = (void *) 97;$/;"	v
bpf_skb_get_tunnel_key	bpf_helper_defs.h	/^static long (*bpf_skb_get_tunnel_key)(struct __sk_buff *skb, struct bpf_tunnel_key *key, __u32 size, __u64 flags) = (void *) 20;$/;"	v
bpf_skb_get_tunnel_key	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_get_tunnel_key)(struct __sk_buff *skb, struct bpf_tunnel_key *key, __u32 size, __u64 flags) = (void *) 20;$/;"	v
bpf_skb_get_tunnel_opt	bpf_helper_defs.h	/^static long (*bpf_skb_get_tunnel_opt)(struct __sk_buff *skb, void *opt, __u32 size) = (void *) 29;$/;"	v
bpf_skb_get_tunnel_opt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_get_tunnel_opt)(struct __sk_buff *skb, void *opt, __u32 size) = (void *) 29;$/;"	v
bpf_skb_get_xfrm_state	bpf_helper_defs.h	/^static long (*bpf_skb_get_xfrm_state)(struct __sk_buff *skb, __u32 index, struct bpf_xfrm_state *xfrm_state, __u32 size, __u64 flags) = (void *) 66;$/;"	v
bpf_skb_get_xfrm_state	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_get_xfrm_state)(struct __sk_buff *skb, __u32 index, struct bpf_xfrm_state *xfrm_state, __u32 size, __u64 flags) = (void *) 66;$/;"	v
bpf_skb_load_bytes	bpf_helper_defs.h	/^static long (*bpf_skb_load_bytes)(const void *skb, __u32 offset, void *to, __u32 len) = (void *) 26;$/;"	v
bpf_skb_load_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_load_bytes)(const void *skb, __u32 offset, void *to, __u32 len) = (void *) 26;$/;"	v
bpf_skb_load_bytes_relative	bpf_helper_defs.h	/^static long (*bpf_skb_load_bytes_relative)(const void *skb, __u32 offset, void *to, __u32 len, __u32 start_header) = (void *) 68;$/;"	v
bpf_skb_load_bytes_relative	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_load_bytes_relative)(const void *skb, __u32 offset, void *to, __u32 len, __u32 start_header) = (void *) 68;$/;"	v
bpf_skb_output	bpf_helper_defs.h	/^static long (*bpf_skb_output)(void *ctx, void *map, __u64 flags, void *data, __u64 size) = (void *) 111;$/;"	v
bpf_skb_output	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_output)(void *ctx, void *map, __u64 flags, void *data, __u64 size) = (void *) 111;$/;"	v
bpf_skb_pull_data	bpf_helper_defs.h	/^static long (*bpf_skb_pull_data)(struct __sk_buff *skb, __u32 len) = (void *) 39;$/;"	v
bpf_skb_pull_data	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_pull_data)(struct __sk_buff *skb, __u32 len) = (void *) 39;$/;"	v
bpf_skb_set_tstamp	bpf_helper_defs.h	/^static long (*bpf_skb_set_tstamp)(struct __sk_buff *skb, __u64 tstamp, __u32 tstamp_type) = (void *) 192;$/;"	v
bpf_skb_set_tstamp	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_set_tstamp)(struct __sk_buff *skb, __u64 tstamp, __u32 tstamp_type) = (void *) 192;$/;"	v
bpf_skb_set_tunnel_key	bpf_helper_defs.h	/^static long (*bpf_skb_set_tunnel_key)(struct __sk_buff *skb, struct bpf_tunnel_key *key, __u32 size, __u64 flags) = (void *) 21;$/;"	v
bpf_skb_set_tunnel_key	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_set_tunnel_key)(struct __sk_buff *skb, struct bpf_tunnel_key *key, __u32 size, __u64 flags) = (void *) 21;$/;"	v
bpf_skb_set_tunnel_opt	bpf_helper_defs.h	/^static long (*bpf_skb_set_tunnel_opt)(struct __sk_buff *skb, void *opt, __u32 size) = (void *) 30;$/;"	v
bpf_skb_set_tunnel_opt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_set_tunnel_opt)(struct __sk_buff *skb, void *opt, __u32 size) = (void *) 30;$/;"	v
bpf_skb_store_bytes	bpf_helper_defs.h	/^static long (*bpf_skb_store_bytes)(struct __sk_buff *skb, __u32 offset, const void *from, __u32 len, __u64 flags) = (void *) 9;$/;"	v
bpf_skb_store_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_store_bytes)(struct __sk_buff *skb, __u32 offset, const void *from, __u32 len, __u64 flags) = (void *) 9;$/;"	v
bpf_skb_under_cgroup	bpf_helper_defs.h	/^static long (*bpf_skb_under_cgroup)(struct __sk_buff *skb, void *map, __u32 index) = (void *) 33;$/;"	v
bpf_skb_under_cgroup	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_under_cgroup)(struct __sk_buff *skb, void *map, __u32 index) = (void *) 33;$/;"	v
bpf_skb_vlan_pop	bpf_helper_defs.h	/^static long (*bpf_skb_vlan_pop)(struct __sk_buff *skb) = (void *) 19;$/;"	v
bpf_skb_vlan_pop	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_vlan_pop)(struct __sk_buff *skb) = (void *) 19;$/;"	v
bpf_skb_vlan_push	bpf_helper_defs.h	/^static long (*bpf_skb_vlan_push)(struct __sk_buff *skb, __be16 vlan_proto, __u16 vlan_tci) = (void *) 18;$/;"	v
bpf_skb_vlan_push	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_skb_vlan_push)(struct __sk_buff *skb, __be16 vlan_proto, __u16 vlan_tci) = (void *) 18;$/;"	v
bpf_skc_lookup_tcp	bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_skc_lookup_tcp)(void *ctx, struct bpf_sock_tuple *tuple, __u32 tuple_size, __u64 netns, __u64 flags) = (void *) 99;$/;"	v	typeref:struct:bpf_skc_lookup_tcp
bpf_skc_lookup_tcp	build/usr/include/bpf/bpf_helper_defs.h	/^static struct bpf_sock *(*bpf_skc_lookup_tcp)(void *ctx, struct bpf_sock_tuple *tuple, __u32 tuple_size, __u64 netns, __u64 flags) = (void *) 99;$/;"	v	typeref:struct:bpf_skc_lookup_tcp
bpf_skc_to_tcp6_sock	bpf_helper_defs.h	/^static struct tcp6_sock *(*bpf_skc_to_tcp6_sock)(void *sk) = (void *) 136;$/;"	v	typeref:struct:bpf_skc_to_tcp6_sock
bpf_skc_to_tcp6_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct tcp6_sock *(*bpf_skc_to_tcp6_sock)(void *sk) = (void *) 136;$/;"	v	typeref:struct:bpf_skc_to_tcp6_sock
bpf_skc_to_tcp_request_sock	bpf_helper_defs.h	/^static struct tcp_request_sock *(*bpf_skc_to_tcp_request_sock)(void *sk) = (void *) 139;$/;"	v	typeref:struct:bpf_skc_to_tcp_request_sock
bpf_skc_to_tcp_request_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct tcp_request_sock *(*bpf_skc_to_tcp_request_sock)(void *sk) = (void *) 139;$/;"	v	typeref:struct:bpf_skc_to_tcp_request_sock
bpf_skc_to_tcp_sock	bpf_helper_defs.h	/^static struct tcp_sock *(*bpf_skc_to_tcp_sock)(void *sk) = (void *) 137;$/;"	v	typeref:struct:bpf_skc_to_tcp_sock
bpf_skc_to_tcp_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct tcp_sock *(*bpf_skc_to_tcp_sock)(void *sk) = (void *) 137;$/;"	v	typeref:struct:bpf_skc_to_tcp_sock
bpf_skc_to_tcp_timewait_sock	bpf_helper_defs.h	/^static struct tcp_timewait_sock *(*bpf_skc_to_tcp_timewait_sock)(void *sk) = (void *) 138;$/;"	v	typeref:struct:bpf_skc_to_tcp_timewait_sock
bpf_skc_to_tcp_timewait_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct tcp_timewait_sock *(*bpf_skc_to_tcp_timewait_sock)(void *sk) = (void *) 138;$/;"	v	typeref:struct:bpf_skc_to_tcp_timewait_sock
bpf_skc_to_udp6_sock	bpf_helper_defs.h	/^static struct udp6_sock *(*bpf_skc_to_udp6_sock)(void *sk) = (void *) 140;$/;"	v	typeref:struct:bpf_skc_to_udp6_sock
bpf_skc_to_udp6_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct udp6_sock *(*bpf_skc_to_udp6_sock)(void *sk) = (void *) 140;$/;"	v	typeref:struct:bpf_skc_to_udp6_sock
bpf_skc_to_unix_sock	bpf_helper_defs.h	/^static struct unix_sock *(*bpf_skc_to_unix_sock)(void *sk) = (void *) 178;$/;"	v	typeref:struct:bpf_skc_to_unix_sock
bpf_skc_to_unix_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct unix_sock *(*bpf_skc_to_unix_sock)(void *sk) = (void *) 178;$/;"	v	typeref:struct:bpf_skc_to_unix_sock
bpf_snprintf	bpf_helper_defs.h	/^static long (*bpf_snprintf)(char *str, __u32 str_size, const char *fmt, __u64 *data, __u32 data_len) = (void *) 165;$/;"	v
bpf_snprintf	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_snprintf)(char *str, __u32 str_size, const char *fmt, __u64 *data, __u32 data_len) = (void *) 165;$/;"	v
bpf_snprintf_btf	bpf_helper_defs.h	/^static long (*bpf_snprintf_btf)(char *str, __u32 str_size, struct btf_ptr *ptr, __u32 btf_ptr_size, __u64 flags) = (void *) 149;$/;"	v
bpf_snprintf_btf	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_snprintf_btf)(char *str, __u32 str_size, struct btf_ptr *ptr, __u32 btf_ptr_size, __u64 flags) = (void *) 149;$/;"	v
bpf_sock_from_file	bpf_helper_defs.h	/^static struct socket *(*bpf_sock_from_file)(struct file *file) = (void *) 162;$/;"	v	typeref:struct:bpf_sock_from_file
bpf_sock_from_file	build/usr/include/bpf/bpf_helper_defs.h	/^static struct socket *(*bpf_sock_from_file)(struct file *file) = (void *) 162;$/;"	v	typeref:struct:bpf_sock_from_file
bpf_sock_hash_update	bpf_helper_defs.h	/^static long (*bpf_sock_hash_update)(struct bpf_sock_ops *skops, void *map, void *key, __u64 flags) = (void *) 70;$/;"	v
bpf_sock_hash_update	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sock_hash_update)(struct bpf_sock_ops *skops, void *map, void *key, __u64 flags) = (void *) 70;$/;"	v
bpf_sock_map_update	bpf_helper_defs.h	/^static long (*bpf_sock_map_update)(struct bpf_sock_ops *skops, void *map, void *key, __u64 flags) = (void *) 53;$/;"	v
bpf_sock_map_update	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sock_map_update)(struct bpf_sock_ops *skops, void *map, void *key, __u64 flags) = (void *) 53;$/;"	v
bpf_sock_ops_cb_flags_set	bpf_helper_defs.h	/^static long (*bpf_sock_ops_cb_flags_set)(struct bpf_sock_ops *bpf_sock, int argval) = (void *) 59;$/;"	v
bpf_sock_ops_cb_flags_set	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sock_ops_cb_flags_set)(struct bpf_sock_ops *bpf_sock, int argval) = (void *) 59;$/;"	v
bpf_spin_lock	bpf_helper_defs.h	/^static long (*bpf_spin_lock)(struct bpf_spin_lock *lock) = (void *) 93;$/;"	v
bpf_spin_lock	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_spin_lock)(struct bpf_spin_lock *lock) = (void *) 93;$/;"	v
bpf_spin_unlock	bpf_helper_defs.h	/^static long (*bpf_spin_unlock)(struct bpf_spin_lock *lock) = (void *) 94;$/;"	v
bpf_spin_unlock	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_spin_unlock)(struct bpf_spin_lock *lock) = (void *) 94;$/;"	v
bpf_store_hdr_opt	bpf_helper_defs.h	/^static long (*bpf_store_hdr_opt)(struct bpf_sock_ops *skops, const void *from, __u32 len, __u64 flags) = (void *) 143;$/;"	v
bpf_store_hdr_opt	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_store_hdr_opt)(struct bpf_sock_ops *skops, const void *from, __u32 len, __u64 flags) = (void *) 143;$/;"	v
bpf_strncmp	bpf_helper_defs.h	/^static long (*bpf_strncmp)(const char *s1, __u32 s1_sz, const char *s2) = (void *) 182;$/;"	v
bpf_strncmp	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_strncmp)(const char *s1, __u32 s1_sz, const char *s2) = (void *) 182;$/;"	v
bpf_strtol	bpf_helper_defs.h	/^static long (*bpf_strtol)(const char *buf, unsigned long buf_len, __u64 flags, long *res) = (void *) 105;$/;"	v
bpf_strtol	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_strtol)(const char *buf, unsigned long buf_len, __u64 flags, long *res) = (void *) 105;$/;"	v
bpf_strtoul	bpf_helper_defs.h	/^static long (*bpf_strtoul)(const char *buf, unsigned long buf_len, __u64 flags, unsigned long *res) = (void *) 106;$/;"	v
bpf_strtoul	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_strtoul)(const char *buf, unsigned long buf_len, __u64 flags, unsigned long *res) = (void *) 106;$/;"	v
bpf_struct_ops	libbpf.c	/^struct bpf_struct_ops {$/;"	s	file:
bpf_sys_bpf	bpf_helper_defs.h	/^static long (*bpf_sys_bpf)(__u32 cmd, void *attr, __u32 attr_size) = (void *) 166;$/;"	v
bpf_sys_bpf	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sys_bpf)(__u32 cmd, void *attr, __u32 attr_size) = (void *) 166;$/;"	v
bpf_sys_close	bpf_helper_defs.h	/^static long (*bpf_sys_close)(__u32 fd) = (void *) 168;$/;"	v
bpf_sys_close	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sys_close)(__u32 fd) = (void *) 168;$/;"	v
bpf_sysctl_get_current_value	bpf_helper_defs.h	/^static long (*bpf_sysctl_get_current_value)(struct bpf_sysctl *ctx, char *buf, unsigned long buf_len) = (void *) 102;$/;"	v
bpf_sysctl_get_current_value	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sysctl_get_current_value)(struct bpf_sysctl *ctx, char *buf, unsigned long buf_len) = (void *) 102;$/;"	v
bpf_sysctl_get_name	bpf_helper_defs.h	/^static long (*bpf_sysctl_get_name)(struct bpf_sysctl *ctx, char *buf, unsigned long buf_len, __u64 flags) = (void *) 101;$/;"	v
bpf_sysctl_get_name	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sysctl_get_name)(struct bpf_sysctl *ctx, char *buf, unsigned long buf_len, __u64 flags) = (void *) 101;$/;"	v
bpf_sysctl_get_new_value	bpf_helper_defs.h	/^static long (*bpf_sysctl_get_new_value)(struct bpf_sysctl *ctx, char *buf, unsigned long buf_len) = (void *) 103;$/;"	v
bpf_sysctl_get_new_value	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sysctl_get_new_value)(struct bpf_sysctl *ctx, char *buf, unsigned long buf_len) = (void *) 103;$/;"	v
bpf_sysctl_set_new_value	bpf_helper_defs.h	/^static long (*bpf_sysctl_set_new_value)(struct bpf_sysctl *ctx, const char *buf, unsigned long buf_len) = (void *) 104;$/;"	v
bpf_sysctl_set_new_value	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_sysctl_set_new_value)(struct bpf_sysctl *ctx, const char *buf, unsigned long buf_len) = (void *) 104;$/;"	v
bpf_tail_call	bpf_helper_defs.h	/^static long (*bpf_tail_call)(void *ctx, void *prog_array_map, __u32 index) = (void *) 12;$/;"	v
bpf_tail_call	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_tail_call)(void *ctx, void *prog_array_map, __u32 index) = (void *) 12;$/;"	v
bpf_tail_call_static	bpf_helpers.h	/^bpf_tail_call_static(void *ctx, const void *map, const __u32 slot)$/;"	f
bpf_tail_call_static	build/usr/include/bpf/bpf_helpers.h	/^bpf_tail_call_static(void *ctx, const void *map, const __u32 slot)$/;"	f
bpf_target_arc	bpf_tracing.h	31;"	d
bpf_target_arc	bpf_tracing.h	61;"	d
bpf_target_arc	build/usr/include/bpf/bpf_tracing.h	31;"	d
bpf_target_arc	build/usr/include/bpf/bpf_tracing.h	61;"	d
bpf_target_arm	bpf_tracing.h	13;"	d
bpf_target_arm	bpf_tracing.h	43;"	d
bpf_target_arm	build/usr/include/bpf/bpf_tracing.h	13;"	d
bpf_target_arm	build/usr/include/bpf/bpf_tracing.h	43;"	d
bpf_target_arm64	bpf_tracing.h	16;"	d
bpf_target_arm64	bpf_tracing.h	46;"	d
bpf_target_arm64	build/usr/include/bpf/bpf_tracing.h	16;"	d
bpf_target_arm64	build/usr/include/bpf/bpf_tracing.h	46;"	d
bpf_target_defined	bpf_tracing.h	11;"	d
bpf_target_defined	bpf_tracing.h	14;"	d
bpf_target_defined	bpf_tracing.h	17;"	d
bpf_target_defined	bpf_tracing.h	20;"	d
bpf_target_defined	bpf_tracing.h	23;"	d
bpf_target_defined	bpf_tracing.h	26;"	d
bpf_target_defined	bpf_tracing.h	29;"	d
bpf_target_defined	bpf_tracing.h	32;"	d
bpf_target_defined	bpf_tracing.h	38;"	d
bpf_target_defined	bpf_tracing.h	41;"	d
bpf_target_defined	bpf_tracing.h	44;"	d
bpf_target_defined	bpf_tracing.h	47;"	d
bpf_target_defined	bpf_tracing.h	50;"	d
bpf_target_defined	bpf_tracing.h	53;"	d
bpf_target_defined	bpf_tracing.h	56;"	d
bpf_target_defined	bpf_tracing.h	59;"	d
bpf_target_defined	bpf_tracing.h	62;"	d
bpf_target_defined	bpf_tracing.h	8;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	11;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	14;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	17;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	20;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	23;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	26;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	29;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	32;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	38;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	41;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	44;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	47;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	50;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	53;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	56;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	59;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	62;"	d
bpf_target_defined	build/usr/include/bpf/bpf_tracing.h	8;"	d
bpf_target_mips	bpf_tracing.h	19;"	d
bpf_target_mips	bpf_tracing.h	49;"	d
bpf_target_mips	build/usr/include/bpf/bpf_tracing.h	19;"	d
bpf_target_mips	build/usr/include/bpf/bpf_tracing.h	49;"	d
bpf_target_powerpc	bpf_tracing.h	22;"	d
bpf_target_powerpc	bpf_tracing.h	52;"	d
bpf_target_powerpc	build/usr/include/bpf/bpf_tracing.h	22;"	d
bpf_target_powerpc	build/usr/include/bpf/bpf_tracing.h	52;"	d
bpf_target_riscv	bpf_tracing.h	28;"	d
bpf_target_riscv	bpf_tracing.h	58;"	d
bpf_target_riscv	build/usr/include/bpf/bpf_tracing.h	28;"	d
bpf_target_riscv	build/usr/include/bpf/bpf_tracing.h	58;"	d
bpf_target_s390	bpf_tracing.h	10;"	d
bpf_target_s390	bpf_tracing.h	40;"	d
bpf_target_s390	build/usr/include/bpf/bpf_tracing.h	10;"	d
bpf_target_s390	build/usr/include/bpf/bpf_tracing.h	40;"	d
bpf_target_sparc	bpf_tracing.h	25;"	d
bpf_target_sparc	bpf_tracing.h	55;"	d
bpf_target_sparc	build/usr/include/bpf/bpf_tracing.h	25;"	d
bpf_target_sparc	build/usr/include/bpf/bpf_tracing.h	55;"	d
bpf_target_x86	bpf_tracing.h	37;"	d
bpf_target_x86	bpf_tracing.h	7;"	d
bpf_target_x86	build/usr/include/bpf/bpf_tracing.h	37;"	d
bpf_target_x86	build/usr/include/bpf/bpf_tracing.h	7;"	d
bpf_task_fd_query	bpf.c	/^int bpf_task_fd_query(int pid, int fd, __u32 flags, char *buf, __u32 *buf_len,$/;"	f
bpf_task_pt_regs	bpf_helper_defs.h	/^static long (*bpf_task_pt_regs)(struct task_struct *task) = (void *) 175;$/;"	v
bpf_task_pt_regs	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_task_pt_regs)(struct task_struct *task) = (void *) 175;$/;"	v
bpf_task_storage_delete	bpf_helper_defs.h	/^static long (*bpf_task_storage_delete)(void *map, struct task_struct *task) = (void *) 157;$/;"	v
bpf_task_storage_delete	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_task_storage_delete)(void *map, struct task_struct *task) = (void *) 157;$/;"	v
bpf_task_storage_get	bpf_helper_defs.h	/^static void *(*bpf_task_storage_get)(void *map, struct task_struct *task, void *value, __u64 flags) = (void *) 156;$/;"	v
bpf_task_storage_get	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_task_storage_get)(void *map, struct task_struct *task, void *value, __u64 flags) = (void *) 156;$/;"	v
bpf_tc_attach	netlink.c	/^int bpf_tc_attach(const struct bpf_tc_hook *hook, struct bpf_tc_opts *opts)$/;"	f
bpf_tc_attach_point	build/usr/include/bpf/libbpf.h	/^enum bpf_tc_attach_point {$/;"	g
bpf_tc_attach_point	libbpf.h	/^enum bpf_tc_attach_point {$/;"	g
bpf_tc_detach	netlink.c	/^int bpf_tc_detach(const struct bpf_tc_hook *hook,$/;"	f
bpf_tc_flags	build/usr/include/bpf/libbpf.h	/^enum bpf_tc_flags {$/;"	g
bpf_tc_flags	libbpf.h	/^enum bpf_tc_flags {$/;"	g
bpf_tc_hook	build/usr/include/bpf/libbpf.h	/^struct bpf_tc_hook {$/;"	s
bpf_tc_hook	libbpf.h	/^struct bpf_tc_hook {$/;"	s
bpf_tc_hook__last_field	build/usr/include/bpf/libbpf.h	1220;"	d
bpf_tc_hook__last_field	libbpf.h	1220;"	d
bpf_tc_hook_create	netlink.c	/^int bpf_tc_hook_create(struct bpf_tc_hook *hook)$/;"	f
bpf_tc_hook_destroy	netlink.c	/^int bpf_tc_hook_destroy(struct bpf_tc_hook *hook)$/;"	f
bpf_tc_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_tc_opts {$/;"	s
bpf_tc_opts	libbpf.h	/^struct bpf_tc_opts {$/;"	s
bpf_tc_opts__last_field	build/usr/include/bpf/libbpf.h	1231;"	d
bpf_tc_opts__last_field	libbpf.h	1231;"	d
bpf_tc_query	netlink.c	/^int bpf_tc_query(const struct bpf_tc_hook *hook, struct bpf_tc_opts *opts)$/;"	f
bpf_tcp_check_syncookie	bpf_helper_defs.h	/^static long (*bpf_tcp_check_syncookie)(void *sk, void *iph, __u32 iph_len, struct tcphdr *th, __u32 th_len) = (void *) 100;$/;"	v
bpf_tcp_check_syncookie	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_tcp_check_syncookie)(void *sk, void *iph, __u32 iph_len, struct tcphdr *th, __u32 th_len) = (void *) 100;$/;"	v
bpf_tcp_gen_syncookie	bpf_helper_defs.h	/^static __s64 (*bpf_tcp_gen_syncookie)(void *sk, void *iph, __u32 iph_len, struct tcphdr *th, __u32 th_len) = (void *) 110;$/;"	v
bpf_tcp_gen_syncookie	build/usr/include/bpf/bpf_helper_defs.h	/^static __s64 (*bpf_tcp_gen_syncookie)(void *sk, void *iph, __u32 iph_len, struct tcphdr *th, __u32 th_len) = (void *) 110;$/;"	v
bpf_tcp_send_ack	bpf_helper_defs.h	/^static long (*bpf_tcp_send_ack)(void *tp, __u32 rcv_nxt) = (void *) 116;$/;"	v
bpf_tcp_send_ack	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_tcp_send_ack)(void *tp, __u32 rcv_nxt) = (void *) 116;$/;"	v
bpf_tcp_sock	bpf_helper_defs.h	/^static struct bpf_tcp_sock *(*bpf_tcp_sock)(struct bpf_sock *sk) = (void *) 96;$/;"	v	typeref:struct:bpf_tcp_sock
bpf_tcp_sock	build/usr/include/bpf/bpf_helper_defs.h	/^static struct bpf_tcp_sock *(*bpf_tcp_sock)(struct bpf_sock *sk) = (void *) 96;$/;"	v	typeref:struct:bpf_tcp_sock
bpf_test_run_opts	bpf.h	/^struct bpf_test_run_opts {$/;"	s
bpf_test_run_opts	build/usr/include/bpf/bpf.h	/^struct bpf_test_run_opts {$/;"	s
bpf_test_run_opts__last_field	bpf.h	528;"	d
bpf_test_run_opts__last_field	build/usr/include/bpf/bpf.h	528;"	d
bpf_this_cpu_ptr	bpf_helper_defs.h	/^static void *(*bpf_this_cpu_ptr)(const void *percpu_ptr) = (void *) 154;$/;"	v
bpf_this_cpu_ptr	build/usr/include/bpf/bpf_helper_defs.h	/^static void *(*bpf_this_cpu_ptr)(const void *percpu_ptr) = (void *) 154;$/;"	v
bpf_timer_cancel	bpf_helper_defs.h	/^static long (*bpf_timer_cancel)(struct bpf_timer *timer) = (void *) 172;$/;"	v
bpf_timer_cancel	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_timer_cancel)(struct bpf_timer *timer) = (void *) 172;$/;"	v
bpf_timer_init	bpf_helper_defs.h	/^static long (*bpf_timer_init)(struct bpf_timer *timer, void *map, __u64 flags) = (void *) 169;$/;"	v
bpf_timer_init	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_timer_init)(struct bpf_timer *timer, void *map, __u64 flags) = (void *) 169;$/;"	v
bpf_timer_set_callback	bpf_helper_defs.h	/^static long (*bpf_timer_set_callback)(struct bpf_timer *timer, void *callback_fn) = (void *) 170;$/;"	v
bpf_timer_set_callback	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_timer_set_callback)(struct bpf_timer *timer, void *callback_fn) = (void *) 170;$/;"	v
bpf_timer_start	bpf_helper_defs.h	/^static long (*bpf_timer_start)(struct bpf_timer *timer, __u64 nsecs, __u64 flags) = (void *) 171;$/;"	v
bpf_timer_start	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_timer_start)(struct bpf_timer *timer, __u64 nsecs, __u64 flags) = (void *) 171;$/;"	v
bpf_trace_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_trace_opts {$/;"	s
bpf_trace_opts	libbpf.h	/^struct bpf_trace_opts {$/;"	s
bpf_trace_opts__last_field	build/usr/include/bpf/libbpf.h	631;"	d
bpf_trace_opts__last_field	libbpf.h	631;"	d
bpf_trace_printk	bpf_helper_defs.h	/^static long (*bpf_trace_printk)(const char *fmt, __u32 fmt_size, ...) = (void *) 6;$/;"	v
bpf_trace_printk	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_trace_printk)(const char *fmt, __u32 fmt_size, ...) = (void *) 6;$/;"	v
bpf_trace_vprintk	bpf_helper_defs.h	/^static long (*bpf_trace_vprintk)(const char *fmt, __u32 fmt_size, const void *data, __u32 data_len) = (void *) 177;$/;"	v
bpf_trace_vprintk	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_trace_vprintk)(const char *fmt, __u32 fmt_size, const void *data, __u32 data_len) = (void *) 177;$/;"	v
bpf_tracepoint_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_tracepoint_opts {$/;"	s
bpf_tracepoint_opts	libbpf.h	/^struct bpf_tracepoint_opts {$/;"	s
bpf_tracepoint_opts__last_field	build/usr/include/bpf/libbpf.h	609;"	d
bpf_tracepoint_opts__last_field	libbpf.h	609;"	d
bpf_type_id_kind	bpf_core_read.h	/^enum bpf_type_id_kind {$/;"	g
bpf_type_id_kind	build/usr/include/bpf/bpf_core_read.h	/^enum bpf_type_id_kind {$/;"	g
bpf_type_info_kind	bpf_core_read.h	/^enum bpf_type_info_kind {$/;"	g
bpf_type_info_kind	build/usr/include/bpf/bpf_core_read.h	/^enum bpf_type_info_kind {$/;"	g
bpf_uprobe_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_uprobe_opts {$/;"	s
bpf_uprobe_opts	libbpf.h	/^struct bpf_uprobe_opts {$/;"	s
bpf_uprobe_opts__last_field	build/usr/include/bpf/libbpf.h	530;"	d
bpf_uprobe_opts__last_field	libbpf.h	530;"	d
bpf_usdt_arg	build/usr/include/bpf/usdt.bpf.h	/^int bpf_usdt_arg(struct pt_regs *ctx, __u64 arg_num, long *res)$/;"	f
bpf_usdt_arg	usdt.bpf.h	/^int bpf_usdt_arg(struct pt_regs *ctx, __u64 arg_num, long *res)$/;"	f
bpf_usdt_arg_cnt	build/usr/include/bpf/usdt.bpf.h	/^int bpf_usdt_arg_cnt(struct pt_regs *ctx)$/;"	f
bpf_usdt_arg_cnt	usdt.bpf.h	/^int bpf_usdt_arg_cnt(struct pt_regs *ctx)$/;"	f
bpf_usdt_cookie	build/usr/include/bpf/usdt.bpf.h	/^long bpf_usdt_cookie(struct pt_regs *ctx)$/;"	f
bpf_usdt_cookie	usdt.bpf.h	/^long bpf_usdt_cookie(struct pt_regs *ctx)$/;"	f
bpf_usdt_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_usdt_opts {$/;"	s
bpf_usdt_opts	libbpf.h	/^struct bpf_usdt_opts {$/;"	s
bpf_usdt_opts__last_field	build/usr/include/bpf/libbpf.h	579;"	d
bpf_usdt_opts__last_field	libbpf.h	579;"	d
bpf_var_skeleton	build/usr/include/bpf/libbpf.h	/^struct bpf_var_skeleton {$/;"	s
bpf_var_skeleton	libbpf.h	/^struct bpf_var_skeleton {$/;"	s
bpf_verify_program	bpf.c	/^int bpf_verify_program(enum bpf_prog_type type, const struct bpf_insn *insns,$/;"	f
bpf_xdp_adjust_head	bpf_helper_defs.h	/^static long (*bpf_xdp_adjust_head)(struct xdp_md *xdp_md, int delta) = (void *) 44;$/;"	v
bpf_xdp_adjust_head	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_xdp_adjust_head)(struct xdp_md *xdp_md, int delta) = (void *) 44;$/;"	v
bpf_xdp_adjust_meta	bpf_helper_defs.h	/^static long (*bpf_xdp_adjust_meta)(struct xdp_md *xdp_md, int delta) = (void *) 54;$/;"	v
bpf_xdp_adjust_meta	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_xdp_adjust_meta)(struct xdp_md *xdp_md, int delta) = (void *) 54;$/;"	v
bpf_xdp_adjust_tail	bpf_helper_defs.h	/^static long (*bpf_xdp_adjust_tail)(struct xdp_md *xdp_md, int delta) = (void *) 65;$/;"	v
bpf_xdp_adjust_tail	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_xdp_adjust_tail)(struct xdp_md *xdp_md, int delta) = (void *) 65;$/;"	v
bpf_xdp_attach	netlink.c	/^int bpf_xdp_attach(int ifindex, int prog_fd, __u32 flags, const struct bpf_xdp_attach_opts *opts)$/;"	f
bpf_xdp_attach_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_xdp_attach_opts {$/;"	s
bpf_xdp_attach_opts	libbpf.h	/^struct bpf_xdp_attach_opts {$/;"	s
bpf_xdp_attach_opts__last_field	build/usr/include/bpf/libbpf.h	1179;"	d
bpf_xdp_attach_opts__last_field	libbpf.h	1179;"	d
bpf_xdp_detach	netlink.c	/^int bpf_xdp_detach(int ifindex, __u32 flags, const struct bpf_xdp_attach_opts *opts)$/;"	f
bpf_xdp_get_buff_len	bpf_helper_defs.h	/^static __u64 (*bpf_xdp_get_buff_len)(struct xdp_md *xdp_md) = (void *) 188;$/;"	v
bpf_xdp_get_buff_len	build/usr/include/bpf/bpf_helper_defs.h	/^static __u64 (*bpf_xdp_get_buff_len)(struct xdp_md *xdp_md) = (void *) 188;$/;"	v
bpf_xdp_load_bytes	bpf_helper_defs.h	/^static long (*bpf_xdp_load_bytes)(struct xdp_md *xdp_md, __u32 offset, void *buf, __u32 len) = (void *) 189;$/;"	v
bpf_xdp_load_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_xdp_load_bytes)(struct xdp_md *xdp_md, __u32 offset, void *buf, __u32 len) = (void *) 189;$/;"	v
bpf_xdp_output	bpf_helper_defs.h	/^static long (*bpf_xdp_output)(void *ctx, void *map, __u64 flags, void *data, __u64 size) = (void *) 121;$/;"	v
bpf_xdp_output	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_xdp_output)(void *ctx, void *map, __u64 flags, void *data, __u64 size) = (void *) 121;$/;"	v
bpf_xdp_query	netlink.c	/^int bpf_xdp_query(int ifindex, int xdp_flags, struct bpf_xdp_query_opts *opts)$/;"	f
bpf_xdp_query_id	netlink.c	/^int bpf_xdp_query_id(int ifindex, int flags, __u32 *prog_id)$/;"	f
bpf_xdp_query_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_xdp_query_opts {$/;"	s
bpf_xdp_query_opts	libbpf.h	/^struct bpf_xdp_query_opts {$/;"	s
bpf_xdp_query_opts__last_field	build/usr/include/bpf/libbpf.h	1190;"	d
bpf_xdp_query_opts__last_field	libbpf.h	1190;"	d
bpf_xdp_set_link_opts	build/usr/include/bpf/libbpf.h	/^struct bpf_xdp_set_link_opts {$/;"	s
bpf_xdp_set_link_opts	libbpf.h	/^struct bpf_xdp_set_link_opts {$/;"	s
bpf_xdp_set_link_opts__last_field	build/usr/include/bpf/libbpf.h	1161;"	d
bpf_xdp_set_link_opts__last_field	libbpf.h	1161;"	d
bpf_xdp_store_bytes	bpf_helper_defs.h	/^static long (*bpf_xdp_store_bytes)(struct xdp_md *xdp_md, __u32 offset, void *buf, __u32 len) = (void *) 190;$/;"	v
bpf_xdp_store_bytes	build/usr/include/bpf/bpf_helper_defs.h	/^static long (*bpf_xdp_store_bytes)(struct xdp_md *xdp_md, __u32 offset, void *buf, __u32 len) = (void *) 190;$/;"	v
btf	btf.c	/^	struct btf *btf;$/;"	m	struct:btf_dedup	typeref:struct:btf_dedup::btf	file:
btf	btf.c	/^struct btf {$/;"	s	file:
btf	btf_dump.c	/^	const struct btf *btf;$/;"	m	struct:btf_dump	typeref:struct:btf_dump::btf	file:
btf	libbpf.c	/^	struct btf *btf;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::btf	file:
btf	libbpf.c	/^	struct btf *btf;$/;"	m	struct:module_btf	typeref:struct:module_btf::btf	file:
btf	linker.c	/^	struct btf *btf;$/;"	m	struct:bpf_linker	typeref:struct:bpf_linker::btf	file:
btf	linker.c	/^	struct btf *btf;$/;"	m	struct:src_obj	typeref:struct:src_obj::btf	file:
btf	relo_core.h	/^	const struct btf *btf;$/;"	m	struct:bpf_core_cand	typeref:struct:bpf_core_cand::btf
btf	relo_core.h	/^	const struct btf *btf;$/;"	m	struct:bpf_core_spec	typeref:struct:bpf_core_spec::btf
btf__add_array	btf.c	/^int btf__add_array(struct btf *btf, int index_type_id, int elem_type_id, __u32 nr_elems)$/;"	f
btf__add_btf	btf.c	/^int btf__add_btf(struct btf *btf, const struct btf *src_btf)$/;"	f
btf__add_const	btf.c	/^int btf__add_const(struct btf *btf, int ref_type_id)$/;"	f
btf__add_datasec	btf.c	/^int btf__add_datasec(struct btf *btf, const char *name, __u32 byte_sz)$/;"	f
btf__add_datasec_var_info	btf.c	/^int btf__add_datasec_var_info(struct btf *btf, int var_type_id, __u32 offset, __u32 byte_sz)$/;"	f
btf__add_decl_tag	btf.c	/^int btf__add_decl_tag(struct btf *btf, const char *value, int ref_type_id,$/;"	f
btf__add_enum	btf.c	/^int btf__add_enum(struct btf *btf, const char *name, __u32 byte_sz)$/;"	f
btf__add_enum_value	btf.c	/^int btf__add_enum_value(struct btf *btf, const char *name, __s64 value)$/;"	f
btf__add_field	btf.c	/^int btf__add_field(struct btf *btf, const char *name, int type_id,$/;"	f
btf__add_float	btf.c	/^int btf__add_float(struct btf *btf, const char *name, size_t byte_sz)$/;"	f
btf__add_func	btf.c	/^int btf__add_func(struct btf *btf, const char *name,$/;"	f
btf__add_func_param	btf.c	/^int btf__add_func_param(struct btf *btf, const char *name, int type_id)$/;"	f
btf__add_func_proto	btf.c	/^int btf__add_func_proto(struct btf *btf, int ret_type_id)$/;"	f
btf__add_fwd	btf.c	/^int btf__add_fwd(struct btf *btf, const char *name, enum btf_fwd_kind fwd_kind)$/;"	f
btf__add_int	btf.c	/^int btf__add_int(struct btf *btf, const char *name, size_t byte_sz, int encoding)$/;"	f
btf__add_ptr	btf.c	/^int btf__add_ptr(struct btf *btf, int ref_type_id)$/;"	f
btf__add_restrict	btf.c	/^int btf__add_restrict(struct btf *btf, int ref_type_id)$/;"	f
btf__add_str	btf.c	/^int btf__add_str(struct btf *btf, const char *s)$/;"	f
btf__add_struct	btf.c	/^int btf__add_struct(struct btf *btf, const char *name, __u32 byte_sz)$/;"	f
btf__add_type	btf.c	/^int btf__add_type(struct btf *btf, const struct btf *src_btf, const struct btf_type *src_type)$/;"	f
btf__add_type_tag	btf.c	/^int btf__add_type_tag(struct btf *btf, const char *value, int ref_type_id)$/;"	f
btf__add_typedef	btf.c	/^int btf__add_typedef(struct btf *btf, const char *name, int ref_type_id)$/;"	f
btf__add_union	btf.c	/^int btf__add_union(struct btf *btf, const char *name, __u32 byte_sz)$/;"	f
btf__add_var	btf.c	/^int btf__add_var(struct btf *btf, const char *name, int linkage, int type_id)$/;"	f
btf__add_volatile	btf.c	/^int btf__add_volatile(struct btf *btf, int ref_type_id)$/;"	f
btf__align_of	btf.c	/^int btf__align_of(const struct btf *btf, __u32 id)$/;"	f
btf__base_btf	btf.c	/^const struct btf *btf__base_btf(const struct btf *btf)$/;"	f
btf__dedup	btf.h	264;"	d
btf__dedup	build/usr/include/bpf/btf.h	264;"	d
btf__dedup_deprecated	btf.c	/^int btf__dedup_deprecated(struct btf *btf, struct btf_ext *btf_ext, const void *unused_opts)$/;"	f
btf__dedup_v0_6_0	btf.c	/^int btf__dedup_v0_6_0(struct btf *btf, const struct btf_dedup_opts *opts)$/;"	f
btf__endianness	btf.c	/^enum btf_endianness btf__endianness(const struct btf *btf)$/;"	f
btf__fd	btf.c	/^int btf__fd(const struct btf *btf)$/;"	f
btf__finalize_data	libbpf.c	/^int btf__finalize_data(struct bpf_object *obj, struct btf *btf)$/;"	f
btf__find_by_name	btf.c	/^__s32 btf__find_by_name(const struct btf *btf, const char *type_name)$/;"	f
btf__find_by_name_kind	btf.c	/^__s32 btf__find_by_name_kind(const struct btf *btf, const char *type_name,$/;"	f
btf__find_by_name_kind_own	btf.c	/^__s32 btf__find_by_name_kind_own(const struct btf *btf, const char *type_name,$/;"	f
btf__find_str	btf.c	/^int btf__find_str(struct btf *btf, const char *s)$/;"	f
btf__free	btf.c	/^void btf__free(struct btf *btf)$/;"	f
btf__get_from_id	btf.c	/^int btf__get_from_id(__u32 id, struct btf **btf)$/;"	f
btf__get_map_kv_tids	btf.c	/^int btf__get_map_kv_tids(const struct btf *btf, const char *map_name,$/;"	f
btf__get_nr_types	btf.c	/^__u32 btf__get_nr_types(const struct btf *btf)$/;"	f
btf__load_from_kernel_by_id	btf.c	/^struct btf *btf__load_from_kernel_by_id(__u32 id)$/;"	f
btf__load_from_kernel_by_id_split	btf.c	/^struct btf *btf__load_from_kernel_by_id_split(__u32 id, struct btf *base_btf)$/;"	f
btf__load_into_kernel	btf.c	/^int btf__load_into_kernel(struct btf *btf)$/;"	f
btf__load_module_btf	btf.c	/^struct btf *btf__load_module_btf(const char *module_name, struct btf *vmlinux_btf)$/;"	f
btf__load_vmlinux_btf	btf.c	/^struct btf *btf__load_vmlinux_btf(void)$/;"	f
btf__name_by_offset	btf.c	/^const char *btf__name_by_offset(const struct btf *btf, __u32 offset)$/;"	f
btf__name_by_offset	relo_core.c	/^static const char *btf__name_by_offset(const struct btf *btf, u32 offset)$/;"	f	file:
btf__new	btf.c	/^struct btf *btf__new(const void *data, __u32 size)$/;"	f
btf__new_empty	btf.c	/^struct btf *btf__new_empty(void)$/;"	f
btf__new_empty_split	btf.c	/^struct btf *btf__new_empty_split(struct btf *base_btf)$/;"	f
btf__parse	btf.c	/^struct btf *btf__parse(const char *path, struct btf_ext **btf_ext)$/;"	f
btf__parse_elf	btf.c	/^struct btf *btf__parse_elf(const char *path, struct btf_ext **btf_ext)$/;"	f
btf__parse_elf_split	btf.c	/^struct btf *btf__parse_elf_split(const char *path, struct btf *base_btf)$/;"	f
btf__parse_raw	btf.c	/^struct btf *btf__parse_raw(const char *path)$/;"	f
btf__parse_raw_split	btf.c	/^struct btf *btf__parse_raw_split(const char *path, struct btf *base_btf)$/;"	f
btf__parse_split	btf.c	/^struct btf *btf__parse_split(const char *path, struct btf *base_btf)$/;"	f
btf__pointer_size	btf.c	/^size_t btf__pointer_size(const struct btf *btf)$/;"	f
btf__raw_data	btf.c	/^const void *btf__raw_data(const struct btf *btf_ro, __u32 *size)$/;"	f
btf__resolve_size	btf.c	/^__s64 btf__resolve_size(const struct btf *btf, __u32 type_id)$/;"	f
btf__resolve_size	relo_core.c	/^static s64 btf__resolve_size(const struct btf *btf, u32 type_id)$/;"	f	file:
btf__resolve_type	btf.c	/^int btf__resolve_type(const struct btf *btf, __u32 type_id)$/;"	f
btf__set_endianness	btf.c	/^int btf__set_endianness(struct btf *btf, enum btf_endianness endian)$/;"	f
btf__set_fd	btf.c	/^void btf__set_fd(struct btf *btf, int fd)$/;"	f
btf__set_pointer_size	btf.c	/^int btf__set_pointer_size(struct btf *btf, size_t ptr_sz)$/;"	f
btf__str_by_offset	btf.c	/^const char *btf__str_by_offset(const struct btf *btf, __u32 offset)$/;"	f
btf__type_by_id	btf.c	/^const struct btf_type *btf__type_by_id(const struct btf *btf, __u32 type_id)$/;"	f
btf__type_cnt	btf.c	/^__u32 btf__type_cnt(const struct btf *btf)$/;"	f
btf_add_composite	btf.c	/^static int btf_add_composite(struct btf *btf, int kind, const char *name, __u32 bytes_sz)$/;"	f	file:
btf_add_ref_kind	btf.c	/^static int btf_add_ref_kind(struct btf *btf, int kind, const char *name, int ref_type_id)$/;"	f	file:
btf_add_type_idx_entry	btf.c	/^static int btf_add_type_idx_entry(struct btf *btf, __u32 type_off)$/;"	f	file:
btf_add_type_mem	btf.c	/^static void *btf_add_type_mem(struct btf *btf, size_t add_sz)$/;"	f	file:
btf_add_type_offs_mem	btf.c	/^static void *btf_add_type_offs_mem(struct btf *btf, size_t add_cnt)$/;"	f	file:
btf_array	btf.h	/^static inline struct btf_array *btf_array(const struct btf_type *t)$/;"	f
btf_array	build/usr/include/bpf/btf.h	/^static inline struct btf_array *btf_array(const struct btf_type *t)$/;"	f
btf_bswap_hdr	btf.c	/^static void btf_bswap_hdr(struct btf_header *h)$/;"	f	file:
btf_bswap_type_base	btf.c	/^static void btf_bswap_type_base(struct btf_type *t)$/;"	f	file:
btf_bswap_type_rest	btf.c	/^static int btf_bswap_type_rest(struct btf_type *t)$/;"	f	file:
btf_commit_type	btf.c	/^static int btf_commit_type(struct btf *btf, int data_sz)$/;"	f	file:
btf_compat_array	btf.c	/^static bool btf_compat_array(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_compat_enum	btf.c	/^static bool btf_compat_enum(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_compat_fnproto	btf.c	/^static bool btf_compat_fnproto(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_custom_path	build/usr/include/bpf/libbpf.h	/^	const char *btf_custom_path;$/;"	m	struct:bpf_object_open_opts
btf_custom_path	libbpf.c	/^	char *btf_custom_path;$/;"	m	struct:bpf_object	file:
btf_custom_path	libbpf.h	/^	const char *btf_custom_path;$/;"	m	struct:bpf_object_open_opts
btf_decl_tag	btf.h	/^static inline struct btf_decl_tag *btf_decl_tag(const struct btf_type *t)$/;"	f
btf_decl_tag	build/usr/include/bpf/btf.h	/^static inline struct btf_decl_tag *btf_decl_tag(const struct btf_type *t)$/;"	f
btf_dedup	btf.c	/^struct btf_dedup {$/;"	s	file:
btf_dedup_clear_hypot_map	btf.c	/^static void btf_dedup_clear_hypot_map(struct btf_dedup *d)$/;"	f	file:
btf_dedup_collision_hash_fn	btf.c	/^static size_t btf_dedup_collision_hash_fn(const void *key, void *ctx)$/;"	f	file:
btf_dedup_compact_types	btf.c	/^static int btf_dedup_compact_types(struct btf_dedup *d)$/;"	f	file:
btf_dedup_equal_fn	btf.c	/^static bool btf_dedup_equal_fn(const void *k1, const void *k2, void *ctx)$/;"	f	file:
btf_dedup_free	btf.c	/^static void btf_dedup_free(struct btf_dedup *d)$/;"	f	file:
btf_dedup_hypot_map_add	btf.c	/^static int btf_dedup_hypot_map_add(struct btf_dedup *d,$/;"	f	file:
btf_dedup_identical_arrays	btf.c	/^static int btf_dedup_identical_arrays(struct btf_dedup *d, __u32 id1, __u32 id2)$/;"	f	file:
btf_dedup_identical_structs	btf.c	/^static bool btf_dedup_identical_structs(struct btf_dedup *d, __u32 id1, __u32 id2)$/;"	f	file:
btf_dedup_identity_hash_fn	btf.c	/^static size_t btf_dedup_identity_hash_fn(const void *key, void *ctx)$/;"	f	file:
btf_dedup_is_equiv	btf.c	/^static int btf_dedup_is_equiv(struct btf_dedup *d, __u32 cand_id,$/;"	f	file:
btf_dedup_merge_hypot_map	btf.c	/^static void btf_dedup_merge_hypot_map(struct btf_dedup *d)$/;"	f	file:
btf_dedup_new	btf.c	/^static struct btf_dedup *btf_dedup_new(struct btf *btf, const struct btf_dedup_opts *opts)$/;"	f	file:
btf_dedup_opts	btf.h	/^struct btf_dedup_opts {$/;"	s
btf_dedup_opts	build/usr/include/bpf/btf.h	/^struct btf_dedup_opts {$/;"	s
btf_dedup_opts__last_field	btf.h	256;"	d
btf_dedup_opts__last_field	build/usr/include/bpf/btf.h	256;"	d
btf_dedup_prep	btf.c	/^static int btf_dedup_prep(struct btf_dedup *d)$/;"	f	file:
btf_dedup_prim_type	btf.c	/^static int btf_dedup_prim_type(struct btf_dedup *d, __u32 type_id)$/;"	f	file:
btf_dedup_prim_types	btf.c	/^static int btf_dedup_prim_types(struct btf_dedup *d)$/;"	f	file:
btf_dedup_ref_type	btf.c	/^static int btf_dedup_ref_type(struct btf_dedup *d, __u32 type_id)$/;"	f	file:
btf_dedup_ref_types	btf.c	/^static int btf_dedup_ref_types(struct btf_dedup *d)$/;"	f	file:
btf_dedup_remap_type_id	btf.c	/^static int btf_dedup_remap_type_id(__u32 *type_id, void *ctx)$/;"	f	file:
btf_dedup_remap_types	btf.c	/^static int btf_dedup_remap_types(struct btf_dedup *d)$/;"	f	file:
btf_dedup_strings	btf.c	/^static int btf_dedup_strings(struct btf_dedup *d)$/;"	f	file:
btf_dedup_struct_type	btf.c	/^static int btf_dedup_struct_type(struct btf_dedup *d, __u32 type_id)$/;"	f	file:
btf_dedup_struct_types	btf.c	/^static int btf_dedup_struct_types(struct btf_dedup *d)$/;"	f	file:
btf_dedup_table_add	btf.c	/^static int btf_dedup_table_add(struct btf_dedup *d, long hash, __u32 type_id)$/;"	f	file:
btf_dump	btf_dump.c	/^struct btf_dump {$/;"	s	file:
btf_dump__dump_type	btf_dump.c	/^int btf_dump__dump_type(struct btf_dump *d, __u32 id)$/;"	f
btf_dump__dump_type_data	btf_dump.c	/^int btf_dump__dump_type_data(struct btf_dump *d, __u32 id,$/;"	f
btf_dump__emit_type_decl	btf_dump.c	/^int btf_dump__emit_type_decl(struct btf_dump *d, __u32 id,$/;"	f
btf_dump__free	btf_dump.c	/^void btf_dump__free(struct btf_dump *d)$/;"	f
btf_dump__new	btf.h	322;"	d
btf_dump__new	build/usr/include/bpf/btf.h	322;"	d
btf_dump__new_deprecated	btf_dump.c	/^struct btf_dump *btf_dump__new_deprecated(const struct btf *btf,$/;"	f
btf_dump__new_v0_6_0	btf_dump.c	/^struct btf_dump *btf_dump__new_v0_6_0(const struct btf *btf,$/;"	f
btf_dump_add_emit_queue_id	btf_dump.c	/^static int btf_dump_add_emit_queue_id(struct btf_dump *d, __u32 id)$/;"	f	file:
btf_dump_array_data	btf_dump.c	/^static int btf_dump_array_data(struct btf_dump *d,$/;"	f	file:
btf_dump_base_type_check_zero	btf_dump.c	/^static int btf_dump_base_type_check_zero(struct btf_dump *d,$/;"	f	file:
btf_dump_bitfield_check_zero	btf_dump.c	/^static int btf_dump_bitfield_check_zero(struct btf_dump *d,$/;"	f	file:
btf_dump_bitfield_data	btf_dump.c	/^static int btf_dump_bitfield_data(struct btf_dump *d,$/;"	f	file:
btf_dump_data	btf_dump.c	/^struct btf_dump_data {$/;"	s	file:
btf_dump_data_delim	btf_dump.c	/^static const char *btf_dump_data_delim(struct btf_dump *d)$/;"	f	file:
btf_dump_data_newline	btf_dump.c	/^static const char *btf_dump_data_newline(struct btf_dump *d)$/;"	f	file:
btf_dump_data_pfx	btf_dump.c	/^static void btf_dump_data_pfx(struct btf_dump *d)$/;"	f	file:
btf_dump_datasec_data	btf_dump.c	/^static int btf_dump_datasec_data(struct btf_dump *d,$/;"	f	file:
btf_dump_drop_mods	btf_dump.c	/^static void btf_dump_drop_mods(struct btf_dump *d, struct id_stack *decl_stack)$/;"	f	file:
btf_dump_dump_type_data	btf_dump.c	/^static int btf_dump_dump_type_data(struct btf_dump *d,$/;"	f	file:
btf_dump_emit_bit_padding	btf_dump.c	/^static void btf_dump_emit_bit_padding(const struct btf_dump *d,$/;"	f	file:
btf_dump_emit_enum_def	btf_dump.c	/^static void btf_dump_emit_enum_def(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_enum_fwd	btf_dump.c	/^static void btf_dump_emit_enum_fwd(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_fwd_def	btf_dump.c	/^static void btf_dump_emit_fwd_def(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_missing_aliases	btf_dump.c	/^static void btf_dump_emit_missing_aliases(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_mods	btf_dump.c	/^static void btf_dump_emit_mods(struct btf_dump *d, struct id_stack *decl_stack)$/;"	f	file:
btf_dump_emit_name	btf_dump.c	/^static void btf_dump_emit_name(const struct btf_dump *d,$/;"	f	file:
btf_dump_emit_struct_def	btf_dump.c	/^static void btf_dump_emit_struct_def(struct btf_dump *d,$/;"	f	file:
btf_dump_emit_struct_fwd	btf_dump.c	/^static void btf_dump_emit_struct_fwd(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_type	btf_dump.c	/^static void btf_dump_emit_type(struct btf_dump *d, __u32 id, __u32 cont_id)$/;"	f	file:
btf_dump_emit_type_cast	btf_dump.c	/^static void btf_dump_emit_type_cast(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_type_chain	btf_dump.c	/^static void btf_dump_emit_type_chain(struct btf_dump *d,$/;"	f	file:
btf_dump_emit_type_decl	btf_dump.c	/^static void btf_dump_emit_type_decl(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_emit_type_decl_opts	btf.h	/^struct btf_dump_emit_type_decl_opts {$/;"	s
btf_dump_emit_type_decl_opts	build/usr/include/bpf/btf.h	/^struct btf_dump_emit_type_decl_opts {$/;"	s
btf_dump_emit_type_decl_opts__last_field	btf.h	352;"	d
btf_dump_emit_type_decl_opts__last_field	build/usr/include/bpf/btf.h	352;"	d
btf_dump_emit_typedef_def	btf_dump.c	/^static void btf_dump_emit_typedef_def(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_enum_data	btf_dump.c	/^static int btf_dump_enum_data(struct btf_dump *d,$/;"	f	file:
btf_dump_float_data	btf_dump.c	/^static int btf_dump_float_data(struct btf_dump *d,$/;"	f	file:
btf_dump_get_bitfield_value	btf_dump.c	/^static int btf_dump_get_bitfield_value(struct btf_dump *d,$/;"	f	file:
btf_dump_get_enum_value	btf_dump.c	/^static int btf_dump_get_enum_value(struct btf_dump *d,$/;"	f	file:
btf_dump_ident_name	btf_dump.c	/^static const char *btf_dump_ident_name(struct btf_dump *d, __u32 id)$/;"	f	file:
btf_dump_int_data	btf_dump.c	/^static int btf_dump_int_data(struct btf_dump *d,$/;"	f	file:
btf_dump_is_blacklisted	btf_dump.c	/^static bool btf_dump_is_blacklisted(struct btf_dump *d, __u32 id)$/;"	f	file:
btf_dump_mark_referenced	btf_dump.c	/^static int btf_dump_mark_referenced(struct btf_dump *d)$/;"	f	file:
btf_dump_name_dups	btf_dump.c	/^static size_t btf_dump_name_dups(struct btf_dump *d, struct hashmap *name_map,$/;"	f	file:
btf_dump_opts	btf.h	/^struct btf_dump_opts {$/;"	s
btf_dump_opts	build/usr/include/bpf/btf.h	/^struct btf_dump_opts {$/;"	s
btf_dump_order_type	btf_dump.c	/^static int btf_dump_order_type(struct btf_dump *d, __u32 id, bool through_ptr)$/;"	f	file:
btf_dump_printf	btf_dump.c	/^static void btf_dump_printf(const struct btf_dump *d, const char *fmt, ...)$/;"	f	file:
btf_dump_printf_fn_t	btf.h	/^typedef void (*btf_dump_printf_fn_t)(void *ctx, const char *fmt, va_list args);$/;"	t
btf_dump_printf_fn_t	build/usr/include/bpf/btf.h	/^typedef void (*btf_dump_printf_fn_t)(void *ctx, const char *fmt, va_list args);$/;"	t
btf_dump_ptr_data	btf_dump.c	/^static int btf_dump_ptr_data(struct btf_dump *d,$/;"	f	file:
btf_dump_push_decl_stack_id	btf_dump.c	/^static int btf_dump_push_decl_stack_id(struct btf_dump *d, __u32 id)$/;"	f	file:
btf_dump_resize	btf_dump.c	/^static int btf_dump_resize(struct btf_dump *d)$/;"	f	file:
btf_dump_resolve_name	btf_dump.c	/^static const char *btf_dump_resolve_name(struct btf_dump *d, __u32 id,$/;"	f	file:
btf_dump_struct_data	btf_dump.c	/^static int btf_dump_struct_data(struct btf_dump *d,$/;"	f	file:
btf_dump_type_aux_state	btf_dump.c	/^struct btf_dump_type_aux_state {$/;"	s	file:
btf_dump_type_data_check_overflow	btf_dump.c	/^static int btf_dump_type_data_check_overflow(struct btf_dump *d,$/;"	f	file:
btf_dump_type_data_check_zero	btf_dump.c	/^static int btf_dump_type_data_check_zero(struct btf_dump *d,$/;"	f	file:
btf_dump_type_data_opts	btf.h	/^struct btf_dump_type_data_opts {$/;"	s
btf_dump_type_data_opts	build/usr/include/bpf/btf.h	/^struct btf_dump_type_data_opts {$/;"	s
btf_dump_type_data_opts__last_field	btf.h	370;"	d
btf_dump_type_data_opts__last_field	build/usr/include/bpf/btf.h	370;"	d
btf_dump_type_emit_state	btf_dump.c	/^enum btf_dump_type_emit_state {$/;"	g	file:
btf_dump_type_name	btf_dump.c	/^static const char *btf_dump_type_name(struct btf_dump *d, __u32 id)$/;"	f	file:
btf_dump_type_order_state	btf_dump.c	/^enum btf_dump_type_order_state {$/;"	g	file:
btf_dump_type_values	btf_dump.c	1570;"	d	file:
btf_dump_unsupported_data	btf_dump.c	/^static int btf_dump_unsupported_data(struct btf_dump *d,$/;"	f	file:
btf_dump_var_data	btf_dump.c	/^static int btf_dump_var_data(struct btf_dump *d,$/;"	f	file:
btf_endianness	btf.h	/^enum btf_endianness {$/;"	g
btf_endianness	build/usr/include/bpf/btf.h	/^enum btf_endianness {$/;"	g
btf_ensure_modifiable	btf.c	/^static int btf_ensure_modifiable(struct btf *btf)$/;"	f	file:
btf_enum	btf.h	/^static inline struct btf_enum *btf_enum(const struct btf_type *t)$/;"	f
btf_enum	build/usr/include/bpf/btf.h	/^static inline struct btf_enum *btf_enum(const struct btf_type *t)$/;"	f
btf_equal_array	btf.c	/^static bool btf_equal_array(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_equal_common	btf.c	/^static bool btf_equal_common(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_equal_enum	btf.c	/^static bool btf_equal_enum(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_equal_fnproto	btf.c	/^static bool btf_equal_fnproto(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_equal_int_tag	btf.c	/^static bool btf_equal_int_tag(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_ext	btf.c	/^	struct btf_ext *btf_ext;$/;"	m	struct:btf_dedup	typeref:struct:btf_dedup::btf_ext	file:
btf_ext	btf.h	/^	struct btf_ext *btf_ext;$/;"	m	struct:btf_dedup_opts	typeref:struct:btf_dedup_opts::btf_ext
btf_ext	build/usr/include/bpf/btf.h	/^	struct btf_ext *btf_ext;$/;"	m	struct:btf_dedup_opts	typeref:struct:btf_dedup_opts::btf_ext
btf_ext	libbpf.c	/^	struct btf_ext *btf_ext;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::btf_ext	file:
btf_ext	libbpf_internal.h	/^struct btf_ext {$/;"	s
btf_ext	linker.c	/^	struct btf_ext *btf_ext;$/;"	m	struct:bpf_linker	typeref:struct:bpf_linker::btf_ext	file:
btf_ext	linker.c	/^	struct btf_ext *btf_ext;$/;"	m	struct:src_obj	typeref:struct:src_obj::btf_ext	file:
btf_ext__free	btf.c	/^void btf_ext__free(struct btf_ext *btf_ext)$/;"	f
btf_ext__func_info_rec_size	btf.c	/^__u32 btf_ext__func_info_rec_size(const struct btf_ext *btf_ext)$/;"	f
btf_ext__get_raw_data	btf.c	/^const void *btf_ext__get_raw_data(const struct btf_ext *btf_ext, __u32 *size)$/;"	f
btf_ext__line_info_rec_size	btf.c	/^__u32 btf_ext__line_info_rec_size(const struct btf_ext *btf_ext)$/;"	f
btf_ext__new	btf.c	/^struct btf_ext *btf_ext__new(const __u8 *data, __u32 size)$/;"	f
btf_ext__reloc_func_info	btf.c	/^int btf_ext__reloc_func_info(const struct btf *btf,$/;"	f
btf_ext__reloc_line_info	btf.c	/^int btf_ext__reloc_line_info(const struct btf *btf,$/;"	f
btf_ext_header	libbpf_internal.h	/^struct btf_ext_header {$/;"	s
btf_ext_info	libbpf_internal.h	/^struct btf_ext_info {$/;"	s
btf_ext_info_sec	libbpf_internal.h	/^struct btf_ext_info_sec {$/;"	s
btf_ext_parse_hdr	btf.c	/^static int btf_ext_parse_hdr(__u8 *data, __u32 data_size)$/;"	f	file:
btf_ext_reloc_info	btf.c	/^static int btf_ext_reloc_info(const struct btf *btf,$/;"	f	file:
btf_ext_sec_data	linker.c	/^struct btf_ext_sec_data {$/;"	s	file:
btf_ext_sec_setup_param	btf.c	/^struct btf_ext_sec_setup_param {$/;"	s	file:
btf_ext_setup_core_relos	btf.c	/^static int btf_ext_setup_core_relos(struct btf_ext *btf_ext)$/;"	f	file:
btf_ext_setup_func_info	btf.c	/^static int btf_ext_setup_func_info(struct btf_ext *btf_ext)$/;"	f	file:
btf_ext_setup_info	btf.c	/^static int btf_ext_setup_info(struct btf_ext *btf_ext,$/;"	f	file:
btf_ext_setup_line_info	btf.c	/^static int btf_ext_setup_line_info(struct btf_ext *btf_ext)$/;"	f	file:
btf_ext_visit_str_offs	btf.c	/^int btf_ext_visit_str_offs(struct btf_ext *btf_ext, str_off_visit_fn visit, void *ctx)$/;"	f
btf_ext_visit_type_ids	btf.c	/^int btf_ext_visit_type_ids(struct btf_ext *btf_ext, type_id_visit_fn visit, void *ctx)$/;"	f
btf_fd	bpf.h	/^	__u32 btf_fd;$/;"	m	struct:bpf_create_map_attr
btf_fd	bpf.h	/^	__u32 btf_fd;$/;"	m	struct:bpf_map_create_opts
btf_fd	build/usr/include/bpf/bpf.h	/^	__u32 btf_fd;$/;"	m	struct:bpf_create_map_attr
btf_fd	build/usr/include/bpf/bpf.h	/^	__u32 btf_fd;$/;"	m	struct:bpf_map_create_opts
btf_fd	gen_loader.c	/^	__u32 btf_fd;$/;"	m	struct:loader_stack	file:
btf_fd_idx	libbpf.c	/^			__s16 btf_fd_idx;$/;"	m	struct:extern_desc::__anon42::__anon44	file:
btf_finalize_data	libbpf.c	/^static int btf_finalize_data(struct bpf_object *obj, struct btf *btf)$/;"	f	file:
btf_find_by_name_kind	btf.c	/^static __s32 btf_find_by_name_kind(const struct btf *btf, int start_id,$/;"	f	file:
btf_fixup_datasec	libbpf.c	/^static int btf_fixup_datasec(struct bpf_object *obj, struct btf *btf,$/;"	f	file:
btf_for_each_str_off	btf.c	/^static int btf_for_each_str_off(struct btf_dedup *d, str_off_visit_fn fn, void *ctx)$/;"	f	file:
btf_func_linkage	libbpf_internal.h	/^static inline enum btf_func_linkage btf_func_linkage(const struct btf_type *t)$/;"	f
btf_fwd_kind	btf.c	/^static inline __u16 btf_fwd_kind(struct btf_type *t)$/;"	f	file:
btf_fwd_kind	btf.h	/^enum btf_fwd_kind {$/;"	g
btf_fwd_kind	build/usr/include/bpf/btf.h	/^enum btf_fwd_kind {$/;"	g
btf_get_from_fd	btf.c	/^struct btf *btf_get_from_fd(int btf_fd, struct btf *base_btf)$/;"	f
btf_get_kernel_prefix_kind	libbpf.c	/^void btf_get_kernel_prefix_kind(enum bpf_attach_type attach_type,$/;"	f
btf_get_raw_data	btf.c	/^static void *btf_get_raw_data(const struct btf *btf, __u32 *size, bool swap_endian)$/;"	f	file:
btf_hash_array	btf.c	/^static long btf_hash_array(struct btf_type *t)$/;"	f	file:
btf_hash_common	btf.c	/^static long btf_hash_common(struct btf_type *t)$/;"	f	file:
btf_hash_enum	btf.c	/^static long btf_hash_enum(struct btf_type *t)$/;"	f	file:
btf_hash_fnproto	btf.c	/^static long btf_hash_fnproto(struct btf_type *t)$/;"	f	file:
btf_hash_int_decl_tag	btf.c	/^static long btf_hash_int_decl_tag(struct btf_type *t)$/;"	f	file:
btf_hash_struct	btf.c	/^static long btf_hash_struct(struct btf_type *t)$/;"	f	file:
btf_id	libbpf.c	/^	int btf_id;$/;"	m	struct:extern_desc	file:
btf_id	linker.c	/^	int btf_id;$/;"	m	struct:glob_sym	file:
btf_int_bits	btf.h	/^static inline __u8 btf_int_bits(const struct btf_type *t)$/;"	f
btf_int_bits	build/usr/include/bpf/btf.h	/^static inline __u8 btf_int_bits(const struct btf_type *t)$/;"	f
btf_int_encoding	btf.h	/^static inline __u8 btf_int_encoding(const struct btf_type *t)$/;"	f
btf_int_encoding	build/usr/include/bpf/btf.h	/^static inline __u8 btf_int_encoding(const struct btf_type *t)$/;"	f
btf_int_offset	btf.h	/^static inline __u8 btf_int_offset(const struct btf_type *t)$/;"	f
btf_int_offset	build/usr/include/bpf/btf.h	/^static inline __u8 btf_int_offset(const struct btf_type *t)$/;"	f
btf_invalidate_raw_data	btf.c	/^static void btf_invalidate_raw_data(struct btf *btf)$/;"	f	file:
btf_is_array	btf.h	/^static inline bool btf_is_array(const struct btf_type *t)$/;"	f
btf_is_array	build/usr/include/bpf/btf.h	/^static inline bool btf_is_array(const struct btf_type *t)$/;"	f
btf_is_composite	btf.h	/^static inline bool btf_is_composite(const struct btf_type *t)$/;"	f
btf_is_composite	build/usr/include/bpf/btf.h	/^static inline bool btf_is_composite(const struct btf_type *t)$/;"	f
btf_is_const	btf.h	/^static inline bool btf_is_const(const struct btf_type *t)$/;"	f
btf_is_const	build/usr/include/bpf/btf.h	/^static inline bool btf_is_const(const struct btf_type *t)$/;"	f
btf_is_datasec	btf.h	/^static inline bool btf_is_datasec(const struct btf_type *t)$/;"	f
btf_is_datasec	build/usr/include/bpf/btf.h	/^static inline bool btf_is_datasec(const struct btf_type *t)$/;"	f
btf_is_decl_tag	btf.h	/^static inline bool btf_is_decl_tag(const struct btf_type *t)$/;"	f
btf_is_decl_tag	build/usr/include/bpf/btf.h	/^static inline bool btf_is_decl_tag(const struct btf_type *t)$/;"	f
btf_is_enum	btf.h	/^static inline bool btf_is_enum(const struct btf_type *t)$/;"	f
btf_is_enum	build/usr/include/bpf/btf.h	/^static inline bool btf_is_enum(const struct btf_type *t)$/;"	f
btf_is_enum64	btf.h	/^static inline bool btf_is_enum64(const struct btf_type *t)$/;"	f
btf_is_enum64	build/usr/include/bpf/btf.h	/^static inline bool btf_is_enum64(const struct btf_type *t)$/;"	f
btf_is_enum_fwd	btf.c	/^static inline bool btf_is_enum_fwd(struct btf_type *t)$/;"	f	file:
btf_is_float	btf.h	/^static inline bool btf_is_float(const struct btf_type *t)$/;"	f
btf_is_float	build/usr/include/bpf/btf.h	/^static inline bool btf_is_float(const struct btf_type *t)$/;"	f
btf_is_func	btf.h	/^static inline bool btf_is_func(const struct btf_type *t)$/;"	f
btf_is_func	build/usr/include/bpf/btf.h	/^static inline bool btf_is_func(const struct btf_type *t)$/;"	f
btf_is_func_proto	btf.h	/^static inline bool btf_is_func_proto(const struct btf_type *t)$/;"	f
btf_is_func_proto	build/usr/include/bpf/btf.h	/^static inline bool btf_is_func_proto(const struct btf_type *t)$/;"	f
btf_is_fwd	btf.h	/^static inline bool btf_is_fwd(const struct btf_type *t)$/;"	f
btf_is_fwd	build/usr/include/bpf/btf.h	/^static inline bool btf_is_fwd(const struct btf_type *t)$/;"	f
btf_is_int	btf.h	/^static inline bool btf_is_int(const struct btf_type *t)$/;"	f
btf_is_int	build/usr/include/bpf/btf.h	/^static inline bool btf_is_int(const struct btf_type *t)$/;"	f
btf_is_mod	btf.h	/^static inline bool btf_is_mod(const struct btf_type *t)$/;"	f
btf_is_mod	build/usr/include/bpf/btf.h	/^static inline bool btf_is_mod(const struct btf_type *t)$/;"	f
btf_is_modifiable	btf.c	/^static bool btf_is_modifiable(const struct btf *btf)$/;"	f	file:
btf_is_non_static	linker.c	/^static bool btf_is_non_static(const struct btf_type *t)$/;"	f	file:
btf_is_ptr	btf.h	/^static inline bool btf_is_ptr(const struct btf_type *t)$/;"	f
btf_is_ptr	build/usr/include/bpf/btf.h	/^static inline bool btf_is_ptr(const struct btf_type *t)$/;"	f
btf_is_restrict	btf.h	/^static inline bool btf_is_restrict(const struct btf_type *t)$/;"	f
btf_is_restrict	build/usr/include/bpf/btf.h	/^static inline bool btf_is_restrict(const struct btf_type *t)$/;"	f
btf_is_struct	btf.h	/^static inline bool btf_is_struct(const struct btf_type *t)$/;"	f
btf_is_struct	build/usr/include/bpf/btf.h	/^static inline bool btf_is_struct(const struct btf_type *t)$/;"	f
btf_is_struct_packed	btf_dump.c	/^static bool btf_is_struct_packed(const struct btf *btf, __u32 id,$/;"	f	file:
btf_is_type_tag	btf.h	/^static inline bool btf_is_type_tag(const struct btf_type *t)$/;"	f
btf_is_type_tag	build/usr/include/bpf/btf.h	/^static inline bool btf_is_type_tag(const struct btf_type *t)$/;"	f
btf_is_typedef	btf.h	/^static inline bool btf_is_typedef(const struct btf_type *t)$/;"	f
btf_is_typedef	build/usr/include/bpf/btf.h	/^static inline bool btf_is_typedef(const struct btf_type *t)$/;"	f
btf_is_union	btf.h	/^static inline bool btf_is_union(const struct btf_type *t)$/;"	f
btf_is_union	build/usr/include/bpf/btf.h	/^static inline bool btf_is_union(const struct btf_type *t)$/;"	f
btf_is_var	btf.h	/^static inline bool btf_is_var(const struct btf_type *t)$/;"	f
btf_is_var	build/usr/include/bpf/btf.h	/^static inline bool btf_is_var(const struct btf_type *t)$/;"	f
btf_is_void	btf.h	/^static inline bool btf_is_void(const struct btf_type *t)$/;"	f
btf_is_void	build/usr/include/bpf/btf.h	/^static inline bool btf_is_void(const struct btf_type *t)$/;"	f
btf_is_volatile	btf.h	/^static inline bool btf_is_volatile(const struct btf_type *t)$/;"	f
btf_is_volatile	build/usr/include/bpf/btf.h	/^static inline bool btf_is_volatile(const struct btf_type *t)$/;"	f
btf_key_type_id	bpf.h	/^	__u32 btf_key_type_id;$/;"	m	struct:bpf_create_map_attr
btf_key_type_id	bpf.h	/^	__u32 btf_key_type_id;$/;"	m	struct:bpf_map_create_opts
btf_key_type_id	build/usr/include/bpf/bpf.h	/^	__u32 btf_key_type_id;$/;"	m	struct:bpf_create_map_attr
btf_key_type_id	build/usr/include/bpf/bpf.h	/^	__u32 btf_key_type_id;$/;"	m	struct:bpf_map_create_opts
btf_key_type_id	libbpf.c	/^	__u32 btf_key_type_id;$/;"	m	struct:bpf_map	file:
btf_kflag	btf.h	/^static inline bool btf_kflag(const struct btf_type *t)$/;"	f
btf_kflag	build/usr/include/bpf/btf.h	/^static inline bool btf_kflag(const struct btf_type *t)$/;"	f
btf_kind	btf.h	/^static inline __u16 btf_kind(const struct btf_type *t)$/;"	f
btf_kind	build/usr/include/bpf/btf.h	/^static inline __u16 btf_kind(const struct btf_type *t)$/;"	f
btf_kind_str	libbpf.c	/^const char *btf_kind_str(const struct btf_type *t)$/;"	f
btf_kind_str	relo_core.c	/^static const char *btf_kind_str(const struct btf_type *t)$/;"	f	file:
btf_last_type	btf.c	/^static struct btf_type *btf_last_type(struct btf *btf)$/;"	f	file:
btf_load_into_kernel	btf.c	/^int btf_load_into_kernel(struct btf *btf, char *log_buf, size_t log_sz, __u32 log_level)$/;"	f
btf_map_def	libbpf_internal.h	/^struct btf_map_def {$/;"	s
btf_maps_sec_btf_id	libbpf.c	/^	__u32 btf_maps_sec_btf_id;$/;"	m	struct:elf_state	file:
btf_maps_shndx	libbpf.c	/^	int btf_maps_shndx;$/;"	m	struct:elf_state	file:
btf_member_bit_offset	btf.h	/^static inline __u32 btf_member_bit_offset(const struct btf_type *t,$/;"	f
btf_member_bit_offset	build/usr/include/bpf/btf.h	/^static inline __u32 btf_member_bit_offset(const struct btf_type *t,$/;"	f
btf_member_bitfield_size	btf.h	/^static inline __u32 btf_member_bitfield_size(const struct btf_type *t,$/;"	f
btf_member_bitfield_size	build/usr/include/bpf/btf.h	/^static inline __u32 btf_member_bitfield_size(const struct btf_type *t,$/;"	f
btf_members	btf.h	/^static inline struct btf_member *btf_members(const struct btf_type *t)$/;"	f
btf_members	build/usr/include/bpf/btf.h	/^static inline struct btf_member *btf_members(const struct btf_type *t)$/;"	f
btf_module_cap	libbpf.c	/^	size_t btf_module_cap;$/;"	m	struct:bpf_object	file:
btf_module_cnt	libbpf.c	/^	size_t btf_module_cnt;$/;"	m	struct:bpf_object	file:
btf_modules	libbpf.c	/^	struct module_btf *btf_modules;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::module_btf	file:
btf_modules_loaded	libbpf.c	/^	bool btf_modules_loaded;$/;"	m	struct:bpf_object	file:
btf_name_of	btf_dump.c	/^static const char *btf_name_of(const struct btf_dump *d, __u32 name_off)$/;"	f	file:
btf_needs_sanitization	libbpf.c	/^static bool btf_needs_sanitization(struct bpf_object *obj)$/;"	f	file:
btf_new	btf.c	/^static struct btf *btf_new(const void *data, __u32 size, struct btf *base_btf)$/;"	f	file:
btf_new_empty	btf.c	/^static struct btf *btf_new_empty(struct btf *base_btf)$/;"	f	file:
btf_params	btf.h	/^static inline struct btf_param *btf_params(const struct btf_type *t)$/;"	f
btf_params	build/usr/include/bpf/btf.h	/^static inline struct btf_param *btf_params(const struct btf_type *t)$/;"	f
btf_parse	btf.c	/^static struct btf *btf_parse(const char *path, struct btf *base_btf, struct btf_ext **btf_ext)$/;"	f	file:
btf_parse_elf	btf.c	/^static struct btf *btf_parse_elf(const char *path, struct btf *base_btf,$/;"	f	file:
btf_parse_hdr	btf.c	/^static int btf_parse_hdr(struct btf *btf)$/;"	f	file:
btf_parse_raw	btf.c	/^static struct btf *btf_parse_raw(const char *path, struct btf *base_btf)$/;"	f	file:
btf_parse_str_sec	btf.c	/^static int btf_parse_str_sec(struct btf *btf)$/;"	f	file:
btf_parse_type_sec	btf.c	/^static int btf_parse_type_sec(struct btf *btf)$/;"	f	file:
btf_pipe	btf.c	/^struct btf_pipe {$/;"	s	file:
btf_ptr_sz	btf.c	/^static size_t btf_ptr_sz(const struct btf *btf)$/;"	f	file:
btf_rewrite_str	btf.c	/^static int btf_rewrite_str(__u32 *str_off, void *ctx)$/;"	f	file:
btf_rewrite_type_ids	btf.c	/^static int btf_rewrite_type_ids(__u32 *type_id, void *ctx)$/;"	f	file:
btf_shallow_equal_struct	btf.c	/^static bool btf_shallow_equal_struct(struct btf_type *t1, struct btf_type *t2)$/;"	f	file:
btf_strs_data	btf.c	/^static const void *btf_strs_data(const struct btf *btf)$/;"	f	file:
btf_type_by_id	btf.c	/^struct btf_type *btf_type_by_id(const struct btf *btf, __u32 type_id)$/;"	f
btf_type_inc_vlen	btf.c	/^static void btf_type_inc_vlen(struct btf_type *t)$/;"	f	file:
btf_type_info	libbpf_internal.h	/^static inline __u32 btf_type_info(int kind, int vlen, int kflag)$/;"	f
btf_type_is_void	btf.c	/^static bool btf_type_is_void(const struct btf_type *t)$/;"	f	file:
btf_type_is_void_or_null	btf.c	/^static bool btf_type_is_void_or_null(const struct btf_type *t)$/;"	f	file:
btf_type_map	linker.c	/^	int *btf_type_map;$/;"	m	struct:src_obj	file:
btf_type_size	btf.c	/^static int btf_type_size(const struct btf_type *t)$/;"	f	file:
btf_type_visit_str_offs	btf.c	/^int btf_type_visit_str_offs(struct btf_type *t, str_off_visit_fn visit, void *ctx)$/;"	f
btf_type_visit_type_ids	btf.c	/^int btf_type_visit_type_ids(struct btf_type *t, type_id_visit_fn visit, void *ctx)$/;"	f
btf_value_type_id	bpf.h	/^	__u32 btf_value_type_id;$/;"	m	struct:bpf_create_map_attr
btf_value_type_id	bpf.h	/^	__u32 btf_value_type_id;$/;"	m	struct:bpf_map_create_opts
btf_value_type_id	build/usr/include/bpf/bpf.h	/^	__u32 btf_value_type_id;$/;"	m	struct:bpf_create_map_attr
btf_value_type_id	build/usr/include/bpf/bpf.h	/^	__u32 btf_value_type_id;$/;"	m	struct:bpf_map_create_opts
btf_value_type_id	libbpf.c	/^	__u32 btf_value_type_id;$/;"	m	struct:bpf_map	file:
btf_var	btf.h	/^static inline struct btf_var *btf_var(const struct btf_type *t)$/;"	f
btf_var	build/usr/include/bpf/btf.h	/^static inline struct btf_var *btf_var(const struct btf_type *t)$/;"	f
btf_var_idx	libbpf.c	/^	__u32 btf_var_idx;$/;"	m	struct:bpf_map	file:
btf_var_linkage_str	libbpf.c	/^static const char *btf_var_linkage_str(__u32 linkage)$/;"	f	file:
btf_var_secinfos	btf.h	/^btf_var_secinfos(const struct btf_type *t)$/;"	f
btf_var_secinfos	build/usr/include/bpf/btf.h	/^btf_var_secinfos(const struct btf_type *t)$/;"	f
btf_vlen	btf.h	/^static inline __u16 btf_vlen(const struct btf_type *t)$/;"	f
btf_vlen	build/usr/include/bpf/btf.h	/^static inline __u16 btf_vlen(const struct btf_type *t)$/;"	f
btf_vmlinux	libbpf.c	/^	struct btf *btf_vmlinux;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::btf	file:
btf_vmlinux_override	libbpf.c	/^	struct btf *btf_vmlinux_override;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::btf	file:
btf_vmlinux_value_type_id	bpf.h	/^		__u32 btf_vmlinux_value_type_id;$/;"	m	union:bpf_create_map_attr::__anon10
btf_vmlinux_value_type_id	bpf.h	/^	__u32 btf_vmlinux_value_type_id;$/;"	m	struct:bpf_map_create_opts
btf_vmlinux_value_type_id	build/usr/include/bpf/bpf.h	/^		__u32 btf_vmlinux_value_type_id;$/;"	m	union:bpf_create_map_attr::__anon28
btf_vmlinux_value_type_id	build/usr/include/bpf/bpf.h	/^	__u32 btf_vmlinux_value_type_id;$/;"	m	struct:bpf_map_create_opts
btf_vmlinux_value_type_id	libbpf.c	/^	__u32 btf_vmlinux_value_type_id;$/;"	m	struct:bpf_map	file:
btf_void	btf.c	/^static struct btf_type btf_void;$/;"	v	typeref:struct:btf_type	file:
buckets	hashmap.h	/^	struct hashmap_entry **buckets;$/;"	m	struct:hashmap	typeref:struct:hashmap::hashmap_entry
buf	libbpf.c	/^	void *buf; \/* for reconstructing segmented data *\/$/;"	m	struct:perf_cpu_buf	file:
buf	nlattr.h	/^	char buf[128];$/;"	m	struct:libbpf_nla_req
buf_size	libbpf.c	/^	size_t buf_size;$/;"	m	struct:perf_cpu_buf	file:
build_map_pin_path	libbpf.c	/^static int build_map_pin_path(struct bpf_map *map, const char *path)$/;"	f	file:
bump_rlimit_memlock	bpf.c	/^int bump_rlimit_memlock(void)$/;"	f
cached_names	btf_dump.c	/^	const char **cached_names;$/;"	m	struct:btf_dump	file:
cached_names_cap	btf_dump.c	/^	size_t cached_names_cap;$/;"	m	struct:btf_dump	file:
calc_pt_regs_off	usdt.c	/^static int calc_pt_regs_off(const char *reg_name)$/;"	f	file:
cands	relo_core.h	/^	struct bpf_core_cand *cands;$/;"	m	struct:bpf_core_cand_list	typeref:struct:bpf_core_cand_list::bpf_core_cand
cap	hashmap.h	/^	size_t cap;$/;"	m	struct:hashmap
cap	libbpf.c	/^	size_t cap;$/;"	m	struct:kprobe_multi_resolve	file:
cap_bits	hashmap.h	/^	size_t cap_bits;$/;"	m	struct:hashmap
cb_ctx	btf_dump.c	/^	void *cb_ctx;$/;"	m	struct:btf_dump	file:
check_btf_str_off	linker.c	/^static int check_btf_str_off(__u32 *str_off, void *ctx)$/;"	f	file:
check_btf_type_id	linker.c	/^static int check_btf_type_id(__u32 *type_id, void *ctx)$/;"	f	file:
check_path	libbpf.c	/^static int check_path(const char *path)$/;"	f	file:
chip_away_bits	btf_dump.c	/^static int chip_away_bits(int total, int at_most)$/;"	f	file:
cleanup_core_relo	gen_loader.c	/^static void cleanup_core_relo(struct bpf_gen *gen)$/;"	f	file:
cleanup_label	bpf_gen_internal.h	/^	ssize_t cleanup_label;$/;"	m	struct:bpf_gen
cleanup_relos	gen_loader.c	/^static void cleanup_relos(struct bpf_gen *gen, int insns)$/;"	f	file:
clear_priv	libbpf.c	/^	bpf_map_clear_priv_t clear_priv;$/;"	m	struct:bpf_map	file:
clear_priv	libbpf.c	/^	bpf_object_clear_priv_t clear_priv;$/;"	m	struct:bpf_object	file:
clear_priv	libbpf.c	/^	bpf_program_clear_priv_t clear_priv;$/;"	m	struct:bpf_program	file:
close	build/usr/include/bpf/skel_internal.h	/^static inline int close(int fd)$/;"	f
close	skel_internal.h	/^static inline int close(int fd)$/;"	f
clsact_config	netlink.c	/^static int clsact_config(struct libbpf_nla_req *req)$/;"	f	file:
cmp_elf_segs	usdt.c	/^static int cmp_elf_segs(const void *_a, const void *_b)$/;"	f	file:
cmp_externs	libbpf.c	/^static int cmp_externs(const void *_a, const void *_b)$/;"	f	file:
cmp_progs	libbpf.c	/^static int cmp_progs(const void *_a, const void *_b)$/;"	f	file:
cmp_relo_by_insn_idx	libbpf.c	/^static int cmp_relo_by_insn_idx(const void *key, const void *elem)$/;"	f	file:
cmp_relocs	libbpf.c	/^static int cmp_relocs(const void *_a, const void *_b)$/;"	f	file:
cnt	bpf.h	/^			__u32 cnt;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon15
cnt	btf_dump.c	/^	int cnt;$/;"	m	struct:id_stack	file:
cnt	build/usr/include/bpf/bpf.h	/^			__u32 cnt;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon33
cnt	build/usr/include/bpf/libbpf.h	/^	size_t cnt;$/;"	m	struct:bpf_kprobe_multi_opts
cnt	libbpf.c	/^	size_t cnt;$/;"	m	struct:kprobe_multi_resolve	file:
cnt	libbpf.h	/^	size_t cnt;$/;"	m	struct:bpf_kprobe_multi_opts
collect_usdt_targets	usdt.c	/^static int collect_usdt_targets(struct usdt_manager *man, Elf *elf, const char *path, pid_t pid,$/;"	f	file:
comp	xsk.c	/^	struct xsk_ring_cons *comp;$/;"	m	struct:xsk_ctx	typeref:struct:xsk_ctx::xsk_ring_cons	file:
comp_save	xsk.c	/^	struct xsk_ring_cons *comp_save;$/;"	m	struct:xsk_umem	typeref:struct:xsk_umem::xsk_ring_cons	file:
comp_size	build/usr/include/bpf/xsk.h	/^	__u32 comp_size;$/;"	m	struct:xsk_umem_config
comp_size	xsk.c	/^	__u32 comp_size;$/;"	m	struct:xsk_umem_config_v1	file:
comp_size	xsk.h	/^	__u32 comp_size;$/;"	m	struct:xsk_umem_config
compact	btf.h	/^	bool compact;		\/* no newlines\/indentation *\/$/;"	m	struct:btf_dump_type_data_opts
compact	btf_dump.c	/^	bool compact;$/;"	m	struct:btf_dump_data	file:
compact	build/usr/include/bpf/btf.h	/^	bool compact;		\/* no newlines\/indentation *\/$/;"	m	struct:btf_dump_type_data_opts
compare_vsi_off	libbpf.c	/^static int compare_vsi_off(const void *_a, const void *_b)$/;"	f	file:
complete_extern_btf_info	linker.c	/^static int complete_extern_btf_info(struct btf *dst_btf, int dst_id,$/;"	f	file:
config	xsk.c	/^	struct xsk_socket_config config;$/;"	m	struct:xsk_socket	typeref:struct:xsk_socket::xsk_socket_config	file:
config	xsk.c	/^	struct xsk_umem_config config;$/;"	m	struct:xsk_umem	typeref:struct:xsk_umem::xsk_umem_config	file:
consumer	xsk.c	/^	__u64 consumer;$/;"	m	struct:xdp_ring_offset_v1	file:
consumer_pos	ringbuf.c	/^	unsigned long *consumer_pos;$/;"	m	struct:ring	file:
container_of	bpf_helpers.h	71;"	d
container_of	build/usr/include/bpf/bpf_helpers.h	71;"	d
cookie	bpf.h	/^			__u64 cookie;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon16
cookie	build/usr/include/bpf/bpf.h	/^			__u64 cookie;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon34
cookie	build/usr/include/bpf/libbpf.h	/^	__u64 cookie;$/;"	m	struct:bpf_trace_opts
cookie	build/usr/include/bpf/libbpf.h	/^	long cookie;$/;"	m	struct:libbpf_prog_handler_opts
cookie	libbpf.c	/^	long cookie;$/;"	m	struct:bpf_sec_def	file:
cookie	libbpf.h	/^	__u64 cookie;$/;"	m	struct:bpf_trace_opts
cookie	libbpf.h	/^	long cookie;$/;"	m	struct:libbpf_prog_handler_opts
cookies	bpf.h	/^			const __u64 *cookies;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon15
cookies	build/usr/include/bpf/bpf.h	/^			const __u64 *cookies;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon33
cookies	build/usr/include/bpf/libbpf.h	/^	const __u64 *cookies;$/;"	m	struct:bpf_kprobe_multi_opts
cookies	libbpf.h	/^	const __u64 *cookies;$/;"	m	struct:bpf_kprobe_multi_opts
core_relo	libbpf.c	/^		const struct bpf_core_relo *core_relo; \/* used when type == RELO_CORE *\/$/;"	m	union:reloc_desc::__anon39	typeref:struct:reloc_desc::__anon39::bpf_core_relo	file:
core_relo_cnt	bpf_gen_internal.h	/^	int core_relo_cnt;$/;"	m	struct:bpf_gen
core_relo_info	libbpf_internal.h	/^	struct btf_ext_info core_relo_info;$/;"	m	struct:btf_ext	typeref:struct:btf_ext::btf_ext_info
core_relo_info	linker.c	/^	struct btf_ext_sec_data core_relo_info;$/;"	m	struct:dst_sec	typeref:struct:dst_sec::btf_ext_sec_data	file:
core_relo_is_enumval_based	relo_core.c	/^static bool core_relo_is_enumval_based(enum bpf_core_relo_kind kind)$/;"	f	file:
core_relo_is_field_based	relo_core.c	/^static bool core_relo_is_field_based(enum bpf_core_relo_kind kind)$/;"	f	file:
core_relo_is_type_based	relo_core.c	/^static bool core_relo_is_type_based(enum bpf_core_relo_kind kind)$/;"	f	file:
core_relo_kind_str	relo_core.c	/^static const char *core_relo_kind_str(enum bpf_core_relo_kind kind)$/;"	f	file:
core_relo_len	libbpf_internal.h	/^	__u32	core_relo_len;$/;"	m	struct:btf_ext_header
core_relo_off	libbpf_internal.h	/^	__u32	core_relo_off;$/;"	m	struct:btf_ext_header
core_relos	bpf_gen_internal.h	/^	struct bpf_core_relo *core_relos;$/;"	m	struct:bpf_gen	typeref:struct:bpf_gen::bpf_core_relo
count_offset	libbpf.c	/^	int	count_offset;	\/* e.g. offset of jited_prog_len *\/$/;"	m	struct:bpf_prog_info_array_desc	file:
cpu	bpf.h	/^	__u32 cpu;$/;"	m	struct:bpf_test_run_opts
cpu	build/usr/include/bpf/bpf.h	/^	__u32 cpu;$/;"	m	struct:bpf_test_run_opts
cpu	libbpf.c	/^	int cpu;$/;"	m	struct:perf_cpu_buf	file:
cpu_bufs	libbpf.c	/^	struct perf_cpu_buf **cpu_bufs;$/;"	m	struct:perf_buffer	typeref:struct:perf_buffer::perf_cpu_buf	file:
cpu_cnt	build/usr/include/bpf/libbpf.h	/^	int cpu_cnt;$/;"	m	struct:perf_buffer_raw_opts
cpu_cnt	libbpf.c	/^	int cpu_cnt; \/* number of allocated CPU buffers *\/$/;"	m	struct:perf_buffer	file:
cpu_cnt	libbpf.c	/^	int cpu_cnt;$/;"	m	struct:perf_buffer_params	file:
cpu_cnt	libbpf.h	/^	int cpu_cnt;$/;"	m	struct:perf_buffer_raw_opts
cpus	build/usr/include/bpf/libbpf.h	/^	int *cpus;$/;"	m	struct:perf_buffer_raw_opts
cpus	libbpf.c	/^	int *cpus;$/;"	m	struct:perf_buffer_params	file:
cpus	libbpf.h	/^	int *cpus;$/;"	m	struct:perf_buffer_raw_opts
cr	xsk.c	/^	struct xdp_ring_offset_v1 cr;$/;"	m	struct:xdp_mmap_offsets_v1	typeref:struct:xdp_mmap_offsets_v1::xdp_ring_offset_v1	file:
ctx	btf.h	/^		void *ctx; \/* DEPRECATED: will be gone in v1.0 *\/$/;"	m	union:btf_dump_opts::__anon17
ctx	build/usr/include/bpf/btf.h	/^		void *ctx; \/* DEPRECATED: will be gone in v1.0 *\/$/;"	m	union:btf_dump_opts::__anon35
ctx	build/usr/include/bpf/libbpf.h	/^			void *ctx;$/;"	m	struct:perf_buffer_opts::__anon23::__anon24
ctx	build/usr/include/bpf/libbpf.h	/^			void *ctx;$/;"	m	struct:perf_buffer_raw_opts::__anon25::__anon27
ctx	build/usr/include/bpf/skel_internal.h	/^	struct bpf_loader_ctx *ctx;$/;"	m	struct:bpf_load_and_run_opts	typeref:struct:bpf_load_and_run_opts::bpf_loader_ctx
ctx	hashmap.h	/^	void *ctx;$/;"	m	struct:hashmap
ctx	libbpf.c	/^	void *ctx; \/* passed into callbacks *\/$/;"	m	struct:perf_buffer	file:
ctx	libbpf.c	/^	void *ctx;$/;"	m	struct:perf_buffer_params	file:
ctx	libbpf.h	/^			void *ctx;$/;"	m	struct:perf_buffer_opts::__anon5::__anon6
ctx	libbpf.h	/^			void *ctx;$/;"	m	struct:perf_buffer_raw_opts::__anon7::__anon9
ctx	ringbuf.c	/^	void *ctx;$/;"	m	struct:ring	file:
ctx	skel_internal.h	/^	struct bpf_loader_ctx *ctx;$/;"	m	struct:bpf_load_and_run_opts	typeref:struct:bpf_load_and_run_opts::bpf_loader_ctx
ctx	xsk.c	/^	struct xsk_ctx *ctx;$/;"	m	struct:xsk_socket	typeref:struct:xsk_socket::xsk_ctx	file:
ctx_in	bpf.h	/^	const void *ctx_in; \/* optional *\/$/;"	m	struct:bpf_prog_test_run_attr
ctx_in	bpf.h	/^	const void *ctx_in; \/* optional *\/$/;"	m	struct:bpf_test_run_opts
ctx_in	build/usr/include/bpf/bpf.h	/^	const void *ctx_in; \/* optional *\/$/;"	m	struct:bpf_prog_test_run_attr
ctx_in	build/usr/include/bpf/bpf.h	/^	const void *ctx_in; \/* optional *\/$/;"	m	struct:bpf_test_run_opts
ctx_list	xsk.c	/^	struct list_head ctx_list;$/;"	m	struct:xsk_umem	typeref:struct:xsk_umem::list_head	file:
ctx_out	bpf.h	/^	void *ctx_out;      \/* optional *\/$/;"	m	struct:bpf_prog_test_run_attr
ctx_out	bpf.h	/^	void *ctx_out;      \/* optional *\/$/;"	m	struct:bpf_test_run_opts
ctx_out	build/usr/include/bpf/bpf.h	/^	void *ctx_out;      \/* optional *\/$/;"	m	struct:bpf_prog_test_run_attr
ctx_out	build/usr/include/bpf/bpf.h	/^	void *ctx_out;      \/* optional *\/$/;"	m	struct:bpf_test_run_opts
ctx_size_in	bpf.h	/^	__u32 ctx_size_in;$/;"	m	struct:bpf_prog_test_run_attr
ctx_size_in	bpf.h	/^	__u32 ctx_size_in;$/;"	m	struct:bpf_test_run_opts
ctx_size_in	build/usr/include/bpf/bpf.h	/^	__u32 ctx_size_in;$/;"	m	struct:bpf_prog_test_run_attr
ctx_size_in	build/usr/include/bpf/bpf.h	/^	__u32 ctx_size_in;$/;"	m	struct:bpf_test_run_opts
ctx_size_out	bpf.h	/^	__u32 ctx_size_out; \/* in: max length of ctx_out$/;"	m	struct:bpf_prog_test_run_attr
ctx_size_out	bpf.h	/^	__u32 ctx_size_out; \/* in: max length of ctx_out$/;"	m	struct:bpf_test_run_opts
ctx_size_out	build/usr/include/bpf/bpf.h	/^	__u32 ctx_size_out; \/* in: max length of ctx_out$/;"	m	struct:bpf_prog_test_run_attr
ctx_size_out	build/usr/include/bpf/bpf.h	/^	__u32 ctx_size_out; \/* in: max length of ctx_out$/;"	m	struct:bpf_test_run_opts
custom_fallback_def	libbpf.c	/^static struct bpf_sec_def custom_fallback_def;$/;"	v	typeref:struct:bpf_sec_def	file:
custom_sec_def_cnt	libbpf.c	/^static size_t custom_sec_def_cnt;$/;"	v	file:
custom_sec_defs	libbpf.c	/^static struct bpf_sec_def *custom_sec_defs;$/;"	v	typeref:struct:bpf_sec_def	file:
d	btf_dump.c	/^	double d;$/;"	m	union:float_data	file:
data	build/usr/include/bpf/libbpf.h	/^	__u8			data[];$/;"	m	struct:bpf_prog_info_linear
data	build/usr/include/bpf/libbpf.h	/^	const char *data;$/;"	m	struct:gen_loader_opts
data	build/usr/include/bpf/libbpf.h	/^	const void *data;$/;"	m	struct:bpf_object_skeleton
data	build/usr/include/bpf/skel_internal.h	/^	const void *data;$/;"	m	struct:bpf_load_and_run_opts
data	libbpf.c	/^	Elf_Data *data;$/;"	m	struct:elf_sec_desc	file:
data	libbpf.c	/^	char data[];$/;"	m	struct:perf_sample_raw	file:
data	libbpf.c	/^	void *data;$/;"	m	struct:bpf_struct_ops	file:
data	libbpf.h	/^	__u8			data[];$/;"	m	struct:bpf_prog_info_linear
data	libbpf.h	/^	const char *data;$/;"	m	struct:gen_loader_opts
data	libbpf.h	/^	const void *data;$/;"	m	struct:bpf_object_skeleton
data	libbpf_internal.h	/^		void *data;$/;"	m	union:btf_ext::__anon2
data	libbpf_internal.h	/^	__u8	data[];$/;"	m	struct:btf_ext_info_sec
data	linker.c	/^	Elf_Data *data;$/;"	m	struct:dst_sec	file:
data	linker.c	/^	Elf_Data *data;$/;"	m	struct:src_sec	file:
data	ringbuf.c	/^	void *data;$/;"	m	struct:ring	file:
data	skel_internal.h	/^	const void *data;$/;"	m	struct:bpf_load_and_run_opts
data_cur	bpf_gen_internal.h	/^	void *data_cur;$/;"	m	struct:bpf_gen
data_end	btf_dump.c	/^	const void *data_end;		\/* end of valid data to show *\/$/;"	m	struct:btf_dump_data	file:
data_in	bpf.h	/^	const void *data_in; \/* optional *\/$/;"	m	struct:bpf_test_run_opts
data_in	bpf.h	/^	const void *data_in;$/;"	m	struct:bpf_prog_test_run_attr
data_in	build/usr/include/bpf/bpf.h	/^	const void *data_in; \/* optional *\/$/;"	m	struct:bpf_test_run_opts
data_in	build/usr/include/bpf/bpf.h	/^	const void *data_in;$/;"	m	struct:bpf_prog_test_run_attr
data_len	build/usr/include/bpf/libbpf.h	/^	__u32			data_len;$/;"	m	struct:bpf_prog_info_linear
data_len	libbpf.h	/^	__u32			data_len;$/;"	m	struct:bpf_prog_info_linear
data_off	libbpf.c	/^			int data_off;$/;"	m	struct:extern_desc::__anon42::__anon43	file:
data_out	bpf.h	/^	void *data_out;      \/* optional *\/$/;"	m	struct:bpf_prog_test_run_attr
data_out	bpf.h	/^	void *data_out;      \/* optional *\/$/;"	m	struct:bpf_test_run_opts
data_out	build/usr/include/bpf/bpf.h	/^	void *data_out;      \/* optional *\/$/;"	m	struct:bpf_prog_test_run_attr
data_out	build/usr/include/bpf/bpf.h	/^	void *data_out;      \/* optional *\/$/;"	m	struct:bpf_test_run_opts
data_size	libbpf_internal.h	/^	__u32 data_size;$/;"	m	struct:btf_ext
data_size_in	bpf.h	/^	__u32 data_size_in;$/;"	m	struct:bpf_prog_test_run_attr
data_size_in	bpf.h	/^	__u32 data_size_in;$/;"	m	struct:bpf_test_run_opts
data_size_in	build/usr/include/bpf/bpf.h	/^	__u32 data_size_in;$/;"	m	struct:bpf_prog_test_run_attr
data_size_in	build/usr/include/bpf/bpf.h	/^	__u32 data_size_in;$/;"	m	struct:bpf_test_run_opts
data_size_out	bpf.h	/^	__u32 data_size_out; \/* in: max length of data_out$/;"	m	struct:bpf_prog_test_run_attr
data_size_out	bpf.h	/^	__u32 data_size_out; \/* in: max length of data_out$/;"	m	struct:bpf_test_run_opts
data_size_out	build/usr/include/bpf/bpf.h	/^	__u32 data_size_out; \/* in: max length of data_out$/;"	m	struct:bpf_prog_test_run_attr
data_size_out	build/usr/include/bpf/bpf.h	/^	__u32 data_size_out; \/* in: max length of data_out$/;"	m	struct:bpf_test_run_opts
data_start	bpf_gen_internal.h	/^	void *data_start;$/;"	m	struct:bpf_gen
data_sz	build/usr/include/bpf/libbpf.h	/^	__u32 data_sz;$/;"	m	struct:gen_loader_opts
data_sz	build/usr/include/bpf/libbpf.h	/^	size_t data_sz;$/;"	m	struct:bpf_object_skeleton
data_sz	build/usr/include/bpf/skel_internal.h	/^	__u32 data_sz;$/;"	m	struct:bpf_load_and_run_opts
data_sz	libbpf.h	/^	__u32 data_sz;$/;"	m	struct:gen_loader_opts
data_sz	libbpf.h	/^	size_t data_sz;$/;"	m	struct:bpf_object_skeleton
data_sz	skel_internal.h	/^	__u32 data_sz;$/;"	m	struct:bpf_load_and_run_opts
dealloc	libbpf_internal.h	/^	void (*dealloc)(struct bpf_link *link);$/;"	m	struct:bpf_link
debug_regs	gen_loader.c	/^static void debug_regs(struct bpf_gen *gen, int reg1, int reg2, const char *fmt, ...)$/;"	f	file:
debug_ret	gen_loader.c	/^static void debug_ret(struct bpf_gen *gen, const char *fmt, ...)$/;"	f	file:
decl_stack	btf_dump.c	/^	__u32 *decl_stack;$/;"	m	struct:btf_dump	file:
decl_stack_cap	btf_dump.c	/^	int decl_stack_cap;$/;"	m	struct:btf_dump	file:
decl_stack_cnt	btf_dump.c	/^	int decl_stack_cnt;$/;"	m	struct:btf_dump	file:
dedup_table	btf.c	/^	struct hashmap *dedup_table;$/;"	m	struct:btf_dedup	typeref:struct:btf_dedup::hashmap	file:
def	libbpf.c	/^	struct bpf_map_def def;$/;"	m	struct:bpf_map	typeref:struct:bpf_map::bpf_map_def	file:
depth	btf_dump.c	/^	int depth;$/;"	m	struct:btf_dump_data	file:
desc	btf.c	/^	const char *desc;$/;"	m	struct:btf_ext_sec_setup_param	file:
desc	libbpf.c	/^	const char *desc;$/;"	m	struct:kern_feature_desc	file:
desc	xsk.c	/^	__u64 desc;$/;"	m	struct:xdp_ring_offset_v1	file:
detach	libbpf_internal.h	/^	int (*detach)(struct bpf_link *link);$/;"	m	struct:bpf_link
determine_kprobe_perf_type	libbpf.c	/^static int determine_kprobe_perf_type(void)$/;"	f	file:
determine_kprobe_perf_type_legacy	libbpf.c	/^static int determine_kprobe_perf_type_legacy(const char *probe_name, bool retprobe)$/;"	f	file:
determine_kprobe_retprobe_bit	libbpf.c	/^static int determine_kprobe_retprobe_bit(void)$/;"	f	file:
determine_ptr_size	btf.c	/^static int determine_ptr_size(const struct btf *btf)$/;"	f	file:
determine_tracepoint_id	libbpf.c	/^static int determine_tracepoint_id(const char *tp_category,$/;"	f	file:
determine_uprobe_perf_type	libbpf.c	/^static int determine_uprobe_perf_type(void)$/;"	f	file:
determine_uprobe_perf_type_legacy	libbpf.c	/^static int determine_uprobe_perf_type_legacy(const char *probe_name, bool retprobe)$/;"	f	file:
determine_uprobe_retprobe_bit	libbpf.c	/^static int determine_uprobe_retprobe_bit(void)$/;"	f	file:
disconnected	libbpf_internal.h	/^	bool disconnected;$/;"	m	struct:bpf_link
dissect_jited_func	bpf_prog_linfo.c	/^static int dissect_jited_func(struct bpf_prog_linfo *prog_linfo,$/;"	f	file:
do_install	Makefile	/^define do_install$/;"	m
do_s_install	Makefile	/^define do_s_install$/;"	m
drv_prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 drv_prog_id;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
drv_prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 drv_prog_id;$/;"	m	struct:xdp_link_info
drv_prog_id	libbpf.h	/^	__u32 drv_prog_id;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
drv_prog_id	libbpf.h	/^	__u32 drv_prog_id;$/;"	m	struct:xdp_link_info
dst	btf.c	/^	struct btf *dst;$/;"	m	struct:btf_pipe	typeref:struct:btf_pipe::btf	file:
dst_id	linker.c	/^	int dst_id;$/;"	m	struct:src_sec	file:
dst_off	linker.c	/^	int dst_off;$/;"	m	struct:src_sec	file:
dst_sec	linker.c	/^struct dst_sec {$/;"	s	file:
duration	bpf.h	/^	__u32 duration;      \/* out: average per repetition in ns *\/$/;"	m	struct:bpf_prog_test_run_attr
duration	bpf.h	/^	__u32 duration;      \/* out: average per repetition in ns *\/$/;"	m	struct:bpf_test_run_opts
duration	build/usr/include/bpf/bpf.h	/^	__u32 duration;      \/* out: average per repetition in ns *\/$/;"	m	struct:bpf_prog_test_run_attr
duration	build/usr/include/bpf/bpf.h	/^	__u32 duration;      \/* out: average per repetition in ns *\/$/;"	m	struct:bpf_test_run_opts
efile	libbpf.c	/^	struct elf_state efile;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::elf_state	file:
ehdr	libbpf.c	/^	Elf64_Ehdr *ehdr;$/;"	m	struct:elf_state	file:
elem_flags	bpf.h	/^	__u64 elem_flags;$/;"	m	struct:bpf_map_batch_opts
elem_flags	build/usr/include/bpf/bpf.h	/^	__u64 elem_flags;$/;"	m	struct:bpf_map_batch_opts
elf	libbpf.c	/^	Elf *elf;$/;"	m	struct:elf_state	file:
elf	linker.c	/^	Elf *elf;$/;"	m	struct:bpf_linker	file:
elf	linker.c	/^	Elf *elf;$/;"	m	struct:src_obj	file:
elf_find_func_offset	libbpf.c	/^static long elf_find_func_offset(const char *binary_path, const char *name)$/;"	f	file:
elf_find_next_scn_by_type	libbpf.c	/^static Elf_Scn *elf_find_next_scn_by_type(Elf *elf, int sh_type, Elf_Scn *scn)$/;"	f	file:
elf_find_relative_offset	libbpf.c	/^static long elf_find_relative_offset(const char *filename, Elf *elf, long addr)$/;"	f	file:
elf_hdr	linker.c	/^	Elf64_Ehdr *elf_hdr;$/;"	m	struct:bpf_linker	file:
elf_rel_by_idx	libbpf.c	/^static Elf64_Rel *elf_rel_by_idx(Elf_Data *data, size_t idx)$/;"	f	file:
elf_sec_by_idx	libbpf.c	/^static Elf_Scn *elf_sec_by_idx(const struct bpf_object *obj, size_t idx)$/;"	f	file:
elf_sec_by_name	libbpf.c	/^static Elf_Scn *elf_sec_by_name(const struct bpf_object *obj, const char *name)$/;"	f	file:
elf_sec_data	libbpf.c	/^static Elf_Data *elf_sec_data(const struct bpf_object *obj, Elf_Scn *scn)$/;"	f	file:
elf_sec_desc	libbpf.c	/^struct elf_sec_desc {$/;"	s	file:
elf_sec_hdr	libbpf.c	/^static Elf64_Shdr *elf_sec_hdr(const struct bpf_object *obj, Elf_Scn *scn)$/;"	f	file:
elf_sec_name	libbpf.c	/^static const char *elf_sec_name(const struct bpf_object *obj, Elf_Scn *scn)$/;"	f	file:
elf_sec_str	libbpf.c	/^static const char *elf_sec_str(const struct bpf_object *obj, size_t off)$/;"	f	file:
elf_seg	usdt.c	/^struct elf_seg {$/;"	s	file:
elf_state	libbpf.c	/^struct elf_state {$/;"	s	file:
elf_sym_by_idx	libbpf.c	/^static Elf64_Sym *elf_sym_by_idx(const struct bpf_object *obj, size_t idx)$/;"	f	file:
elf_sym_str	libbpf.c	/^static const char *elf_sym_str(const struct bpf_object *obj, size_t off)$/;"	f	file:
emit	gen_loader.c	/^static void emit(struct bpf_gen *gen, struct bpf_insn insn)$/;"	f	file:
emit2	gen_loader.c	/^static void emit2(struct bpf_gen *gen, struct bpf_insn insn1, struct bpf_insn insn2)$/;"	f	file:
emit_bpf_find_by_name_kind	gen_loader.c	/^static void emit_bpf_find_by_name_kind(struct bpf_gen *gen, struct ksym_relo_desc *relo)$/;"	f	file:
emit_bpf_kallsyms_lookup_name	gen_loader.c	/^static void emit_bpf_kallsyms_lookup_name(struct bpf_gen *gen, struct ksym_relo_desc *relo)$/;"	f	file:
emit_btf_ext_data	linker.c	/^static int emit_btf_ext_data(struct bpf_linker *linker, void *output,$/;"	f	file:
emit_check_err	gen_loader.c	/^static void emit_check_err(struct bpf_gen *gen)$/;"	f	file:
emit_debug	gen_loader.c	/^static void emit_debug(struct bpf_gen *gen, int reg1, int reg2,$/;"	f	file:
emit_elf_data_sec	linker.c	/^static int emit_elf_data_sec(struct bpf_linker *linker, const char *sec_name,$/;"	f	file:
emit_find_attach_target	gen_loader.c	/^static void emit_find_attach_target(struct bpf_gen *gen)$/;"	f	file:
emit_ksym_relo_log	gen_loader.c	/^static void emit_ksym_relo_log(struct bpf_gen *gen, struct ksym_relo_desc *relo,$/;"	f	file:
emit_queue	btf_dump.c	/^	__u32 *emit_queue;$/;"	m	struct:btf_dump	file:
emit_queue_cap	btf_dump.c	/^	int emit_queue_cap;$/;"	m	struct:btf_dump	file:
emit_queue_cnt	btf_dump.c	/^	int emit_queue_cnt;$/;"	m	struct:btf_dump	file:
emit_rel_store	gen_loader.c	/^static void emit_rel_store(struct bpf_gen *gen, int off, int data)$/;"	f	file:
emit_relo	gen_loader.c	/^static void emit_relo(struct bpf_gen *gen, struct ksym_relo_desc *relo, int insns)$/;"	f	file:
emit_relo_kfunc_btf	gen_loader.c	/^static void emit_relo_kfunc_btf(struct bpf_gen *gen, struct ksym_relo_desc *relo, int insn)$/;"	f	file:
emit_relo_ksym_btf	gen_loader.c	/^static void emit_relo_ksym_btf(struct bpf_gen *gen, struct ksym_relo_desc *relo, int insn)$/;"	f	file:
emit_relo_ksym_typeless	gen_loader.c	/^static void emit_relo_ksym_typeless(struct bpf_gen *gen,$/;"	f	file:
emit_relos	gen_loader.c	/^static void emit_relos(struct bpf_gen *gen, int insns)$/;"	f	file:
emit_state	btf_dump.c	/^	enum btf_dump_type_emit_state emit_state: 2;$/;"	m	struct:btf_dump_type_aux_state	typeref:enum:btf_dump_type_aux_state::btf_dump_type_emit_state	file:
emit_sys_bpf	gen_loader.c	/^static void emit_sys_bpf(struct bpf_gen *gen, int cmd, int attr, int attr_size)$/;"	f	file:
emit_sys_close_blob	gen_loader.c	/^static void emit_sys_close_blob(struct bpf_gen *gen, int blob_off)$/;"	f	file:
emit_sys_close_stack	gen_loader.c	/^static void emit_sys_close_stack(struct bpf_gen *gen, int stack_off)$/;"	f	file:
emit_zeroes	btf.h	/^	bool emit_zeroes;	\/* show 0-valued fields *\/$/;"	m	struct:btf_dump_type_data_opts
emit_zeroes	btf_dump.c	/^	bool emit_zeroes;$/;"	m	struct:btf_dump_data	file:
emit_zeroes	build/usr/include/bpf/btf.h	/^	bool emit_zeroes;	\/* show 0-valued fields *\/$/;"	m	struct:btf_dump_type_data_opts
end	usdt.c	/^	long end;$/;"	m	struct:elf_seg	file:
ensure_good_fd	libbpf_internal.h	/^static inline int ensure_good_fd(int fd)$/;"	f
ephemeral	linker.c	/^	bool ephemeral;$/;"	m	struct:dst_sec	file:
ephemeral	linker.c	/^	bool ephemeral;$/;"	m	struct:src_sec	file:
epoll_fd	libbpf.c	/^	int epoll_fd; \/* perf event FD *\/$/;"	m	struct:perf_buffer	file:
epoll_fd	ringbuf.c	/^	int epoll_fd;$/;"	m	struct:ring_buffer	file:
equal_fn	hashmap.h	/^	hashmap_equal_fn equal_fn;$/;"	m	struct:hashmap
error	bpf_gen_internal.h	/^	int error;$/;"	m	struct:bpf_gen
errstr	build/usr/include/bpf/skel_internal.h	/^	const char *errstr;$/;"	m	struct:bpf_load_and_run_opts
errstr	skel_internal.h	/^	const char *errstr;$/;"	m	struct:bpf_load_and_run_opts
event_cb	build/usr/include/bpf/libbpf.h	/^			perf_buffer_event_fn event_cb;$/;"	m	struct:perf_buffer_raw_opts::__anon25::__anon27
event_cb	libbpf.c	/^	perf_buffer_event_fn event_cb;$/;"	m	struct:perf_buffer	file:
event_cb	libbpf.c	/^	perf_buffer_event_fn event_cb;$/;"	m	struct:perf_buffer_params	file:
event_cb	libbpf.h	/^			perf_buffer_event_fn event_cb;$/;"	m	struct:perf_buffer_raw_opts::__anon7::__anon9
events	libbpf.c	/^	struct epoll_event *events;$/;"	m	struct:perf_buffer	typeref:struct:perf_buffer::epoll_event	file:
events	ringbuf.c	/^	struct epoll_event *events;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::epoll_event	file:
expected_attach_type	bpf.h	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_load_program_attr	typeref:enum:bpf_load_program_attr::bpf_attach_type
expected_attach_type	bpf.h	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_prog_load_opts	typeref:enum:bpf_prog_load_opts::bpf_attach_type
expected_attach_type	build/usr/include/bpf/bpf.h	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_load_program_attr	typeref:enum:bpf_load_program_attr::bpf_attach_type
expected_attach_type	build/usr/include/bpf/bpf.h	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_prog_load_opts	typeref:enum:bpf_prog_load_opts::bpf_attach_type
expected_attach_type	build/usr/include/bpf/libbpf.h	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_prog_load_attr	typeref:enum:bpf_prog_load_attr::bpf_attach_type
expected_attach_type	libbpf.c	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_program	typeref:enum:bpf_program::bpf_attach_type	file:
expected_attach_type	libbpf.c	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_sec_def	typeref:enum:bpf_sec_def::bpf_attach_type	file:
expected_attach_type	libbpf.h	/^	enum bpf_attach_type expected_attach_type;$/;"	m	struct:bpf_prog_load_attr	typeref:enum:bpf_prog_load_attr::bpf_attach_type
ext_info	btf.c	/^	struct btf_ext_info *ext_info;$/;"	m	struct:btf_ext_sec_setup_param	typeref:struct:btf_ext_sec_setup_param::btf_ext_info	file:
extend_sec	linker.c	/^static int extend_sec(struct bpf_linker *linker, struct dst_sec *dst, struct src_sec *src)$/;"	f	file:
extern_desc	libbpf.c	/^struct extern_desc {$/;"	s	file:
extern_type	libbpf.c	/^enum extern_type {$/;"	g	file:
externs	libbpf.c	/^	struct extern_desc *externs;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::extern_desc	file:
f	btf_dump.c	/^	float f;$/;"	m	union:float_data	file:
fail_memsz_adjust	relo_core.h	/^	bool fail_memsz_adjust;$/;"	m	struct:bpf_core_relo_res
fd	btf.c	/^	int fd;$/;"	m	struct:btf	file:
fd	libbpf.c	/^	int fd;$/;"	m	struct:bpf_map	file:
fd	libbpf.c	/^	int fd;$/;"	m	struct:elf_state	file:
fd	libbpf.c	/^	int fd;$/;"	m	struct:module_btf	file:
fd	libbpf.c	/^	int fd;$/;"	m	struct:perf_cpu_buf	file:
fd	libbpf_internal.h	/^	int fd;			\/* hook FD, -1 if not applicable *\/$/;"	m	struct:bpf_link
fd	linker.c	/^	int fd;$/;"	m	struct:bpf_linker	file:
fd	linker.c	/^	int fd;$/;"	m	struct:src_obj	file:
fd	xsk.c	/^	int fd;$/;"	m	struct:xsk_nl_info	file:
fd	xsk.c	/^	int fd;$/;"	m	struct:xsk_socket	file:
fd	xsk.c	/^	int fd;$/;"	m	struct:xsk_umem	file:
fd_array	bpf.h	/^	const int *fd_array;$/;"	m	struct:bpf_prog_load_opts
fd_array	bpf_gen_internal.h	/^	int fd_array;$/;"	m	struct:bpf_gen
fd_array	build/usr/include/bpf/bpf.h	/^	const int *fd_array;$/;"	m	struct:bpf_prog_load_opts
fd_array	libbpf.c	/^	int *fd_array;$/;"	m	struct:bpf_object	file:
fd_array_cap	libbpf.c	/^	size_t fd_array_cap;$/;"	m	struct:bpf_object	file:
fd_array_cnt	libbpf.c	/^	size_t fd_array_cnt;$/;"	m	struct:bpf_object	file:
fd_array_idx	libbpf.c	/^	int fd_array_idx;$/;"	m	struct:module_btf	file:
fds	libbpf.c	/^		int *fds;$/;"	m	struct:bpf_program::__anon41	file:
feature_probe_fn	libbpf.c	/^typedef int (*feature_probe_fn)(void);$/;"	t	file:
feature_probes	libbpf.c	/^} feature_probes[__FEAT_CNT] = {$/;"	v	typeref:struct:kern_feature_desc	file:
field_name	btf.h	/^	const char *field_name;$/;"	m	struct:btf_dump_emit_type_decl_opts
field_name	build/usr/include/bpf/btf.h	/^	const char *field_name;$/;"	m	struct:btf_dump_emit_type_decl_opts
file	build/usr/include/bpf/libbpf.h	/^	const char *file;$/;"	m	struct:bpf_object_open_attr
file	build/usr/include/bpf/libbpf.h	/^	const char *file;$/;"	m	struct:bpf_prog_load_attr
file	libbpf.h	/^	const char *file;$/;"	m	struct:bpf_object_open_attr
file	libbpf.h	/^	const char *file;$/;"	m	struct:bpf_prog_load_attr
file_name_off	libbpf_internal.h	/^	__u32	file_name_off;$/;"	m	struct:bpf_line_info_min
filename	linker.c	/^	char *filename;$/;"	m	struct:bpf_linker	file:
filename	linker.c	/^	const char *filename;$/;"	m	struct:src_obj	file:
fill	xsk.c	/^	struct xsk_ring_prod *fill;$/;"	m	struct:xsk_ctx	typeref:struct:xsk_ctx::xsk_ring_prod	file:
fill_map_from_def	libbpf.c	/^static void fill_map_from_def(struct bpf_map *map, const struct btf_map_def *def)$/;"	f	file:
fill_save	xsk.c	/^	struct xsk_ring_prod *fill_save;$/;"	m	struct:xsk_umem	typeref:struct:xsk_umem::xsk_ring_prod	file:
fill_size	build/usr/include/bpf/xsk.h	/^	__u32 fill_size;$/;"	m	struct:xsk_umem_config
fill_size	xsk.c	/^	__u32 fill_size;$/;"	m	struct:xsk_umem_config_v1	file:
fill_size	xsk.h	/^	__u32 fill_size;$/;"	m	struct:xsk_umem_config
finalize_btf	linker.c	/^static int finalize_btf(struct bpf_linker *linker)$/;"	f	file:
finalize_btf_ext	linker.c	/^static int finalize_btf_ext(struct bpf_linker *linker)$/;"	f	file:
find_attach_btf_id	libbpf.c	/^static inline int find_attach_btf_id(struct btf *btf, const char *name,$/;"	f	file:
find_btf_by_prefix_kind	libbpf.c	/^static int find_btf_by_prefix_kind(const struct btf *btf, const char *prefix,$/;"	f	file:
find_dst_sec_by_name	linker.c	/^static struct dst_sec *find_dst_sec_by_name(struct bpf_linker *linker, const char *sec_name)$/;"	f	file:
find_elf_sec_by_name	usdt.c	/^static int find_elf_sec_by_name(Elf *elf, const char *sec_name, GElf_Shdr *shdr, Elf_Scn **scn)$/;"	f	file:
find_elf_sec_sz	libbpf.c	/^static int find_elf_sec_sz(const struct bpf_object *obj, const char *name, __u32 *size)$/;"	f	file:
find_elf_seg	usdt.c	/^static struct elf_seg *find_elf_seg(struct elf_seg *segs, size_t seg_cnt, long addr, bool relative)$/;"	f	file:
find_elf_var_offset	libbpf.c	/^static int find_elf_var_offset(const struct bpf_object *obj, const char *name, __u32 *off)$/;"	f	file:
find_extern_btf_id	libbpf.c	/^static int find_extern_btf_id(const struct btf *btf, const char *ext_name)$/;"	f	file:
find_extern_by_name	libbpf.c	/^static struct extern_desc *find_extern_by_name(const struct bpf_object *obj,$/;"	f	file:
find_extern_sec_btf_id	libbpf.c	/^static int find_extern_sec_btf_id(struct btf *btf, int ext_btf_id) {$/;"	f	file:
find_glob_sym	linker.c	/^static struct glob_sym *find_glob_sym(struct bpf_linker *linker, const char *sym_name)$/;"	f	file:
find_glob_sym_btf	linker.c	/^static int find_glob_sym_btf(struct src_obj *obj, Elf64_Sym *sym, const char *sym_name,$/;"	f	file:
find_int_btf_id	libbpf.c	/^static int find_int_btf_id(const struct btf *btf)$/;"	f	file:
find_kcfg_type	libbpf.c	/^static enum kcfg_type find_kcfg_type(const struct btf *btf, int id,$/;"	f	file:
find_kernel_btf_id	libbpf.c	/^static int find_kernel_btf_id(struct bpf_object *obj, const char *attach_name,$/;"	f	file:
find_ksym_btf_id	libbpf.c	/^static int find_ksym_btf_id(struct bpf_object *obj, const char *ksym_name,$/;"	f	file:
find_member_by_name	libbpf.c	/^find_member_by_name(const struct btf *btf, const struct btf_type *t,$/;"	f	file:
find_member_by_offset	libbpf.c	/^find_member_by_offset(const struct btf_type *t, __u32 bit_offset)$/;"	f	file:
find_prev_line	libbpf.c	/^static char *find_prev_line(char *buf, char *cur)$/;"	f	file:
find_prog_by_sec_insn	libbpf.c	/^static struct bpf_program *find_prog_by_sec_insn(const struct bpf_object *obj,$/;"	f	file:
find_prog_insn_relo	libbpf.c	/^static struct reloc_desc *find_prog_insn_relo(const struct bpf_program *prog, size_t insn_idx)$/;"	f	file:
find_relo_core	libbpf.c	/^static const struct bpf_core_relo *find_relo_core(struct bpf_program *prog, int insn_idx)$/;"	f	file:
find_sec_def	libbpf.c	/^static const struct bpf_sec_def *find_sec_def(const char *sec_name)$/;"	f	file:
find_src_sec_by_name	linker.c	/^static struct src_sec *find_src_sec_by_name(struct src_obj *obj, const char *sec_name)$/;"	f	file:
find_struct_ops_kern_types	libbpf.c	/^find_struct_ops_kern_types(const struct btf *btf, const char *tname,$/;"	f	file:
find_struct_ops_map_by_offset	libbpf.c	/^static struct bpf_map *find_struct_ops_map_by_offset(struct bpf_object *obj,$/;"	f	file:
find_sym_by_name	linker.c	/^static Elf64_Sym *find_sym_by_name(struct src_obj *obj, size_t sec_idx,$/;"	f	file:
fixup_log_failed_core_relo	libbpf.c	/^static void fixup_log_failed_core_relo(struct bpf_program *prog,$/;"	f	file:
fixup_log_missing_map_load	libbpf.c	/^static void fixup_log_missing_map_load(struct bpf_program *prog,$/;"	f	file:
fixup_verifier_log	libbpf.c	/^static void fixup_verifier_log(struct bpf_program *prog, char *buf, size_t buf_sz)$/;"	f	file:
flags	bpf.h	/^			__u32 flags;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon15
flags	bpf.h	/^	__u32 flags;	   \/* extra flags *\/$/;"	m	struct:bpf_link_update_opts
flags	bpf.h	/^	__u32 flags;$/;"	m	struct:bpf_link_create_opts
flags	bpf.h	/^	__u32 flags;$/;"	m	struct:bpf_prog_bind_opts
flags	bpf.h	/^	__u32 flags;$/;"	m	struct:bpf_test_run_opts
flags	bpf.h	/^	__u64 flags;$/;"	m	struct:bpf_map_batch_opts
flags	bpf.h	/^	unsigned int flags;$/;"	m	struct:bpf_prog_attach_opts
flags	build/usr/include/bpf/bpf.h	/^			__u32 flags;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon33
flags	build/usr/include/bpf/bpf.h	/^	__u32 flags;	   \/* extra flags *\/$/;"	m	struct:bpf_link_update_opts
flags	build/usr/include/bpf/bpf.h	/^	__u32 flags;$/;"	m	struct:bpf_link_create_opts
flags	build/usr/include/bpf/bpf.h	/^	__u32 flags;$/;"	m	struct:bpf_prog_bind_opts
flags	build/usr/include/bpf/bpf.h	/^	__u32 flags;$/;"	m	struct:bpf_test_run_opts
flags	build/usr/include/bpf/bpf.h	/^	__u64 flags;$/;"	m	struct:bpf_map_batch_opts
flags	build/usr/include/bpf/bpf.h	/^	unsigned int flags;$/;"	m	struct:bpf_prog_attach_opts
flags	build/usr/include/bpf/libbpf.h	/^	__u32 flags;$/;"	m	struct:bpf_tc_opts
flags	build/usr/include/bpf/skel_internal.h	/^	__u32 flags;$/;"	m	struct:bpf_loader_ctx
flags	build/usr/include/bpf/xsk.h	/^	__u32 flags;$/;"	m	struct:xsk_umem_config
flags	libbpf.h	/^	__u32 flags;$/;"	m	struct:bpf_tc_opts
flags	libbpf_internal.h	/^	__u8	flags;$/;"	m	struct:btf_ext_header
flags	netlink.c	/^	__u32 flags;$/;"	m	struct:xdp_id_md	file:
flags	skel_internal.h	/^	__u32 flags;$/;"	m	struct:bpf_loader_ctx
flags	xsk.h	/^	__u32 flags;$/;"	m	struct:xsk_umem_config
float_data	btf_dump.c	/^union float_data {$/;"	u	file:
for_each_btf_ext_rec	libbpf_internal.h	396;"	d
for_each_btf_ext_sec	libbpf_internal.h	390;"	d
for_each_dedup_cand	btf.c	3199;"	d	file:
force_collisions	btf.h	/^	bool force_collisions;$/;"	m	struct:btf_dedup_opts
force_collisions	build/usr/include/bpf/btf.h	/^	bool force_collisions;$/;"	m	struct:btf_dedup_opts
fr	xsk.c	/^	struct xdp_ring_offset_v1 fr;$/;"	m	struct:xdp_mmap_offsets_v1	typeref:struct:xdp_mmap_offsets_v1::xdp_ring_offset_v1	file:
frame_headroom	build/usr/include/bpf/xsk.h	/^	__u32 frame_headroom;$/;"	m	struct:xsk_umem_config
frame_headroom	xsk.c	/^	__u32 frame_headroom;$/;"	m	struct:xsk_umem_config_v1	file:
frame_headroom	xsk.h	/^	__u32 frame_headroom;$/;"	m	struct:xsk_umem_config
frame_size	build/usr/include/bpf/xsk.h	/^	__u32 frame_size;$/;"	m	struct:xsk_umem_config
frame_size	xsk.c	/^	__u32 frame_size;$/;"	m	struct:xsk_umem_config_v1	file:
frame_size	xsk.h	/^	__u32 frame_size;$/;"	m	struct:xsk_umem_config
free_spec_cnt	usdt.c	/^	size_t free_spec_cnt;$/;"	m	struct:usdt_manager	file:
free_spec_ids	usdt.c	/^	int *free_spec_ids;$/;"	m	struct:usdt_manager	file:
func_info	bpf.h	/^	const void *func_info;$/;"	m	struct:bpf_load_program_attr
func_info	bpf.h	/^	const void *func_info;$/;"	m	struct:bpf_prog_load_opts
func_info	build/usr/include/bpf/bpf.h	/^	const void *func_info;$/;"	m	struct:bpf_load_program_attr
func_info	build/usr/include/bpf/bpf.h	/^	const void *func_info;$/;"	m	struct:bpf_prog_load_opts
func_info	libbpf.c	/^	void *func_info;$/;"	m	struct:bpf_program	file:
func_info	libbpf_internal.h	/^	struct btf_ext_info func_info;$/;"	m	struct:btf_ext	typeref:struct:btf_ext::btf_ext_info
func_info	linker.c	/^	struct btf_ext_sec_data func_info;$/;"	m	struct:dst_sec	typeref:struct:dst_sec::btf_ext_sec_data	file:
func_info_cnt	bpf.h	/^	__u32 func_info_cnt;$/;"	m	struct:bpf_load_program_attr
func_info_cnt	bpf.h	/^	__u32 func_info_cnt;$/;"	m	struct:bpf_prog_load_opts
func_info_cnt	build/usr/include/bpf/bpf.h	/^	__u32 func_info_cnt;$/;"	m	struct:bpf_load_program_attr
func_info_cnt	build/usr/include/bpf/bpf.h	/^	__u32 func_info_cnt;$/;"	m	struct:bpf_prog_load_opts
func_info_cnt	libbpf.c	/^	__u32 func_info_cnt;$/;"	m	struct:bpf_program	file:
func_info_len	libbpf_internal.h	/^	__u32	func_info_len;$/;"	m	struct:btf_ext_header
func_info_off	libbpf_internal.h	/^	__u32	func_info_off;$/;"	m	struct:btf_ext_header
func_info_rec_size	bpf.h	/^	__u32 func_info_rec_size;$/;"	m	struct:bpf_load_program_attr
func_info_rec_size	bpf.h	/^	__u32 func_info_rec_size;$/;"	m	struct:bpf_prog_load_opts
func_info_rec_size	build/usr/include/bpf/bpf.h	/^	__u32 func_info_rec_size;$/;"	m	struct:bpf_load_program_attr
func_info_rec_size	build/usr/include/bpf/bpf.h	/^	__u32 func_info_rec_size;$/;"	m	struct:bpf_prog_load_opts
func_info_rec_size	libbpf.c	/^	__u32 func_info_rec_size;$/;"	m	struct:bpf_program	file:
func_name	build/usr/include/bpf/libbpf.h	/^	const char *func_name;$/;"	m	struct:bpf_uprobe_opts
func_name	libbpf.h	/^	const char *func_name;$/;"	m	struct:bpf_uprobe_opts
fwd_emitted	btf_dump.c	/^	__u8 fwd_emitted: 1;$/;"	m	struct:btf_dump_type_aux_state	file:
gen_kprobe_legacy_event_name	libbpf.c	/^static void gen_kprobe_legacy_event_name(char *buf, size_t buf_sz,$/;"	f	file:
gen_loader	libbpf.c	/^	struct bpf_gen *gen_loader;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::bpf_gen	file:
gen_loader_opts	build/usr/include/bpf/libbpf.h	/^struct gen_loader_opts {$/;"	s
gen_loader_opts	libbpf.h	/^struct gen_loader_opts {$/;"	s
gen_loader_opts__last_field	build/usr/include/bpf/libbpf.h	1623;"	d
gen_loader_opts__last_field	libbpf.h	1623;"	d
gen_uprobe_legacy_event_name	libbpf.c	/^static void gen_uprobe_legacy_event_name(char *buf, size_t buf_sz,$/;"	f	file:
get_kernel_version	libbpf.c	/^__u32 get_kernel_version(void)$/;"	f
get_ksym_desc	gen_loader.c	/^static struct ksym_desc *get_ksym_desc(struct bpf_gen *gen, struct ksym_relo_desc *relo)$/;"	f	file:
get_map_field_int	libbpf.c	/^static bool get_map_field_int(const char *map_name, const struct btf *btf,$/;"	f	file:
get_sym_by_idx	linker.c	/^static Elf64_Sym *get_sym_by_idx(struct bpf_linker *linker, size_t sym_idx)$/;"	f	file:
get_tc_info	netlink.c	/^static int get_tc_info(struct nlmsghdr *nh, libbpf_dump_nlmsg_t fn,$/;"	f	file:
get_vendor_id	libbpf_probes.c	/^static int get_vendor_id(int ifindex)$/;"	f	file:
get_xdp_info	netlink.c	/^static int get_xdp_info(void *cookie, void *msg, struct nlattr **tb)$/;"	f	file:
get_xsk_prog	xsk.c	/^static enum xsk_prog get_xsk_prog(void)$/;"	f	file:
glob_map_defs_match	linker.c	/^static bool glob_map_defs_match(const char *sym_name,$/;"	f	file:
glob_match	libbpf.c	/^static bool glob_match(const char *str, const char *pat)$/;"	f	file:
glob_sym	linker.c	/^struct glob_sym {$/;"	s	file:
glob_sym_btf_matches	linker.c	/^static bool glob_sym_btf_matches(const char *sym_name, bool exact,$/;"	f	file:
glob_sym_cnt	linker.c	/^	int glob_sym_cnt;$/;"	m	struct:bpf_linker	file:
glob_syms	linker.c	/^	struct glob_sym *glob_syms;$/;"	m	struct:bpf_linker	typeref:struct:bpf_linker::glob_sym	file:
glob_syms_match	linker.c	/^static bool glob_syms_match(const char *sym_name,$/;"	f	file:
grep	libbpf_probes.c	/^static bool grep(const char *buffer, const char *pattern)$/;"	f	file:
handle	build/usr/include/bpf/libbpf.h	/^	__u32 handle;$/;"	m	struct:bpf_tc_opts
handle	libbpf.h	/^	__u32 handle;$/;"	m	struct:bpf_tc_opts
handler_id	libbpf.c	/^	int handler_id;$/;"	m	struct:bpf_sec_def	file:
has_bpf_cookie	usdt.c	/^	bool has_bpf_cookie;$/;"	m	struct:usdt_manager	file:
has_bpf_link	xsk.c	/^	bool has_bpf_link;$/;"	m	struct:xsk_ctx	file:
has_btf	linker.c	/^	bool has_btf;$/;"	m	struct:dst_sec	file:
has_custom_fallback_def	libbpf.c	/^static bool has_custom_fallback_def;$/;"	v	file:
has_rodata	libbpf.c	/^	bool has_rodata;$/;"	m	struct:bpf_object	file:
has_sema_refcnt	usdt.c	/^	bool has_sema_refcnt;$/;"	m	struct:usdt_manager	file:
has_subcalls	libbpf.c	/^	bool has_subcalls;$/;"	m	struct:bpf_object	file:
hash_bits	hashmap.h	/^static inline size_t hash_bits(size_t h, int bits)$/;"	f
hash_combine	btf.c	/^static long hash_combine(long h, long value)$/;"	f	file:
hash_fn	hashmap.h	/^	hashmap_hash_fn hash_fn;$/;"	m	struct:hashmap
hashmap	hashmap.h	/^struct hashmap {$/;"	s
hashmap__add	hashmap.h	/^static inline int hashmap__add(struct hashmap *map,$/;"	f
hashmap__append	hashmap.h	/^static inline int hashmap__append(struct hashmap *map,$/;"	f
hashmap__capacity	hashmap.c	/^size_t hashmap__capacity(const struct hashmap *map)$/;"	f
hashmap__clear	hashmap.c	/^void hashmap__clear(struct hashmap *map)$/;"	f
hashmap__delete	hashmap.c	/^bool hashmap__delete(struct hashmap *map, const void *key,$/;"	f
hashmap__find	hashmap.c	/^bool hashmap__find(const struct hashmap *map, const void *key, void **value)$/;"	f
hashmap__for_each_entry	hashmap.h	155;"	d
hashmap__for_each_entry_safe	hashmap.h	167;"	d
hashmap__for_each_key_entry	hashmap.h	179;"	d
hashmap__for_each_key_entry_safe	hashmap.h	187;"	d
hashmap__free	hashmap.c	/^void hashmap__free(struct hashmap *map)$/;"	f
hashmap__init	hashmap.c	/^void hashmap__init(struct hashmap *map, hashmap_hash_fn hash_fn,$/;"	f
hashmap__insert	hashmap.c	/^int hashmap__insert(struct hashmap *map, const void *key, void *value,$/;"	f
hashmap__new	hashmap.c	/^struct hashmap *hashmap__new(hashmap_hash_fn hash_fn,$/;"	f
hashmap__set	hashmap.h	/^static inline int hashmap__set(struct hashmap *map,$/;"	f
hashmap__size	hashmap.c	/^size_t hashmap__size(const struct hashmap *map)$/;"	f
hashmap__update	hashmap.h	/^static inline int hashmap__update(struct hashmap *map,$/;"	f
hashmap_add_entry	hashmap.c	/^static void hashmap_add_entry(struct hashmap_entry **pprev,$/;"	f	file:
hashmap_del_entry	hashmap.c	/^static void hashmap_del_entry(struct hashmap_entry **pprev,$/;"	f	file:
hashmap_entry	hashmap.h	/^struct hashmap_entry {$/;"	s
hashmap_equal_fn	hashmap.h	/^typedef bool (*hashmap_equal_fn)(const void *key1, const void *key2, void *ctx);$/;"	t
hashmap_find_entry	hashmap.c	/^static bool hashmap_find_entry(const struct hashmap *map,$/;"	f	file:
hashmap_grow	hashmap.c	/^static int hashmap_grow(struct hashmap *map)$/;"	f	file:
hashmap_hash_fn	hashmap.h	/^typedef size_t (*hashmap_hash_fn)(const void *key, void *ctx);$/;"	t
hashmap_insert_strategy	hashmap.h	/^enum hashmap_insert_strategy {$/;"	g
hashmap_needs_to_grow	hashmap.c	/^static bool hashmap_needs_to_grow(struct hashmap *map)$/;"	f	file:
hdr	btf.c	/^	struct btf_header *hdr;$/;"	m	struct:btf	typeref:struct:btf::btf_header	file:
hdr	libbpf_internal.h	/^		struct btf_ext_header *hdr;$/;"	m	union:btf_ext::__anon2	typeref:struct:btf_ext::__anon2::btf_ext_header
hdr_len	libbpf_internal.h	/^	__u32	hdr_len;$/;"	m	struct:btf_ext_header
header	libbpf.c	/^	struct perf_event_header header;$/;"	m	struct:perf_sample_lost	typeref:struct:perf_sample_lost::perf_event_header	file:
header	libbpf.c	/^	struct perf_event_header header;$/;"	m	struct:perf_sample_raw	typeref:struct:perf_sample_raw::perf_event_header	file:
hw_prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 hw_prog_id;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
hw_prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 hw_prog_id;$/;"	m	struct:xdp_link_info
hw_prog_id	libbpf.h	/^	__u32 hw_prog_id;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
hw_prog_id	libbpf.h	/^	__u32 hw_prog_id;$/;"	m	struct:xdp_link_info
hypot_adjust_canon	btf.c	/^	bool hypot_adjust_canon;$/;"	m	struct:btf_dedup	file:
hypot_cap	btf.c	/^	size_t hypot_cap;$/;"	m	struct:btf_dedup	file:
hypot_cnt	btf.c	/^	size_t hypot_cnt;$/;"	m	struct:btf_dedup	file:
hypot_list	btf.c	/^	__u32 *hypot_list;$/;"	m	struct:btf_dedup	file:
hypot_map	btf.c	/^	__u32 *hypot_map;$/;"	m	struct:btf_dedup	file:
id	libbpf.c	/^	__u32 id;$/;"	m	struct:module_btf	file:
id	libbpf.c	/^	uint64_t id;$/;"	m	struct:perf_sample_lost	file:
id	linker.c	/^	int id;$/;"	m	struct:dst_sec	file:
id	linker.c	/^	int id;$/;"	m	struct:src_sec	file:
id	relo_core.h	/^	__u32 id;$/;"	m	struct:bpf_core_cand
id_stack	btf_dump.c	/^struct id_stack {$/;"	s	file:
ident_names	btf_dump.c	/^	struct hashmap *ident_names;$/;"	m	struct:btf_dump	typeref:struct:btf_dump::hashmap	file:
ids	btf_dump.c	/^	const __u32 *ids;$/;"	m	struct:id_stack	file:
idx	relo_core.h	/^	__u32 idx;		\/* field index or array index *\/$/;"	m	struct:bpf_core_accessor
ifindex	build/usr/include/bpf/libbpf.h	/^	int ifindex;$/;"	m	struct:bpf_prog_load_attr
ifindex	build/usr/include/bpf/libbpf.h	/^	int ifindex;$/;"	m	struct:bpf_tc_hook
ifindex	libbpf.h	/^	int ifindex;$/;"	m	struct:bpf_prog_load_attr
ifindex	libbpf.h	/^	int ifindex;$/;"	m	struct:bpf_tc_hook
ifindex	netlink.c	/^	int ifindex;$/;"	m	struct:xdp_id_md	file:
ifindex	xsk.c	/^	int ifindex;$/;"	m	struct:xsk_ctx	file:
ifindex	xsk.c	/^	int ifindex;$/;"	m	struct:xsk_nl_info	file:
ifinfo	nlattr.h	/^		struct ifinfomsg ifinfo;$/;"	m	union:libbpf_nla_req::__anon19	typeref:struct:libbpf_nla_req::__anon19::ifinfomsg
ifname	xsk.c	/^	char ifname[IFNAMSIZ];$/;"	m	struct:xsk_ctx	file:
ignore_elf_section	libbpf.c	/^static bool ignore_elf_section(Elf64_Shdr *hdr, const char *name)$/;"	f	file:
indent_level	btf.h	/^	int indent_level;$/;"	m	struct:btf_dump_emit_type_decl_opts
indent_level	btf.h	/^	int indent_level;$/;"	m	struct:btf_dump_type_data_opts
indent_level	build/usr/include/bpf/btf.h	/^	int indent_level;$/;"	m	struct:btf_dump_emit_type_decl_opts
indent_level	build/usr/include/bpf/btf.h	/^	int indent_level;$/;"	m	struct:btf_dump_type_data_opts
indent_lvl	btf_dump.c	/^	__u8 indent_lvl;	\/* base indent level *\/$/;"	m	struct:btf_dump_data	file:
indent_str	btf.h	/^	const char *indent_str;$/;"	m	struct:btf_dump_type_data_opts
indent_str	btf_dump.c	/^	char indent_str[BTF_DATA_INDENT_STR_LEN];$/;"	m	struct:btf_dump_data	file:
indent_str	build/usr/include/bpf/btf.h	/^	const char *indent_str;$/;"	m	struct:btf_dump_type_data_opts
info	build/usr/include/bpf/libbpf.h	/^	struct bpf_prog_info	info;$/;"	m	struct:bpf_prog_info_linear	typeref:struct:bpf_prog_info_linear::bpf_prog_info
info	libbpf.h	/^	struct bpf_prog_info	info;$/;"	m	struct:bpf_prog_info_linear	typeref:struct:bpf_prog_info_linear::bpf_prog_info
info	libbpf_internal.h	/^	void *info;$/;"	m	struct:btf_ext_info
info	netlink.c	/^	struct xdp_link_info info;$/;"	m	struct:xdp_id_md	typeref:struct:xdp_id_md::xdp_link_info	file:
info_len	build/usr/include/bpf/libbpf.h	/^	__u32			info_len;$/;"	m	struct:bpf_prog_info_linear
info_len	libbpf.h	/^	__u32			info_len;$/;"	m	struct:bpf_prog_info_linear
init_map_in_map_slots	libbpf.c	/^static int init_map_in_map_slots(struct bpf_object *obj, struct bpf_map *map)$/;"	f	file:
init_output_elf	linker.c	/^static int init_output_elf(struct bpf_linker *linker, const char *file)$/;"	f	file:
init_prog_array_slots	libbpf.c	/^static int init_prog_array_slots(struct bpf_object *obj, struct bpf_map *map)$/;"	f	file:
init_sec	linker.c	/^static int init_sec(struct bpf_linker *linker, struct dst_sec *dst_sec, struct src_sec *src_sec)$/;"	f	file:
init_slots	libbpf.c	/^	void **init_slots;$/;"	m	struct:bpf_map	file:
init_slots_sz	libbpf.c	/^	int init_slots_sz;$/;"	m	struct:bpf_map	file:
initial_value	build/usr/include/bpf/skel_internal.h	/^	__aligned_u64 initial_value;$/;"	m	struct:bpf_map_desc
initial_value	skel_internal.h	/^	__aligned_u64 initial_value;$/;"	m	struct:bpf_map_desc
inner_map	libbpf.c	/^	struct bpf_map *inner_map;$/;"	m	struct:bpf_map	typeref:struct:bpf_map::bpf_map	file:
inner_map_fd	bpf.h	/^		__u32 inner_map_fd;$/;"	m	union:bpf_create_map_attr::__anon10
inner_map_fd	bpf.h	/^	__u32 inner_map_fd;$/;"	m	struct:bpf_map_create_opts
inner_map_fd	build/usr/include/bpf/bpf.h	/^		__u32 inner_map_fd;$/;"	m	union:bpf_create_map_attr::__anon28
inner_map_fd	build/usr/include/bpf/bpf.h	/^	__u32 inner_map_fd;$/;"	m	struct:bpf_map_create_opts
inner_map_fd	gen_loader.c	/^	__u32 inner_map_fd;$/;"	m	struct:loader_stack	file:
inner_map_fd	libbpf.c	/^	int inner_map_fd;$/;"	m	struct:bpf_map	file:
insn	bpf_gen_internal.h	/^	int insn;$/;"	m	struct:ksym_desc
insn_bpf_size_to_bytes	relo_core.c	/^static int insn_bpf_size_to_bytes(struct bpf_insn *insn)$/;"	f	file:
insn_bytes_to_bpf_size	gen_loader.c	/^static int insn_bytes_to_bpf_size(__u32 sz)$/;"	f	file:
insn_bytes_to_bpf_size	relo_core.c	/^static int insn_bytes_to_bpf_size(__u32 sz)$/;"	f	file:
insn_cur	bpf_gen_internal.h	/^	void *insn_cur;$/;"	m	struct:bpf_gen
insn_idx	bpf_gen_internal.h	/^	int insn_idx;$/;"	m	struct:ksym_relo_desc
insn_idx	libbpf.c	/^	int insn_idx;$/;"	m	struct:reloc_desc	file:
insn_is_helper_call	libbpf.c	/^static bool insn_is_helper_call(struct bpf_insn *insn, enum bpf_func_id *func_id)$/;"	f	file:
insn_is_pseudo_func	libbpf.c	/^static bool insn_is_pseudo_func(struct bpf_insn *insn)$/;"	f	file:
insn_is_subprog_call	libbpf.c	/^static bool insn_is_subprog_call(const struct bpf_insn *insn)$/;"	f	file:
insn_off	libbpf_internal.h	/^	__u32	insn_off;$/;"	m	struct:bpf_line_info_min
insn_off	libbpf_internal.h	/^	__u32   insn_off;$/;"	m	struct:bpf_func_info_min
insn_start	bpf_gen_internal.h	/^	void *insn_start;$/;"	m	struct:bpf_gen
insns	bpf.h	/^	const struct bpf_insn *insns;$/;"	m	struct:bpf_load_program_attr	typeref:struct:bpf_load_program_attr::bpf_insn
insns	build/usr/include/bpf/bpf.h	/^	const struct bpf_insn *insns;$/;"	m	struct:bpf_load_program_attr	typeref:struct:bpf_load_program_attr::bpf_insn
insns	build/usr/include/bpf/libbpf.h	/^	const char *insns;$/;"	m	struct:gen_loader_opts
insns	build/usr/include/bpf/skel_internal.h	/^	const void *insns;$/;"	m	struct:bpf_load_and_run_opts
insns	libbpf.c	/^	struct bpf_insn *insns;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::bpf_insn	file:
insns	libbpf.h	/^	const char *insns;$/;"	m	struct:gen_loader_opts
insns	skel_internal.h	/^	const void *insns;$/;"	m	struct:bpf_load_and_run_opts
insns_cnt	bpf.h	/^	size_t insns_cnt;$/;"	m	struct:bpf_load_program_attr
insns_cnt	build/usr/include/bpf/bpf.h	/^	size_t insns_cnt;$/;"	m	struct:bpf_load_program_attr
insns_cnt	libbpf.c	/^	size_t insns_cnt;$/;"	m	struct:bpf_program	file:
insns_sz	build/usr/include/bpf/libbpf.h	/^	__u32 insns_sz;$/;"	m	struct:gen_loader_opts
insns_sz	build/usr/include/bpf/skel_internal.h	/^	__u32 insns_sz;$/;"	m	struct:bpf_load_and_run_opts
insns_sz	libbpf.h	/^	__u32 insns_sz;$/;"	m	struct:gen_loader_opts
insns_sz	skel_internal.h	/^	__u32 insns_sz;$/;"	m	struct:bpf_load_and_run_opts
instances	libbpf.c	/^	} instances;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::__anon41	file:
internal_map_name	libbpf.c	/^static char *internal_map_name(struct bpf_object *obj, const char *real_name)$/;"	f	file:
ip_to_spec_id_map	usdt.c	/^	struct bpf_map *ip_to_spec_id_map;$/;"	m	struct:usdt_manager	typeref:struct:usdt_manager::bpf_map	file:
is_array_char	btf_dump.c	/^	bool is_array_char;$/;"	m	struct:btf_dump_data	file:
is_array_member	btf_dump.c	/^	bool is_array_member;$/;"	m	struct:btf_dump_data	file:
is_array_terminated	btf_dump.c	/^	bool is_array_terminated;$/;"	m	struct:btf_dump_data	file:
is_call_insn	libbpf.c	/^static bool is_call_insn(const struct bpf_insn *insn)$/;"	f	file:
is_data_sec	linker.c	/^static bool is_data_sec(struct src_sec *sec)$/;"	f	file:
is_dwarf_sec_name	linker.c	/^static bool is_dwarf_sec_name(const char *name)$/;"	f	file:
is_exec	usdt.c	/^	bool is_exec;$/;"	m	struct:elf_seg	file:
is_extern	linker.c	/^	bool is_extern;$/;"	m	struct:glob_sym	file:
is_flex_arr	relo_core.c	/^static bool is_flex_arr(const struct btf *btf,$/;"	f	file:
is_host_big_endian	btf.c	/^static bool is_host_big_endian(void)$/;"	f	file:
is_ignored_sec	linker.c	/^static bool is_ignored_sec(struct src_sec *sec)$/;"	f	file:
is_kcfg_value_in_range	libbpf.c	/^static bool is_kcfg_value_in_range(const struct extern_desc *ext, __u64 v)$/;"	f	file:
is_ldimm64_insn	libbpf_internal.h	/^static inline bool is_ldimm64_insn(struct bpf_insn *insn)$/;"	f
is_ldimm64_insn	relo_core.c	/^static bool is_ldimm64_insn(struct bpf_insn *insn)$/;"	f	file:
is_pow_of_2	libbpf.c	/^static bool is_pow_of_2(size_t x)$/;"	f	file:
is_pow_of_2	linker.c	/^static bool is_pow_of_2(size_t x)$/;"	f	file:
is_relo_sec	linker.c	/^static bool is_relo_sec(struct src_sec *sec)$/;"	f	file:
is_sec_name_dwarf	libbpf.c	/^static bool is_sec_name_dwarf(const char *name)$/;"	f	file:
is_set	libbpf.c	/^	bool is_set;$/;"	m	struct:extern_desc	file:
is_signed	libbpf.c	/^			bool is_signed;$/;"	m	struct:extern_desc::__anon42::__anon43	file:
is_simm16	gen_loader.c	/^static bool is_simm16(__s64 value)$/;"	f	file:
is_type_mapped	btf.c	/^static inline bool is_type_mapped(struct btf_dedup *d, uint32_t type_id)$/;"	f	file:
is_typeless	bpf_gen_internal.h	/^	bool is_typeless;$/;"	m	struct:ksym_relo_desc
is_weak	bpf_gen_internal.h	/^	bool is_weak;$/;"	m	struct:ksym_relo_desc
is_weak	libbpf.c	/^	bool is_weak;$/;"	m	struct:extern_desc	file:
is_weak	linker.c	/^	bool is_weak;$/;"	m	struct:glob_sym	file:
iter_info	bpf.h	/^	union bpf_iter_link_info *iter_info;$/;"	m	struct:bpf_link_create_opts	typeref:union:bpf_link_create_opts::bpf_iter_link_info
iter_info	build/usr/include/bpf/bpf.h	/^	union bpf_iter_link_info *iter_info;$/;"	m	struct:bpf_link_create_opts	typeref:union:bpf_link_create_opts::bpf_iter_link_info
iter_info_len	bpf.h	/^	__u32 iter_info_len;$/;"	m	struct:bpf_link_create_opts
iter_info_len	build/usr/include/bpf/bpf.h	/^	__u32 iter_info_len;$/;"	m	struct:bpf_link_create_opts
jited_linfo_func_idx	bpf_prog_linfo.c	/^	__u32 *jited_linfo_func_idx;$/;"	m	struct:bpf_prog_linfo	file:
jited_rec_size	bpf_prog_linfo.c	/^	__u32 jited_rec_size;$/;"	m	struct:bpf_prog_linfo	file:
kallsyms_cb	libbpf.c	/^static int kallsyms_cb(unsigned long long sym_addr, char sym_type,$/;"	f	file:
kallsyms_cb_t	libbpf_internal.h	/^typedef int (*kallsyms_cb_t)(unsigned long long sym_addr, char sym_type,$/;"	t
kcfg	libbpf.c	/^		} kcfg;$/;"	m	union:extern_desc::__anon42	typeref:struct:extern_desc::__anon42::__anon43	file:
kcfg_type	libbpf.c	/^enum kcfg_type {$/;"	g	file:
kconfig	build/usr/include/bpf/libbpf.h	/^	const char *kconfig;$/;"	m	struct:bpf_object_open_opts
kconfig	libbpf.c	/^	char *kconfig;$/;"	m	struct:bpf_object	file:
kconfig	libbpf.h	/^	const char *kconfig;$/;"	m	struct:bpf_object_open_opts
kconfig_map_idx	libbpf.c	/^	int kconfig_map_idx;$/;"	m	struct:bpf_object	file:
kern_feature_desc	libbpf.c	/^static struct kern_feature_desc {$/;"	s	file:
kern_feature_id	libbpf_internal.h	/^enum kern_feature_id {$/;"	g
kern_feature_result	libbpf.c	/^enum kern_feature_result {$/;"	g	file:
kern_func_off	libbpf.c	/^	__u32 *kern_func_off;$/;"	m	struct:bpf_struct_ops	file:
kern_vdata	libbpf.c	/^	void *kern_vdata;$/;"	m	struct:bpf_struct_ops	file:
kern_version	bpf.h	/^		__u32 kern_version;$/;"	m	union:bpf_load_program_attr::__anon11
kern_version	bpf.h	/^	__u32 kern_version;$/;"	m	struct:bpf_prog_load_opts
kern_version	build/usr/include/bpf/bpf.h	/^		__u32 kern_version;$/;"	m	union:bpf_load_program_attr::__anon29
kern_version	build/usr/include/bpf/bpf.h	/^	__u32 kern_version;$/;"	m	struct:bpf_prog_load_opts
kern_version	libbpf.c	/^	__u32 kern_version;$/;"	m	struct:bpf_object	file:
kernel_btf_id	libbpf.c	/^			int kernel_btf_id;$/;"	m	struct:extern_desc::__anon42::__anon44	file:
kernel_btf_obj_fd	libbpf.c	/^			int kernel_btf_obj_fd;$/;"	m	struct:extern_desc::__anon42::__anon44	file:
kernel_log_buf	build/usr/include/bpf/libbpf.h	/^	char *kernel_log_buf;$/;"	m	struct:bpf_object_open_opts
kernel_log_buf	libbpf.h	/^	char *kernel_log_buf;$/;"	m	struct:bpf_object_open_opts
kernel_log_level	build/usr/include/bpf/libbpf.h	/^	__u32 kernel_log_level;$/;"	m	struct:bpf_object_open_opts
kernel_log_level	libbpf.h	/^	__u32 kernel_log_level;$/;"	m	struct:bpf_object_open_opts
kernel_log_size	build/usr/include/bpf/libbpf.h	/^	size_t kernel_log_size;$/;"	m	struct:bpf_object_open_opts
kernel_log_size	libbpf.h	/^	size_t kernel_log_size;$/;"	m	struct:bpf_object_open_opts
kernel_needs_btf	libbpf.c	/^static bool kernel_needs_btf(const struct bpf_object *obj)$/;"	f	file:
kernel_supports	libbpf.c	/^bool kernel_supports(const struct bpf_object *obj, enum kern_feature_id feat_id)$/;"	f
key	hashmap.h	/^	const void *key;$/;"	m	struct:hashmap_entry
key_size	bpf.h	/^	__u32 key_size;$/;"	m	struct:bpf_create_map_attr
key_size	bpf_helpers.h	/^	unsigned int key_size;$/;"	m	struct:bpf_map_def
key_size	build/usr/include/bpf/bpf.h	/^	__u32 key_size;$/;"	m	struct:bpf_create_map_attr
key_size	build/usr/include/bpf/bpf_helpers.h	/^	unsigned int key_size;$/;"	m	struct:bpf_map_def
key_size	build/usr/include/bpf/libbpf.h	/^	unsigned int key_size;$/;"	m	struct:bpf_map_def
key_size	libbpf.h	/^	unsigned int key_size;$/;"	m	struct:bpf_map_def
key_size	libbpf_internal.h	/^	__u32 key_size;$/;"	m	struct:btf_map_def
key_type_id	libbpf_internal.h	/^	__u32 key_type_id;$/;"	m	struct:btf_map_def
kind	bpf_gen_internal.h	/^	int kind;$/;"	m	struct:ksym_desc
kind	bpf_gen_internal.h	/^	int kind;$/;"	m	struct:ksym_relo_desc
kprobe_multi	bpf.h	/^		} kprobe_multi;$/;"	m	union:bpf_link_create_opts::__anon13	typeref:struct:bpf_link_create_opts::__anon13::__anon15
kprobe_multi	build/usr/include/bpf/bpf.h	/^		} kprobe_multi;$/;"	m	union:bpf_link_create_opts::__anon31	typeref:struct:bpf_link_create_opts::__anon31::__anon33
kprobe_multi_resolve	libbpf.c	/^struct kprobe_multi_resolve {$/;"	s	file:
ksym	libbpf.c	/^		} ksym;$/;"	m	union:extern_desc::__anon42	typeref:struct:extern_desc::__anon42::__anon44	file:
ksym_desc	bpf_gen_internal.h	/^struct ksym_desc {$/;"	s
ksym_relo_desc	bpf_gen_internal.h	/^struct ksym_relo_desc {$/;"	s
ksyms	bpf_gen_internal.h	/^	struct ksym_desc *ksyms;$/;"	m	struct:bpf_gen	typeref:struct:bpf_gen::ksym_desc
last_custom_sec_def_handler_id	libbpf.c	/^static int last_custom_sec_def_handler_id;$/;"	v	file:
last_id	btf_dump.c	/^	int last_id;$/;"	m	struct:btf_dump	file:
ld	btf_dump.c	/^	long double ld;$/;"	m	union:float_data	file:
legacy_is_kprobe	libbpf.c	/^	bool legacy_is_kprobe;$/;"	m	struct:bpf_link_perf	file:
legacy_is_retprobe	libbpf.c	/^	bool legacy_is_retprobe;$/;"	m	struct:bpf_link_perf	file:
legacy_probe_name	libbpf.c	/^	char *legacy_probe_name;$/;"	m	struct:bpf_link_perf	file:
len	btf.c	/^	__u32 len;$/;"	m	struct:btf_ext_sec_setup_param	file:
len	libbpf_internal.h	/^	__u32 len;$/;"	m	struct:btf_ext_info
len	relo_core.h	/^	int len;$/;"	m	struct:bpf_core_cand_list
len	relo_core.h	/^	int len;$/;"	m	struct:bpf_core_spec
libbpf__load_raw_btf	libbpf_probes.c	/^int libbpf__load_raw_btf(const char *raw_types, size_t types_len,$/;"	f
libbpf_add_mem	btf.c	/^void *libbpf_add_mem(void **data, size_t *cap_cnt, size_t elem_sz,$/;"	f
libbpf_attach_type_by_name	libbpf.c	/^int libbpf_attach_type_by_name(const char *name,$/;"	f
libbpf_dump_nlmsg_t	netlink.c	/^typedef int (*libbpf_dump_nlmsg_t)(void *cookie, void *msg, struct nlattr **tb);$/;"	t	file:
libbpf_ensure_mem	btf.c	/^int libbpf_ensure_mem(void **data, size_t *cap_cnt, size_t elem_sz, size_t need_cnt)$/;"	f
libbpf_err	libbpf_internal.h	/^static inline int libbpf_err(int ret)$/;"	f
libbpf_err_errno	libbpf_internal.h	/^static inline int libbpf_err_errno(int ret)$/;"	f
libbpf_err_ptr	libbpf_internal.h	/^static inline void *libbpf_err_ptr(int err)$/;"	f
libbpf_errno	build/usr/include/bpf/libbpf.h	/^enum libbpf_errno {$/;"	g
libbpf_errno	libbpf.h	/^enum libbpf_errno {$/;"	g
libbpf_find_attach_btf_id	libbpf.c	/^static int libbpf_find_attach_btf_id(struct bpf_program *prog, const char *attach_name,$/;"	f	file:
libbpf_find_prog_btf_id	libbpf.c	/^static int libbpf_find_prog_btf_id(const char *name, __u32 attach_prog_fd)$/;"	f	file:
libbpf_find_vmlinux_btf_id	libbpf.c	/^int libbpf_find_vmlinux_btf_id(const char *name,$/;"	f
libbpf_flags	build/usr/include/bpf/xsk.h	/^	__u32 libbpf_flags;$/;"	m	struct:xsk_socket_config
libbpf_flags	xsk.h	/^	__u32 libbpf_flags;$/;"	m	struct:xsk_socket_config
libbpf_get_error	libbpf.c	/^long libbpf_get_error(const void *ptr)$/;"	f
libbpf_get_type_names	libbpf.c	/^static char *libbpf_get_type_names(bool attach_type)$/;"	f	file:
libbpf_is_mem_zeroed	libbpf_internal.h	/^static inline bool libbpf_is_mem_zeroed(const char *p, ssize_t len)$/;"	f
libbpf_kallsyms_parse	libbpf.c	/^int libbpf_kallsyms_parse(kallsyms_cb_t cb, void *ctx)$/;"	f
libbpf_major_version	libbpf.c	/^__u32 libbpf_major_version(void)$/;"	f
libbpf_map_type	libbpf.c	/^enum libbpf_map_type {$/;"	g	file:
libbpf_minor_version	libbpf.c	/^__u32 libbpf_minor_version(void)$/;"	f
libbpf_mode	libbpf.c	/^enum libbpf_strict_mode libbpf_mode = LIBBPF_STRICT_NONE;$/;"	v	typeref:enum:libbpf_strict_mode
libbpf_needs_btf	libbpf.c	/^static bool libbpf_needs_btf(const struct bpf_object *obj)$/;"	f	file:
libbpf_netlink_close	netlink.c	/^static void libbpf_netlink_close(int sock)$/;"	f	file:
libbpf_netlink_open	netlink.c	/^static int libbpf_netlink_open(__u32 *nl_pid)$/;"	f	file:
libbpf_netlink_recv	netlink.c	/^static int libbpf_netlink_recv(int sock, __u32 nl_pid, int seq,$/;"	f	file:
libbpf_netlink_send_recv	netlink.c	/^static int libbpf_netlink_send_recv(struct libbpf_nla_req *req,$/;"	f	file:
libbpf_nla_data	nlattr.h	/^static inline void *libbpf_nla_data(const struct nlattr *nla)$/;"	f
libbpf_nla_dump_errormsg	nlattr.c	/^int libbpf_nla_dump_errormsg(struct nlmsghdr *nlh)$/;"	f
libbpf_nla_for_each_attr	nlattr.h	73;"	d
libbpf_nla_getattr_str	nlattr.h	/^static inline const char *libbpf_nla_getattr_str(const struct nlattr *nla)$/;"	f
libbpf_nla_getattr_u32	nlattr.h	/^static inline uint32_t libbpf_nla_getattr_u32(const struct nlattr *nla)$/;"	f
libbpf_nla_getattr_u8	nlattr.h	/^static inline uint8_t libbpf_nla_getattr_u8(const struct nlattr *nla)$/;"	f
libbpf_nla_len	nlattr.h	/^static inline int libbpf_nla_len(const struct nlattr *nla)$/;"	f
libbpf_nla_parse	nlattr.c	/^int libbpf_nla_parse(struct nlattr *tb[], int maxtype, struct nlattr *head,$/;"	f
libbpf_nla_parse_nested	nlattr.c	/^int libbpf_nla_parse_nested(struct nlattr *tb[], int maxtype,$/;"	f
libbpf_nla_policy	nlattr.h	/^struct libbpf_nla_policy {$/;"	s
libbpf_nla_req	nlattr.h	/^struct libbpf_nla_req {$/;"	s
libbpf_num_online_cpus	libbpf.c	/^int libbpf_num_online_cpus(void)$/;"	f
libbpf_num_possible_cpus	libbpf.c	/^int libbpf_num_possible_cpus(void)$/;"	f
libbpf_pin_type	bpf_helpers.h	/^enum libbpf_pin_type {$/;"	g
libbpf_pin_type	build/usr/include/bpf/bpf_helpers.h	/^enum libbpf_pin_type {$/;"	g
libbpf_pin_type	build/usr/include/bpf/libbpf.h	/^enum libbpf_pin_type {$/;"	g
libbpf_pin_type	libbpf.h	/^enum libbpf_pin_type {$/;"	g
libbpf_prepare_prog_load	libbpf.c	/^static int libbpf_prepare_prog_load(struct bpf_program *prog,$/;"	f	file:
libbpf_print	libbpf.c	/^void libbpf_print(enum libbpf_print_level level, const char *format, ...)$/;"	f
libbpf_print	relo_core.c	56;"	d	file:
libbpf_print_fn_t	build/usr/include/bpf/libbpf.h	/^typedef int (*libbpf_print_fn_t)(enum libbpf_print_level level,$/;"	t
libbpf_print_fn_t	libbpf.h	/^typedef int (*libbpf_print_fn_t)(enum libbpf_print_level level,$/;"	t
libbpf_print_level	build/usr/include/bpf/libbpf.h	/^enum libbpf_print_level {$/;"	g
libbpf_print_level	libbpf.h	/^enum libbpf_print_level {$/;"	g
libbpf_print_level	relo_core.c	/^enum libbpf_print_level {$/;"	g	file:
libbpf_probe_bpf_helper	libbpf_probes.c	/^int libbpf_probe_bpf_helper(enum bpf_prog_type prog_type, enum bpf_func_id helper_id,$/;"	f
libbpf_probe_bpf_map_type	libbpf_probes.c	/^int libbpf_probe_bpf_map_type(enum bpf_map_type map_type, const void *opts)$/;"	f
libbpf_probe_bpf_prog_type	libbpf_probes.c	/^int libbpf_probe_bpf_prog_type(enum bpf_prog_type prog_type, const void *opts)$/;"	f
libbpf_prog_attach_fn_t	build/usr/include/bpf/libbpf.h	/^typedef int (*libbpf_prog_attach_fn_t)(const struct bpf_program *prog, long cookie,$/;"	t
libbpf_prog_attach_fn_t	libbpf.h	/^typedef int (*libbpf_prog_attach_fn_t)(const struct bpf_program *prog, long cookie,$/;"	t
libbpf_prog_handler_opts	build/usr/include/bpf/libbpf.h	/^struct libbpf_prog_handler_opts {$/;"	s
libbpf_prog_handler_opts	libbpf.h	/^struct libbpf_prog_handler_opts {$/;"	s
libbpf_prog_handler_opts__last_field	build/usr/include/bpf/libbpf.h	1706;"	d
libbpf_prog_handler_opts__last_field	libbpf.h	1706;"	d
libbpf_prog_prepare_load_fn_t	build/usr/include/bpf/libbpf.h	/^typedef int (*libbpf_prog_prepare_load_fn_t)(struct bpf_program *prog,$/;"	t
libbpf_prog_prepare_load_fn_t	libbpf.h	/^typedef int (*libbpf_prog_prepare_load_fn_t)(struct bpf_program *prog,$/;"	t
libbpf_prog_setup_fn_t	build/usr/include/bpf/libbpf.h	/^typedef int (*libbpf_prog_setup_fn_t)(struct bpf_program *prog, long cookie);$/;"	t
libbpf_prog_setup_fn_t	libbpf.h	/^typedef int (*libbpf_prog_setup_fn_t)(struct bpf_program *prog, long cookie);$/;"	t
libbpf_prog_type_by_name	libbpf.c	/^int libbpf_prog_type_by_name(const char *name, enum bpf_prog_type *prog_type,$/;"	f
libbpf_ptr	libbpf_internal.h	/^static inline void *libbpf_ptr(void *ret)$/;"	f
libbpf_reallocarray	libbpf_internal.h	/^static inline void *libbpf_reallocarray(void *ptr, size_t nmemb, size_t size)$/;"	f
libbpf_register_prog_handler	libbpf.c	/^int libbpf_register_prog_handler(const char *sec,$/;"	f
libbpf_set_memlock_rlim	bpf.c	/^int libbpf_set_memlock_rlim(size_t memlock_bytes)$/;"	f
libbpf_set_print	libbpf.c	/^libbpf_print_fn_t libbpf_set_print(libbpf_print_fn_t fn)$/;"	f
libbpf_set_strict_mode	libbpf.c	/^int libbpf_set_strict_mode(enum libbpf_strict_mode mode)$/;"	f
libbpf_smp_load_acquire	build/usr/include/bpf/xsk.h	48;"	d
libbpf_smp_load_acquire	build/usr/include/bpf/xsk.h	57;"	d
libbpf_smp_load_acquire	build/usr/include/bpf/xsk.h	70;"	d
libbpf_smp_load_acquire	build/usr/include/bpf/xsk.h	87;"	d
libbpf_smp_load_acquire	xsk.h	48;"	d
libbpf_smp_load_acquire	xsk.h	57;"	d
libbpf_smp_load_acquire	xsk.h	70;"	d
libbpf_smp_load_acquire	xsk.h	87;"	d
libbpf_smp_store_release	build/usr/include/bpf/xsk.h	43;"	d
libbpf_smp_store_release	build/usr/include/bpf/xsk.h	55;"	d
libbpf_smp_store_release	build/usr/include/bpf/xsk.h	65;"	d
libbpf_smp_store_release	build/usr/include/bpf/xsk.h	79;"	d
libbpf_smp_store_release	xsk.h	43;"	d
libbpf_smp_store_release	xsk.h	55;"	d
libbpf_smp_store_release	xsk.h	65;"	d
libbpf_smp_store_release	xsk.h	79;"	d
libbpf_strerror	libbpf_errno.c	/^int libbpf_strerror(int err, char *buf, size_t size)$/;"	f
libbpf_strerror_r	str_error.c	/^char *libbpf_strerror_r(int err, char *dst, int len)$/;"	f
libbpf_strerror_table	libbpf_errno.c	/^static const char *libbpf_strerror_table[NR_ERRNO] = {$/;"	v	file:
libbpf_strict_mode	build/usr/include/bpf/libbpf_legacy.h	/^enum libbpf_strict_mode {$/;"	g
libbpf_strict_mode	libbpf_legacy.h	/^enum libbpf_strict_mode {$/;"	g
libbpf_strlcpy	libbpf_internal.h	/^static inline void libbpf_strlcpy(char *dst, const char *src, size_t sz)$/;"	f
libbpf_tristate	bpf_helpers.h	/^enum libbpf_tristate {$/;"	g
libbpf_tristate	build/usr/include/bpf/bpf_helpers.h	/^enum libbpf_tristate {$/;"	g
libbpf_tristate	build/usr/include/bpf/libbpf.h	/^enum libbpf_tristate {$/;"	g
libbpf_tristate	libbpf.h	/^enum libbpf_tristate {$/;"	g
libbpf_type	libbpf.c	/^	enum libbpf_map_type libbpf_type;$/;"	m	struct:bpf_map	typeref:enum:bpf_map::libbpf_map_type	file:
libbpf_unregister_prog_handler	libbpf.c	/^int libbpf_unregister_prog_handler(int handler_id)$/;"	f
libbpf_validate_opts	libbpf_internal.h	/^static inline bool libbpf_validate_opts(const char *opts,$/;"	f
libbpf_version_string	libbpf.c	/^const char *libbpf_version_string(void)$/;"	f
license	bpf.h	/^	const char *license;$/;"	m	struct:bpf_load_program_attr
license	build/usr/include/bpf/bpf.h	/^	const char *license;$/;"	m	struct:bpf_load_program_attr
license	libbpf.c	/^	char license[64];$/;"	m	struct:bpf_object	file:
likely	libbpf_internal.h	80;"	d
line_col	libbpf_internal.h	/^	__u32	line_col;$/;"	m	struct:bpf_line_info_min
line_info	bpf.h	/^	const void *line_info;$/;"	m	struct:bpf_load_program_attr
line_info	bpf.h	/^	const void *line_info;$/;"	m	struct:bpf_prog_load_opts
line_info	build/usr/include/bpf/bpf.h	/^	const void *line_info;$/;"	m	struct:bpf_load_program_attr
line_info	build/usr/include/bpf/bpf.h	/^	const void *line_info;$/;"	m	struct:bpf_prog_load_opts
line_info	libbpf.c	/^	void *line_info;$/;"	m	struct:bpf_program	file:
line_info	libbpf_internal.h	/^	struct btf_ext_info line_info;$/;"	m	struct:btf_ext	typeref:struct:btf_ext::btf_ext_info
line_info	linker.c	/^	struct btf_ext_sec_data line_info;$/;"	m	struct:dst_sec	typeref:struct:dst_sec::btf_ext_sec_data	file:
line_info_cnt	bpf.h	/^	__u32 line_info_cnt;$/;"	m	struct:bpf_load_program_attr
line_info_cnt	bpf.h	/^	__u32 line_info_cnt;$/;"	m	struct:bpf_prog_load_opts
line_info_cnt	build/usr/include/bpf/bpf.h	/^	__u32 line_info_cnt;$/;"	m	struct:bpf_load_program_attr
line_info_cnt	build/usr/include/bpf/bpf.h	/^	__u32 line_info_cnt;$/;"	m	struct:bpf_prog_load_opts
line_info_cnt	libbpf.c	/^	__u32 line_info_cnt;$/;"	m	struct:bpf_program	file:
line_info_len	libbpf_internal.h	/^	__u32	line_info_len;$/;"	m	struct:btf_ext_header
line_info_off	libbpf_internal.h	/^	__u32	line_info_off;$/;"	m	struct:btf_ext_header
line_info_rec_size	bpf.h	/^	__u32 line_info_rec_size;$/;"	m	struct:bpf_load_program_attr
line_info_rec_size	bpf.h	/^	__u32 line_info_rec_size;$/;"	m	struct:bpf_prog_load_opts
line_info_rec_size	build/usr/include/bpf/bpf.h	/^	__u32 line_info_rec_size;$/;"	m	struct:bpf_load_program_attr
line_info_rec_size	build/usr/include/bpf/bpf.h	/^	__u32 line_info_rec_size;$/;"	m	struct:bpf_prog_load_opts
line_info_rec_size	libbpf.c	/^	__u32 line_info_rec_size;$/;"	m	struct:bpf_program	file:
line_off	libbpf_internal.h	/^	__u32	line_off;$/;"	m	struct:bpf_line_info_min
link	build/usr/include/bpf/libbpf.h	/^	struct bpf_link **link;$/;"	m	struct:bpf_prog_skeleton	typeref:struct:bpf_prog_skeleton::bpf_link
link	libbpf.c	/^	struct bpf_link link;$/;"	m	struct:bpf_link_perf	typeref:struct:bpf_link_perf::bpf_link	file:
link	libbpf.h	/^	struct bpf_link **link;$/;"	m	struct:bpf_prog_skeleton	typeref:struct:bpf_prog_skeleton::bpf_link
link	usdt.c	/^		struct bpf_link *link;$/;"	m	struct:bpf_link_usdt::__anon20	typeref:struct:bpf_link_usdt::__anon20::bpf_link	file:
link	usdt.c	/^	struct bpf_link link;$/;"	m	struct:bpf_link_usdt	typeref:struct:bpf_link_usdt::bpf_link	file:
link_fd	xsk.c	/^	int link_fd;$/;"	m	struct:xsk_ctx	file:
link_info	build/usr/include/bpf/libbpf.h	/^	union bpf_iter_link_info *link_info;$/;"	m	struct:bpf_iter_attach_opts	typeref:union:bpf_iter_attach_opts::bpf_iter_link_info
link_info	libbpf.h	/^	union bpf_iter_link_info *link_info;$/;"	m	struct:bpf_iter_attach_opts	typeref:union:bpf_iter_attach_opts::bpf_iter_link_info
link_info_len	build/usr/include/bpf/libbpf.h	/^	__u32 link_info_len;$/;"	m	struct:bpf_iter_attach_opts
link_info_len	libbpf.h	/^	__u32 link_info_len;$/;"	m	struct:bpf_iter_attach_opts
linker_append_btf	linker.c	/^static int linker_append_btf(struct bpf_linker *linker, struct src_obj *obj)$/;"	f	file:
linker_append_btf_ext	linker.c	/^static int linker_append_btf_ext(struct bpf_linker *linker, struct src_obj *obj)$/;"	f	file:
linker_append_elf_relos	linker.c	/^static int linker_append_elf_relos(struct bpf_linker *linker, struct src_obj *obj)$/;"	f	file:
linker_append_elf_sym	linker.c	/^static int linker_append_elf_sym(struct bpf_linker *linker, struct src_obj *obj,$/;"	f	file:
linker_append_elf_syms	linker.c	/^static int linker_append_elf_syms(struct bpf_linker *linker, struct src_obj *obj)$/;"	f	file:
linker_append_sec_data	linker.c	/^static int linker_append_sec_data(struct bpf_linker *linker, struct src_obj *obj)$/;"	f	file:
linker_fixup_btf	linker.c	/^static int linker_fixup_btf(struct src_obj *obj)$/;"	f	file:
linker_load_obj_file	linker.c	/^static int linker_load_obj_file(struct bpf_linker *linker, const char *filename,$/;"	f	file:
linker_sanity_check_btf	linker.c	/^static int linker_sanity_check_btf(struct src_obj *obj)$/;"	f	file:
linker_sanity_check_btf_ext	linker.c	/^static int linker_sanity_check_btf_ext(struct src_obj *obj)$/;"	f	file:
linker_sanity_check_elf	linker.c	/^static int linker_sanity_check_elf(struct src_obj *obj)$/;"	f	file:
linker_sanity_check_elf_relos	linker.c	/^static int linker_sanity_check_elf_relos(struct src_obj *obj, struct src_sec *sec)$/;"	f	file:
linker_sanity_check_elf_symtab	linker.c	/^static int linker_sanity_check_elf_symtab(struct src_obj *obj, struct src_sec *sec)$/;"	f	file:
list	libbpf.c	/^	struct list_head list;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::list_head	file:
list	xsk.c	/^	struct list_head list;$/;"	m	struct:xsk_ctx	typeref:struct:xsk_ctx::list_head	file:
load_local_storage_btf	libbpf_probes.c	/^static int load_local_storage_btf(void)$/;"	f	file:
load_module_btfs	libbpf.c	/^static int load_module_btfs(struct bpf_object *obj)$/;"	f	file:
loaded	libbpf.c	/^	bool loaded;$/;"	m	struct:bpf_object	file:
loader_stack	gen_loader.c	/^struct loader_stack {$/;"	s	file:
loc_addr	usdt.c	/^	long loc_addr;$/;"	m	struct:usdt_note	file:
log_buf	bpf.h	/^	char *log_buf;$/;"	m	struct:bpf_btf_load_opts
log_buf	bpf.h	/^	char *log_buf;$/;"	m	struct:bpf_prog_load_opts
log_buf	build/usr/include/bpf/bpf.h	/^	char *log_buf;$/;"	m	struct:bpf_btf_load_opts
log_buf	build/usr/include/bpf/bpf.h	/^	char *log_buf;$/;"	m	struct:bpf_prog_load_opts
log_buf	build/usr/include/bpf/skel_internal.h	/^	__u64 log_buf;$/;"	m	struct:bpf_loader_ctx
log_buf	libbpf.c	/^	char *log_buf;$/;"	m	struct:bpf_object	file:
log_buf	libbpf.c	/^	char *log_buf;$/;"	m	struct:bpf_program	file:
log_buf	skel_internal.h	/^	__u64 log_buf;$/;"	m	struct:bpf_loader_ctx
log_level	bpf.h	/^	__u32 log_level;$/;"	m	struct:bpf_btf_load_opts
log_level	bpf.h	/^	__u32 log_level;$/;"	m	struct:bpf_load_program_attr
log_level	bpf.h	/^	__u32 log_level;$/;"	m	struct:bpf_prog_load_opts
log_level	bpf_gen_internal.h	/^	int log_level;$/;"	m	struct:bpf_gen
log_level	build/usr/include/bpf/bpf.h	/^	__u32 log_level;$/;"	m	struct:bpf_btf_load_opts
log_level	build/usr/include/bpf/bpf.h	/^	__u32 log_level;$/;"	m	struct:bpf_load_program_attr
log_level	build/usr/include/bpf/bpf.h	/^	__u32 log_level;$/;"	m	struct:bpf_prog_load_opts
log_level	build/usr/include/bpf/libbpf.h	/^	int log_level;$/;"	m	struct:bpf_object_load_attr
log_level	build/usr/include/bpf/libbpf.h	/^	int log_level;$/;"	m	struct:bpf_prog_load_attr
log_level	build/usr/include/bpf/skel_internal.h	/^	__u32 log_level;$/;"	m	struct:bpf_loader_ctx
log_level	libbpf.c	/^	__u32 log_level;$/;"	m	struct:bpf_object	file:
log_level	libbpf.c	/^	__u32 log_level;$/;"	m	struct:bpf_program	file:
log_level	libbpf.h	/^	int log_level;$/;"	m	struct:bpf_object_load_attr
log_level	libbpf.h	/^	int log_level;$/;"	m	struct:bpf_prog_load_attr
log_level	skel_internal.h	/^	__u32 log_level;$/;"	m	struct:bpf_loader_ctx
log_size	bpf.h	/^	__u32 log_size;$/;"	m	struct:bpf_btf_load_opts
log_size	bpf.h	/^	__u32 log_size;$/;"	m	struct:bpf_prog_load_opts
log_size	build/usr/include/bpf/bpf.h	/^	__u32 log_size;$/;"	m	struct:bpf_btf_load_opts
log_size	build/usr/include/bpf/bpf.h	/^	__u32 log_size;$/;"	m	struct:bpf_prog_load_opts
log_size	build/usr/include/bpf/skel_internal.h	/^	__u32 log_size;$/;"	m	struct:bpf_loader_ctx
log_size	libbpf.c	/^	size_t log_size;$/;"	m	struct:bpf_object	file:
log_size	libbpf.c	/^	size_t log_size;$/;"	m	struct:bpf_program	file:
log_size	skel_internal.h	/^	__u32 log_size;$/;"	m	struct:bpf_loader_ctx
lost	libbpf.c	/^	uint64_t lost;$/;"	m	struct:perf_sample_lost	file:
lost_cb	build/usr/include/bpf/libbpf.h	/^			perf_buffer_lost_fn lost_cb;$/;"	m	struct:perf_buffer_opts::__anon23::__anon24
lost_cb	libbpf.c	/^	perf_buffer_lost_fn lost_cb;$/;"	m	struct:perf_buffer	file:
lost_cb	libbpf.c	/^	perf_buffer_lost_fn lost_cb;$/;"	m	struct:perf_buffer_params	file:
lost_cb	libbpf.h	/^			perf_buffer_lost_fn lost_cb;$/;"	m	struct:perf_buffer_opts::__anon5::__anon6
lp	btf_dump.c	/^	unsigned long long lp;$/;"	m	union:ptr_data	file:
magic	libbpf_internal.h	/^	__u16	magic;$/;"	m	struct:btf_ext_header
make_parent_dir	libbpf.c	/^static int make_parent_dir(const char *path)$/;"	f	file:
map	btf.c	/^	__u32 *map;$/;"	m	struct:btf_dedup	file:
map	build/usr/include/bpf/libbpf.h	/^	struct bpf_map **map;$/;"	m	struct:bpf_map_skeleton	typeref:struct:bpf_map_skeleton::bpf_map
map	build/usr/include/bpf/libbpf.h	/^	struct bpf_map **map;$/;"	m	struct:bpf_var_skeleton	typeref:struct:bpf_var_skeleton::bpf_map
map	libbpf.h	/^	struct bpf_map **map;$/;"	m	struct:bpf_map_skeleton	typeref:struct:bpf_map_skeleton::bpf_map
map	libbpf.h	/^	struct bpf_map **map;$/;"	m	struct:bpf_var_skeleton	typeref:struct:bpf_var_skeleton::bpf_map
map_cnt	build/usr/include/bpf/libbpf.h	/^	int map_cnt;$/;"	m	struct:bpf_object_skeleton
map_cnt	build/usr/include/bpf/libbpf.h	/^	int map_cnt;$/;"	m	struct:bpf_object_subskeleton
map_cnt	libbpf.h	/^	int map_cnt;$/;"	m	struct:bpf_object_skeleton
map_cnt	libbpf.h	/^	int map_cnt;$/;"	m	struct:bpf_object_subskeleton
map_def_parts	libbpf_internal.h	/^enum map_def_parts {$/;"	g
map_defs_match	linker.c	/^static bool map_defs_match(const char *sym_name,$/;"	f	file:
map_extra	bpf.h	/^	__u64 map_extra;$/;"	m	struct:bpf_map_create_opts
map_extra	build/usr/include/bpf/bpf.h	/^	__u64 map_extra;$/;"	m	struct:bpf_map_create_opts
map_extra	libbpf.c	/^	__u64 map_extra;$/;"	m	struct:bpf_map	file:
map_extra	libbpf_internal.h	/^	__u64 map_extra;$/;"	m	struct:btf_map_def
map_fd	build/usr/include/bpf/skel_internal.h	/^	int map_fd;$/;"	m	struct:bpf_map_desc
map_fd	libbpf.c	/^	int map_fd; \/* BPF_MAP_TYPE_PERF_EVENT_ARRAY BPF map FD *\/$/;"	m	struct:perf_buffer	file:
map_fd	ringbuf.c	/^	int map_fd;$/;"	m	struct:ring	file:
map_fd	skel_internal.h	/^	int map_fd;$/;"	m	struct:bpf_map_desc
map_flags	bpf.h	/^	__u32 map_flags;$/;"	m	struct:bpf_create_map_attr
map_flags	bpf.h	/^	__u32 map_flags;$/;"	m	struct:bpf_map_create_opts
map_flags	bpf_helpers.h	/^	unsigned int map_flags;$/;"	m	struct:bpf_map_def
map_flags	build/usr/include/bpf/bpf.h	/^	__u32 map_flags;$/;"	m	struct:bpf_create_map_attr
map_flags	build/usr/include/bpf/bpf.h	/^	__u32 map_flags;$/;"	m	struct:bpf_map_create_opts
map_flags	build/usr/include/bpf/bpf_helpers.h	/^	unsigned int map_flags;$/;"	m	struct:bpf_map_def
map_flags	build/usr/include/bpf/libbpf.h	/^	unsigned int map_flags;$/;"	m	struct:bpf_map_def
map_flags	libbpf.h	/^	unsigned int map_flags;$/;"	m	struct:bpf_map_def
map_flags	libbpf_internal.h	/^	__u32 map_flags;$/;"	m	struct:btf_map_def
map_idx	libbpf.c	/^			int map_idx;$/;"	m	struct:reloc_desc::__anon39::__anon40	file:
map_ifindex	bpf.h	/^	__u32 map_ifindex;$/;"	m	struct:bpf_create_map_attr
map_ifindex	bpf.h	/^	__u32 map_ifindex;$/;"	m	struct:bpf_map_create_opts
map_ifindex	build/usr/include/bpf/bpf.h	/^	__u32 map_ifindex;$/;"	m	struct:bpf_create_map_attr
map_ifindex	build/usr/include/bpf/bpf.h	/^	__u32 map_ifindex;$/;"	m	struct:bpf_map_create_opts
map_ifindex	libbpf.c	/^	int map_ifindex;$/;"	m	struct:bpf_map	file:
map_is_reuse_compat	libbpf.c	/^static bool map_is_reuse_compat(const struct bpf_map *map, int map_fd)$/;"	f	file:
map_key	libbpf.c	/^	int map_key;$/;"	m	struct:perf_cpu_buf	file:
map_keys	build/usr/include/bpf/libbpf.h	/^	int *map_keys;$/;"	m	struct:perf_buffer_raw_opts
map_keys	libbpf.c	/^	int *map_keys;$/;"	m	struct:perf_buffer_params	file:
map_keys	libbpf.h	/^	int *map_keys;$/;"	m	struct:perf_buffer_raw_opts
map_set_def_max_entries	libbpf.c	/^static int map_set_def_max_entries(struct bpf_map *map)$/;"	f	file:
map_skel_sz	build/usr/include/bpf/libbpf.h	/^	int map_skel_sz; \/* sizeof(struct bpf_map_skeleton) *\/$/;"	m	struct:bpf_object_skeleton
map_skel_sz	build/usr/include/bpf/libbpf.h	/^	int map_skel_sz; \/* sizeof(struct bpf_map_skeleton) *\/$/;"	m	struct:bpf_object_subskeleton
map_skel_sz	libbpf.h	/^	int map_skel_sz; \/* sizeof(struct bpf_map_skeleton) *\/$/;"	m	struct:bpf_object_skeleton
map_skel_sz	libbpf.h	/^	int map_skel_sz; \/* sizeof(struct bpf_map_skeleton) *\/$/;"	m	struct:bpf_object_subskeleton
map_type	bpf.h	/^	enum bpf_map_type map_type;$/;"	m	struct:bpf_create_map_attr	typeref:enum:bpf_create_map_attr::bpf_map_type
map_type	build/usr/include/bpf/bpf.h	/^	enum bpf_map_type map_type;$/;"	m	struct:bpf_create_map_attr	typeref:enum:bpf_create_map_attr::bpf_map_type
map_type	libbpf_internal.h	/^	__u32 map_type;$/;"	m	struct:btf_map_def
map_uses_real_name	libbpf.c	/^static bool map_uses_real_name(const struct bpf_map *map)$/;"	f	file:
maps	build/usr/include/bpf/libbpf.h	/^	struct bpf_map_skeleton *maps;$/;"	m	struct:bpf_object_skeleton	typeref:struct:bpf_object_skeleton::bpf_map_skeleton
maps	build/usr/include/bpf/libbpf.h	/^	struct bpf_map_skeleton *maps;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_map_skeleton
maps	libbpf.c	/^	struct bpf_map *maps;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::bpf_map	file:
maps	libbpf.h	/^	struct bpf_map_skeleton *maps;$/;"	m	struct:bpf_object_skeleton	typeref:struct:bpf_object_skeleton::bpf_map_skeleton
maps	libbpf.h	/^	struct bpf_map_skeleton *maps;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_map_skeleton
maps_cap	libbpf.c	/^	size_t maps_cap;$/;"	m	struct:bpf_object	file:
maps_shndx	libbpf.c	/^	int maps_shndx;$/;"	m	struct:elf_state	file:
mark_btf_static	libbpf.c	/^	bool mark_btf_static;$/;"	m	struct:bpf_program	file:
mask	ringbuf.c	/^	unsigned long mask;$/;"	m	struct:ring	file:
max	libbpf_internal.h	89;"	d
max_entries	bpf.h	/^	__u32 max_entries;$/;"	m	struct:bpf_create_map_attr
max_entries	bpf_helpers.h	/^	unsigned int max_entries;$/;"	m	struct:bpf_map_def
max_entries	build/usr/include/bpf/bpf.h	/^	__u32 max_entries;$/;"	m	struct:bpf_create_map_attr
max_entries	build/usr/include/bpf/bpf_helpers.h	/^	unsigned int max_entries;$/;"	m	struct:bpf_map_def
max_entries	build/usr/include/bpf/libbpf.h	/^	unsigned int max_entries;$/;"	m	struct:bpf_map_def
max_entries	build/usr/include/bpf/skel_internal.h	/^	__u32 max_entries;$/;"	m	struct:bpf_map_desc
max_entries	libbpf.h	/^	unsigned int max_entries;$/;"	m	struct:bpf_map_def
max_entries	libbpf_internal.h	/^	__u32 max_entries;$/;"	m	struct:btf_map_def
max_entries	skel_internal.h	/^	__u32 max_entries;$/;"	m	struct:bpf_map_desc
maxlen	nlattr.h	/^	uint16_t	maxlen;$/;"	m	struct:libbpf_nla_policy
memlock_bumped	bpf.c	/^static bool memlock_bumped;$/;"	v	file:
memlock_rlim	bpf.c	/^static rlim_t memlock_rlim = RLIM_INFINITY;$/;"	v	file:
min	libbpf_internal.h	86;"	d
min_rec_size	btf.c	/^	__u32 min_rec_size;$/;"	m	struct:btf_ext_sec_setup_param	file:
minlen	nlattr.h	/^	uint16_t	minlen;$/;"	m	struct:libbpf_nla_policy
missing_base_types	btf_dump.c	/^static const char *missing_base_types[][2] = {$/;"	v	file:
mmap_size	libbpf.c	/^	size_t mmap_size;$/;"	m	struct:perf_buffer	file:
mmaped	build/usr/include/bpf/libbpf.h	/^	void **mmaped;$/;"	m	struct:bpf_map_skeleton
mmaped	libbpf.c	/^	void *mmaped;$/;"	m	struct:bpf_map	file:
mmaped	libbpf.h	/^	void **mmaped;$/;"	m	struct:bpf_map_skeleton
module_btf	libbpf.c	/^struct module_btf {$/;"	s	file:
move_blob2blob	gen_loader.c	/^static void move_blob2blob(struct bpf_gen *gen, int off, int size, int blob_off)$/;"	f	file:
move_blob2ctx	gen_loader.c	/^static void move_blob2ctx(struct bpf_gen *gen, int ctx_off, int size, int blob_off)$/;"	f	file:
move_ctx2blob	gen_loader.c	/^static void move_ctx2blob(struct bpf_gen *gen, int off, int size, int ctx_off,$/;"	f	file:
move_stack2blob	gen_loader.c	/^static void move_stack2blob(struct bpf_gen *gen, int off, int size, int stack_off)$/;"	f	file:
move_stack2ctx	gen_loader.c	/^static void move_stack2ctx(struct bpf_gen *gen, int ctx_off, int size, int stack_off)$/;"	f	file:
msg	Makefile	/^	msg = @printf '  %-8s %s%s\\n' "$(1)" "$(2)" "$(if $(3), $(3))";$/;"	m
msg	Makefile	/^	msg =$/;"	m
name	bpf.h	/^	const char *name;$/;"	m	struct:bpf_create_map_attr
name	bpf.h	/^	const char *name;$/;"	m	struct:bpf_load_program_attr
name	bpf_gen_internal.h	/^	const char *name;$/;"	m	struct:ksym_desc
name	bpf_gen_internal.h	/^	const char *name;$/;"	m	struct:ksym_relo_desc
name	build/usr/include/bpf/bpf.h	/^	const char *name;$/;"	m	struct:bpf_create_map_attr
name	build/usr/include/bpf/bpf.h	/^	const char *name;$/;"	m	struct:bpf_load_program_attr
name	build/usr/include/bpf/libbpf.h	/^	const char *name;$/;"	m	struct:bpf_map_skeleton
name	build/usr/include/bpf/libbpf.h	/^	const char *name;$/;"	m	struct:bpf_object_skeleton
name	build/usr/include/bpf/libbpf.h	/^	const char *name;$/;"	m	struct:bpf_prog_skeleton
name	build/usr/include/bpf/libbpf.h	/^	const char *name;$/;"	m	struct:bpf_var_skeleton
name	libbpf.c	/^	char *name;$/;"	m	struct:bpf_map	file:
name	libbpf.c	/^	char *name;$/;"	m	struct:bpf_program	file:
name	libbpf.c	/^	char *name;$/;"	m	struct:module_btf	file:
name	libbpf.c	/^	char name[BPF_OBJ_NAME_LEN];$/;"	m	struct:bpf_object	file:
name	libbpf.c	/^	const char *name;$/;"	m	struct:extern_desc	file:
name	libbpf.h	/^	const char *name;$/;"	m	struct:bpf_map_skeleton
name	libbpf.h	/^	const char *name;$/;"	m	struct:bpf_object_skeleton
name	libbpf.h	/^	const char *name;$/;"	m	struct:bpf_prog_skeleton
name	libbpf.h	/^	const char *name;$/;"	m	struct:bpf_var_skeleton
name	relo_core.h	/^	const char *name;	\/* field name or NULL for array accessor *\/$/;"	m	struct:bpf_core_accessor
name	usdt.c	/^	const char *name;$/;"	m	struct:usdt_note	file:
name_off	linker.c	/^	int name_off;$/;"	m	struct:glob_sym	file:
name_resolved	btf_dump.c	/^	__u8 name_resolved: 1;$/;"	m	struct:btf_dump_type_aux_state	file:
netlink_recvmsg	netlink.c	/^static int netlink_recvmsg(int sock, struct msghdr *mhdr, int flags)$/;"	f	file:
netns_cookie	xsk.c	/^	__u64 netns_cookie;$/;"	m	struct:xsk_ctx	file:
new_insn_cnt	build/usr/include/bpf/libbpf.h	/^	int new_insn_cnt;$/;"	m	struct:bpf_prog_prep_result
new_insn_cnt	libbpf.h	/^	int new_insn_cnt;$/;"	m	struct:bpf_prog_prep_result
new_insn_ptr	build/usr/include/bpf/libbpf.h	/^	struct bpf_insn *new_insn_ptr;$/;"	m	struct:bpf_prog_prep_result	typeref:struct:bpf_prog_prep_result::bpf_insn
new_insn_ptr	libbpf.h	/^	struct bpf_insn *new_insn_ptr;$/;"	m	struct:bpf_prog_prep_result	typeref:struct:bpf_prog_prep_result::bpf_insn
new_sz	relo_core.h	/^	__u32 new_sz;$/;"	m	struct:bpf_core_relo_res
new_type_id	relo_core.h	/^	__u32 new_type_id;$/;"	m	struct:bpf_core_relo_res
new_val	relo_core.h	/^	__u32 new_val;$/;"	m	struct:bpf_core_relo_res
next	hashmap.h	/^	struct hashmap_entry *next;$/;"	m	struct:hashmap_entry	typeref:struct:hashmap_entry::hashmap_entry
next_free_spec_id	usdt.c	/^	size_t next_free_spec_id;$/;"	m	struct:usdt_manager	file:
nh	nlattr.h	/^	struct nlmsghdr nh;$/;"	m	struct:libbpf_nla_req	typeref:struct:libbpf_nla_req::nlmsghdr
nla_attr_minlen	nlattr.c	/^static uint16_t nla_attr_minlen[LIBBPF_NLA_TYPE_MAX+1] = {$/;"	v	file:
nla_data	nlattr.h	/^static inline struct nlattr *nla_data(struct nlattr *nla)$/;"	f
nla_next	nlattr.c	/^static struct nlattr *nla_next(const struct nlattr *nla, int *remaining)$/;"	f	file:
nla_ok	nlattr.c	/^static int nla_ok(const struct nlattr *nla, int remaining)$/;"	f	file:
nla_type	nlattr.c	/^static int nla_type(const struct nlattr *nla)$/;"	f	file:
nlattr_add	nlattr.h	/^static inline int nlattr_add(struct libbpf_nla_req *req, int type,$/;"	f
nlattr_begin_nested	nlattr.h	/^static inline struct nlattr *nlattr_begin_nested(struct libbpf_nla_req *req, int type)$/;"	f
nlattr_end_nested	nlattr.h	/^static inline void nlattr_end_nested(struct libbpf_nla_req *req,$/;"	f
nlmsg_len	nlattr.c	/^static inline int nlmsg_len(const struct nlmsghdr *nlh)$/;"	f	file:
nr	libbpf.c	/^		int nr;$/;"	m	struct:bpf_program::__anon41	file:
nr_extern	libbpf.c	/^	int nr_extern;$/;"	m	struct:bpf_object	file:
nr_fd_array	bpf_gen_internal.h	/^	int nr_fd_array;$/;"	m	struct:bpf_gen
nr_jited_func	bpf_prog_linfo.c	/^	__u32 nr_jited_func;$/;"	m	struct:bpf_prog_linfo	file:
nr_jited_linfo_per_func	bpf_prog_linfo.c	/^	__u32 *nr_jited_linfo_per_func;$/;"	m	struct:bpf_prog_linfo	file:
nr_ksyms	bpf_gen_internal.h	/^	__u32 nr_ksyms;$/;"	m	struct:bpf_gen
nr_linfo	bpf_prog_linfo.c	/^	__u32 nr_linfo;$/;"	m	struct:bpf_prog_linfo	file:
nr_maps	bpf_gen_internal.h	/^	__u32 nr_maps;$/;"	m	struct:bpf_gen
nr_maps	libbpf.c	/^	size_t nr_maps;$/;"	m	struct:bpf_object	file:
nr_programs	libbpf.c	/^	size_t nr_programs;$/;"	m	struct:bpf_object	file:
nr_progs	bpf_gen_internal.h	/^	__u32 nr_progs;$/;"	m	struct:bpf_gen
nr_reloc	libbpf.c	/^	int nr_reloc;$/;"	m	struct:bpf_program	file:
nr_types	btf.c	/^	__u32 nr_types;$/;"	m	struct:btf	file:
num_info	libbpf_internal.h	/^	__u32	num_info;$/;"	m	struct:btf_ext_info_sec
numa_node	bpf.h	/^	__u32 numa_node;$/;"	m	struct:bpf_create_map_attr
numa_node	bpf.h	/^	__u32 numa_node;$/;"	m	struct:bpf_map_create_opts
numa_node	build/usr/include/bpf/bpf.h	/^	__u32 numa_node;$/;"	m	struct:bpf_create_map_attr
numa_node	build/usr/include/bpf/bpf.h	/^	__u32 numa_node;$/;"	m	struct:bpf_map_create_opts
numa_node	libbpf.c	/^	__u32 numa_node;$/;"	m	struct:bpf_map	file:
numa_node	libbpf_internal.h	/^	__u32 numa_node;$/;"	m	struct:btf_map_def
obj	build/usr/include/bpf/libbpf.h	/^	const struct bpf_object *obj;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_object
obj	build/usr/include/bpf/libbpf.h	/^	struct bpf_object **obj;$/;"	m	struct:bpf_object_skeleton	typeref:struct:bpf_object_skeleton::bpf_object
obj	build/usr/include/bpf/libbpf.h	/^	struct bpf_object *obj;$/;"	m	struct:bpf_object_load_attr	typeref:struct:bpf_object_load_attr::bpf_object
obj	libbpf.c	/^	struct bpf_object *obj;$/;"	m	struct:bpf_map	typeref:struct:bpf_map::bpf_object	file:
obj	libbpf.c	/^	struct bpf_object *obj;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::bpf_object	file:
obj	libbpf.h	/^	const struct bpf_object *obj;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_object
obj	libbpf.h	/^	struct bpf_object **obj;$/;"	m	struct:bpf_object_skeleton	typeref:struct:bpf_object_skeleton::bpf_object
obj	libbpf.h	/^	struct bpf_object *obj;$/;"	m	struct:bpf_object_load_attr	typeref:struct:bpf_object_load_attr::bpf_object
obj_buf	libbpf.c	/^	const void *obj_buf;$/;"	m	struct:elf_state	file:
obj_buf_sz	libbpf.c	/^	size_t obj_buf_sz;$/;"	m	struct:elf_state	file:
obj_needs_vmlinux_btf	libbpf.c	/^static bool obj_needs_vmlinux_btf(const struct bpf_object *obj)$/;"	f	file:
object_name	build/usr/include/bpf/libbpf.h	/^	const char *object_name;$/;"	m	struct:bpf_object_open_opts
object_name	libbpf.h	/^	const char *object_name;$/;"	m	struct:bpf_object_open_opts
off	bpf_gen_internal.h	/^		int off;$/;"	m	union:ksym_desc::__anon1
off	btf.c	/^	__u32 off;$/;"	m	struct:btf_ext_sec_setup_param	file:
offset	build/usr/include/bpf/libbpf.h	/^	size_t offset;$/;"	m	struct:bpf_kprobe_opts
offset	libbpf.h	/^	size_t offset;$/;"	m	struct:bpf_kprobe_opts
offset	usdt.c	/^	long offset;$/;"	m	struct:elf_seg	file:
offsetof	bpf_helpers.h	68;"	d
offsetof	build/usr/include/bpf/bpf_helpers.h	68;"	d
offsetofend	build/usr/include/bpf/skel_internal.h	215;"	d
offsetofend	libbpf_internal.h	92;"	d
offsetofend	skel_internal.h	215;"	d
old_fd	build/usr/include/bpf/libbpf.h	/^	int old_fd;$/;"	m	struct:bpf_xdp_set_link_opts
old_fd	libbpf.h	/^	int old_fd;$/;"	m	struct:bpf_xdp_set_link_opts
old_prog_fd	bpf.h	/^	__u32 old_prog_fd; \/* expected old program FD *\/$/;"	m	struct:bpf_link_update_opts
old_prog_fd	build/usr/include/bpf/bpf.h	/^	__u32 old_prog_fd; \/* expected old program FD *\/$/;"	m	struct:bpf_link_update_opts
old_prog_fd	build/usr/include/bpf/libbpf.h	/^	int old_prog_fd;$/;"	m	struct:bpf_xdp_attach_opts
old_prog_fd	libbpf.h	/^	int old_prog_fd;$/;"	m	struct:bpf_xdp_attach_opts
opts	bpf_gen_internal.h	/^	struct gen_loader_opts *opts;$/;"	m	struct:bpf_gen	typeref:struct:bpf_gen::gen_loader_opts
opts	btf.c	/^	struct btf_dedup_opts opts;$/;"	m	struct:btf_dedup	typeref:struct:btf_dedup::btf_dedup_opts	file:
opts	netlink.c	/^	struct bpf_tc_opts *opts;$/;"	m	struct:bpf_cb_ctx	typeref:struct:bpf_cb_ctx::bpf_tc_opts	file:
order_state	btf_dump.c	/^	enum btf_dump_type_order_state order_state: 2;$/;"	m	struct:btf_dump_type_aux_state	typeref:enum:btf_dump_type_aux_state::btf_dump_type_order_state	file:
orig_gpr2	bpf_tracing.h	/^	unsigned long orig_gpr2;$/;"	m	struct:pt_regs___s390
orig_gpr2	build/usr/include/bpf/bpf_tracing.h	/^	unsigned long orig_gpr2;$/;"	m	struct:pt_regs___s390
orig_sz	relo_core.h	/^	__u32 orig_sz;$/;"	m	struct:bpf_core_relo_res
orig_type_id	relo_core.h	/^	__u32 orig_type_id;$/;"	m	struct:bpf_core_relo_res
orig_val	relo_core.h	/^	__u32 orig_val;$/;"	m	struct:bpf_core_relo_res
orig_x0	bpf_tracing.h	/^	unsigned long orig_x0;$/;"	m	struct:pt_regs___arm64
orig_x0	build/usr/include/bpf/bpf_tracing.h	/^	unsigned long orig_x0;$/;"	m	struct:pt_regs___arm64
outstanding_tx	xsk.c	/^	__u64 outstanding_tx;$/;"	m	struct:xsk_socket	file:
p	btf_dump.c	/^	unsigned int p;$/;"	m	union:ptr_data	file:
page_size	libbpf.c	/^	size_t page_size;$/;"	m	struct:perf_buffer	file:
page_size	ringbuf.c	/^	size_t page_size;$/;"	m	struct:ring_buffer	file:
parent	build/usr/include/bpf/libbpf.h	/^	__u32 parent;$/;"	m	struct:bpf_tc_hook
parent	libbpf.h	/^	__u32 parent;$/;"	m	struct:bpf_tc_hook
parse_btf_map_def	libbpf.c	/^int parse_btf_map_def(const char *map_name, struct btf *btf,$/;"	f
parse_cpu_mask_file	libbpf.c	/^int parse_cpu_mask_file(const char *fcpu, bool **mask, int *mask_sz)$/;"	f
parse_cpu_mask_str	libbpf.c	/^int parse_cpu_mask_str(const char *s, bool **mask, int *mask_sz)$/;"	f
parse_elf_segs	usdt.c	/^static int parse_elf_segs(Elf *elf, const char *path, struct elf_seg **segs, size_t *seg_cnt)$/;"	f	file:
parse_lib_segs	usdt.c	/^static int parse_lib_segs(int pid, const char *lib_path, struct elf_seg **segs, size_t *seg_cnt)$/;"	f	file:
parse_u64	libbpf.c	/^static int parse_u64(const char *value, __u64 *res)$/;"	f	file:
parse_uint_from_file	libbpf.c	/^static int parse_uint_from_file(const char *file, const char *fmt)$/;"	f	file:
parse_usdt_arg	usdt.c	/^static int parse_usdt_arg(const char *arg_str, int arg_num, struct usdt_arg_spec *arg)$/;"	f	file:
parse_usdt_note	usdt.c	/^static int parse_usdt_note(Elf *elf, const char *path, long base_addr,$/;"	f	file:
parse_usdt_spec	usdt.c	/^static int parse_usdt_spec(struct usdt_spec *spec, const struct usdt_note *note, __u64 usdt_cookie)$/;"	f	file:
parts	libbpf_internal.h	/^	enum map_def_parts parts;$/;"	m	struct:btf_map_def	typeref:enum:btf_map_def::map_def_parts
patch_log	libbpf.c	/^static void patch_log(char *buf, size_t buf_sz, size_t log_sz,$/;"	f	file:
path	libbpf.c	/^	char path[];$/;"	m	struct:bpf_object	file:
pattern	libbpf.c	/^	const char *pattern;$/;"	m	struct:kprobe_multi_resolve	file:
pb	libbpf.c	/^	struct perf_buffer *pb;$/;"	m	struct:perf_cpu_buf	typeref:struct:perf_cpu_buf::perf_buffer	file:
perf_buffer	libbpf.c	/^struct perf_buffer {$/;"	s	file:
perf_buffer__buffer_cnt	libbpf.c	/^size_t perf_buffer__buffer_cnt(const struct perf_buffer *pb)$/;"	f
perf_buffer__buffer_fd	libbpf.c	/^int perf_buffer__buffer_fd(const struct perf_buffer *pb, size_t buf_idx)$/;"	f
perf_buffer__consume	libbpf.c	/^int perf_buffer__consume(struct perf_buffer *pb)$/;"	f
perf_buffer__consume_buffer	libbpf.c	/^int perf_buffer__consume_buffer(struct perf_buffer *pb, size_t buf_idx)$/;"	f
perf_buffer__epoll_fd	libbpf.c	/^int perf_buffer__epoll_fd(const struct perf_buffer *pb)$/;"	f
perf_buffer__free	libbpf.c	/^void perf_buffer__free(struct perf_buffer *pb)$/;"	f
perf_buffer__free_cpu_buf	libbpf.c	/^static void perf_buffer__free_cpu_buf(struct perf_buffer *pb,$/;"	f	file:
perf_buffer__new	build/usr/include/bpf/libbpf.h	1312;"	d
perf_buffer__new	libbpf.h	1312;"	d
perf_buffer__new_deprecated	libbpf.c	/^struct perf_buffer *perf_buffer__new_deprecated(int map_fd, size_t page_cnt,$/;"	f
perf_buffer__new_raw	build/usr/include/bpf/libbpf.h	1371;"	d
perf_buffer__new_raw	libbpf.h	1371;"	d
perf_buffer__new_raw_deprecated	libbpf.c	/^struct perf_buffer *perf_buffer__new_raw_deprecated(int map_fd, size_t page_cnt,$/;"	f
perf_buffer__new_raw_v0_6_0	libbpf.c	/^struct perf_buffer *perf_buffer__new_raw_v0_6_0(int map_fd, size_t page_cnt,$/;"	f
perf_buffer__new_v0_6_0	libbpf.c	/^struct perf_buffer *perf_buffer__new_v0_6_0(int map_fd, size_t page_cnt,$/;"	f
perf_buffer__open_cpu_buf	libbpf.c	/^perf_buffer__open_cpu_buf(struct perf_buffer *pb, struct perf_event_attr *attr,$/;"	f	file:
perf_buffer__poll	libbpf.c	/^int perf_buffer__poll(struct perf_buffer *pb, int timeout_ms)$/;"	f
perf_buffer__process_record	libbpf.c	/^perf_buffer__process_record(struct perf_event_header *e, void *ctx)$/;"	f	file:
perf_buffer__process_records	libbpf.c	/^static int perf_buffer__process_records(struct perf_buffer *pb,$/;"	f	file:
perf_buffer_event_fn	build/usr/include/bpf/libbpf.h	/^(*perf_buffer_event_fn)(void *ctx, int cpu, struct perf_event_header *event);$/;"	t	typeref:enum:perf_buffer_event_fn
perf_buffer_event_fn	libbpf.h	/^(*perf_buffer_event_fn)(void *ctx, int cpu, struct perf_event_header *event);$/;"	t	typeref:enum:perf_buffer_event_fn
perf_buffer_lost_fn	build/usr/include/bpf/libbpf.h	/^typedef void (*perf_buffer_lost_fn)(void *ctx, int cpu, __u64 cnt);$/;"	t
perf_buffer_lost_fn	libbpf.h	/^typedef void (*perf_buffer_lost_fn)(void *ctx, int cpu, __u64 cnt);$/;"	t
perf_buffer_opts	build/usr/include/bpf/libbpf.h	/^struct perf_buffer_opts {$/;"	s
perf_buffer_opts	libbpf.h	/^struct perf_buffer_opts {$/;"	s
perf_buffer_opts__last_field	build/usr/include/bpf/libbpf.h	1284;"	d
perf_buffer_opts__last_field	libbpf.h	1284;"	d
perf_buffer_params	libbpf.c	/^struct perf_buffer_params {$/;"	s	file:
perf_buffer_raw_opts	build/usr/include/bpf/libbpf.h	/^struct perf_buffer_raw_opts {$/;"	s
perf_buffer_raw_opts	libbpf.h	/^struct perf_buffer_raw_opts {$/;"	s
perf_buffer_raw_opts__last_field	build/usr/include/bpf/libbpf.h	1355;"	d
perf_buffer_raw_opts__last_field	libbpf.h	1355;"	d
perf_buffer_sample_fn	build/usr/include/bpf/libbpf.h	/^typedef void (*perf_buffer_sample_fn)(void *ctx, int cpu,$/;"	t
perf_buffer_sample_fn	libbpf.h	/^typedef void (*perf_buffer_sample_fn)(void *ctx, int cpu,$/;"	t
perf_cpu_buf	libbpf.c	/^struct perf_cpu_buf {$/;"	s	file:
perf_event	bpf.h	/^		} perf_event;$/;"	m	union:bpf_link_create_opts::__anon13	typeref:struct:bpf_link_create_opts::__anon13::__anon14
perf_event	build/usr/include/bpf/bpf.h	/^		} perf_event;$/;"	m	union:bpf_link_create_opts::__anon31	typeref:struct:bpf_link_create_opts::__anon31::__anon32
perf_event_fd	libbpf.c	/^	int perf_event_fd;$/;"	m	struct:bpf_link_perf	file:
perf_event_kprobe_open_legacy	libbpf.c	/^static int perf_event_kprobe_open_legacy(const char *probe_name, bool retprobe,$/;"	f	file:
perf_event_open_probe	libbpf.c	/^static int perf_event_open_probe(bool uprobe, bool retprobe, const char *name,$/;"	f	file:
perf_event_open_tracepoint	libbpf.c	/^static int perf_event_open_tracepoint(const char *tp_category,$/;"	f	file:
perf_event_read_simple	libbpf.c	/^perf_event_read_simple(void *mmap_mem, size_t mmap_size, size_t page_size,$/;"	f	file:
perf_event_uprobe_open_legacy	libbpf.c	/^static int perf_event_uprobe_open_legacy(const char *probe_name, bool retprobe,$/;"	f	file:
perf_sample_lost	libbpf.c	/^struct perf_sample_lost {$/;"	s	file:
perf_sample_raw	libbpf.c	/^struct perf_sample_raw {$/;"	s	file:
pfd	build/usr/include/bpf/libbpf.h	/^	int *pfd;$/;"	m	struct:bpf_prog_prep_result
pfd	libbpf.h	/^	int *pfd;$/;"	m	struct:bpf_prog_prep_result
pfx	btf_dump.c	/^static const char *pfx(int lvl)$/;"	f	file:
pin_name	libbpf.c	/^	char *pin_name;$/;"	m	struct:bpf_program	file:
pin_path	libbpf.c	/^	char *pin_path;$/;"	m	struct:bpf_map	file:
pin_path	libbpf_internal.h	/^	char *pin_path;		\/* NULL, if not pinned *\/$/;"	m	struct:bpf_link
pin_root_path	build/usr/include/bpf/libbpf.h	/^	const char *pin_root_path;$/;"	m	struct:bpf_object_open_opts
pin_root_path	libbpf.h	/^	const char *pin_root_path;$/;"	m	struct:bpf_object_open_opts
pinned	libbpf.c	/^	bool pinned;$/;"	m	struct:bpf_map	file:
pinning	libbpf_internal.h	/^	__u32 pinning;$/;"	m	struct:btf_map_def
poison	relo_core.h	/^	bool poison;$/;"	m	struct:bpf_core_relo_res
poison_map_ldimm64	libbpf.c	/^static void poison_map_ldimm64(struct bpf_program *prog, int relo_idx,$/;"	f	file:
populate_skeleton_maps	libbpf.c	/^static int populate_skeleton_maps(const struct bpf_object *obj,$/;"	f	file:
populate_skeleton_progs	libbpf.c	/^static int populate_skeleton_progs(const struct bpf_object *obj,$/;"	f	file:
pr_debug	libbpf_internal.h	157;"	d
pr_debug	relo_core.c	52;"	d	file:
pr_debug	relo_core.c	55;"	d	file:
pr_info	libbpf_internal.h	156;"	d
pr_info	relo_core.c	51;"	d	file:
pr_info	relo_core.c	54;"	d	file:
pr_perm_msg	libbpf.c	/^static void pr_perm_msg(int err)$/;"	f	file:
pr_warn	libbpf_internal.h	155;"	d
pr_warn	relo_core.c	50;"	d	file:
pr_warn	relo_core.c	53;"	d	file:
pr_warn_elf	linker.c	155;"	d	file:
preprocessor	libbpf.c	/^	bpf_program_prep_t preprocessor;$/;"	m	struct:bpf_program	file:
printf_fn	btf_dump.c	/^	btf_dump_printf_fn_t printf_fn;$/;"	m	struct:btf_dump	file:
priority	build/usr/include/bpf/libbpf.h	/^	__u32 priority;$/;"	m	struct:bpf_tc_opts
priority	libbpf.h	/^	__u32 priority;$/;"	m	struct:bpf_tc_opts
priv	libbpf.c	/^	void *priv;$/;"	m	struct:bpf_map	file:
priv	libbpf.c	/^	void *priv;$/;"	m	struct:bpf_object	file:
priv	libbpf.c	/^	void *priv;$/;"	m	struct:bpf_program	file:
probe	libbpf.c	/^	feature_probe_fn probe;$/;"	m	struct:kern_feature_desc	file:
probe_fd	libbpf.c	/^static int probe_fd(int fd)$/;"	f	file:
probe_kern_array_mmap	libbpf.c	/^static int probe_kern_array_mmap(void)$/;"	f	file:
probe_kern_bpf_cookie	libbpf.c	/^static int probe_kern_bpf_cookie(void)$/;"	f	file:
probe_kern_btf	libbpf.c	/^static int probe_kern_btf(void)$/;"	f	file:
probe_kern_btf_datasec	libbpf.c	/^static int probe_kern_btf_datasec(void)$/;"	f	file:
probe_kern_btf_decl_tag	libbpf.c	/^static int probe_kern_btf_decl_tag(void)$/;"	f	file:
probe_kern_btf_enum64	libbpf.c	/^static int probe_kern_btf_enum64(void)$/;"	f	file:
probe_kern_btf_float	libbpf.c	/^static int probe_kern_btf_float(void)$/;"	f	file:
probe_kern_btf_func	libbpf.c	/^static int probe_kern_btf_func(void)$/;"	f	file:
probe_kern_btf_func_global	libbpf.c	/^static int probe_kern_btf_func_global(void)$/;"	f	file:
probe_kern_btf_type_tag	libbpf.c	/^static int probe_kern_btf_type_tag(void)$/;"	f	file:
probe_kern_exp_attach_type	libbpf.c	/^static int probe_kern_exp_attach_type(void)$/;"	f	file:
probe_kern_global_data	libbpf.c	/^static int probe_kern_global_data(void)$/;"	f	file:
probe_kern_probe_read_kernel	libbpf.c	/^static int probe_kern_probe_read_kernel(void)$/;"	f	file:
probe_kern_prog_name	libbpf.c	/^static int probe_kern_prog_name(void)$/;"	f	file:
probe_map_create	libbpf_probes.c	/^static int probe_map_create(enum bpf_map_type map_type, __u32 ifindex)$/;"	f	file:
probe_memcg_account	bpf.c	/^int probe_memcg_account(void)$/;"	f
probe_module_btf	libbpf.c	/^static int probe_module_btf(void)$/;"	f	file:
probe_perf_link	libbpf.c	/^static int probe_perf_link(void)$/;"	f	file:
probe_prog_bind_map	libbpf.c	/^static int probe_prog_bind_map(void)$/;"	f	file:
probe_prog_load	libbpf_probes.c	/^static int probe_prog_load(enum bpf_prog_type prog_type,$/;"	f	file:
processed	netlink.c	/^	bool processed;$/;"	m	struct:bpf_cb_ctx	file:
producer	xsk.c	/^	__u64 producer;$/;"	m	struct:xdp_ring_offset_v1	file:
producer_pos	ringbuf.c	/^	unsigned long *producer_pos;$/;"	m	struct:ring	file:
prog	build/usr/include/bpf/libbpf.h	/^	struct bpf_program **prog;$/;"	m	struct:bpf_prog_skeleton	typeref:struct:bpf_prog_skeleton::bpf_program
prog	libbpf.h	/^	struct bpf_program **prog;$/;"	m	struct:bpf_prog_skeleton	typeref:struct:bpf_prog_skeleton::bpf_program
prog_attach_fn	build/usr/include/bpf/libbpf.h	/^	libbpf_prog_attach_fn_t prog_attach_fn;$/;"	m	struct:libbpf_prog_handler_opts
prog_attach_fn	libbpf.c	/^	libbpf_prog_attach_fn_t prog_attach_fn;$/;"	m	struct:bpf_sec_def	file:
prog_attach_fn	libbpf.h	/^	libbpf_prog_attach_fn_t prog_attach_fn;$/;"	m	struct:libbpf_prog_handler_opts
prog_btf_fd	bpf.h	/^	__u32 prog_btf_fd;$/;"	m	struct:bpf_load_program_attr
prog_btf_fd	bpf.h	/^	__u32 prog_btf_fd;$/;"	m	struct:bpf_prog_load_opts
prog_btf_fd	build/usr/include/bpf/bpf.h	/^	__u32 prog_btf_fd;$/;"	m	struct:bpf_load_program_attr
prog_btf_fd	build/usr/include/bpf/bpf.h	/^	__u32 prog_btf_fd;$/;"	m	struct:bpf_prog_load_opts
prog_cnt	build/usr/include/bpf/libbpf.h	/^	int prog_cnt;$/;"	m	struct:bpf_object_skeleton
prog_cnt	build/usr/include/bpf/libbpf.h	/^	int prog_cnt;$/;"	m	struct:bpf_object_subskeleton
prog_cnt	libbpf.h	/^	int prog_cnt;$/;"	m	struct:bpf_object_skeleton
prog_cnt	libbpf.h	/^	int prog_cnt;$/;"	m	struct:bpf_object_subskeleton
prog_contains_insn	libbpf.c	/^static bool prog_contains_insn(const struct bpf_program *prog, size_t insn_idx)$/;"	f	file:
prog_fd	bpf.h	/^	int prog_fd;$/;"	m	struct:bpf_prog_test_run_attr
prog_fd	build/usr/include/bpf/bpf.h	/^	int prog_fd;$/;"	m	struct:bpf_prog_test_run_attr
prog_fd	build/usr/include/bpf/libbpf.h	/^	int prog_fd;$/;"	m	struct:bpf_tc_opts
prog_fd	build/usr/include/bpf/skel_internal.h	/^	int prog_fd;$/;"	m	struct:bpf_prog_desc
prog_fd	gen_loader.c	/^	__u32 prog_fd[MAX_USED_PROGS];$/;"	m	struct:loader_stack	file:
prog_fd	libbpf.h	/^	int prog_fd;$/;"	m	struct:bpf_tc_opts
prog_fd	skel_internal.h	/^	int prog_fd;$/;"	m	struct:bpf_prog_desc
prog_fd	xsk.c	/^	int prog_fd;$/;"	m	struct:xsk_ctx	file:
prog_flags	bpf.h	/^	__u32 prog_flags;$/;"	m	struct:bpf_load_program_attr
prog_flags	bpf.h	/^	__u32 prog_flags;$/;"	m	struct:bpf_prog_load_opts
prog_flags	build/usr/include/bpf/bpf.h	/^	__u32 prog_flags;$/;"	m	struct:bpf_load_program_attr
prog_flags	build/usr/include/bpf/bpf.h	/^	__u32 prog_flags;$/;"	m	struct:bpf_prog_load_opts
prog_flags	build/usr/include/bpf/libbpf.h	/^	int prog_flags;$/;"	m	struct:bpf_prog_load_attr
prog_flags	libbpf.c	/^	__u32 prog_flags;$/;"	m	struct:bpf_program	file:
prog_flags	libbpf.h	/^	int prog_flags;$/;"	m	struct:bpf_prog_load_attr
prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 prog_id;		\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 prog_id;$/;"	m	struct:bpf_tc_opts
prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 prog_id;$/;"	m	struct:xdp_link_info
prog_id	libbpf.h	/^	__u32 prog_id;		\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
prog_id	libbpf.h	/^	__u32 prog_id;$/;"	m	struct:bpf_tc_opts
prog_id	libbpf.h	/^	__u32 prog_id;$/;"	m	struct:xdp_link_info
prog_ifindex	bpf.h	/^		__u32 prog_ifindex;$/;"	m	union:bpf_load_program_attr::__anon12
prog_ifindex	bpf.h	/^	__u32 prog_ifindex;$/;"	m	struct:bpf_prog_load_opts
prog_ifindex	build/usr/include/bpf/bpf.h	/^		__u32 prog_ifindex;$/;"	m	union:bpf_load_program_attr::__anon30
prog_ifindex	build/usr/include/bpf/bpf.h	/^	__u32 prog_ifindex;$/;"	m	struct:bpf_prog_load_opts
prog_ifindex	libbpf.c	/^	int prog_ifindex;$/;"	m	struct:bpf_program	file:
prog_is_subprog	libbpf.c	/^static bool prog_is_subprog(const struct bpf_object *obj,$/;"	f	file:
prog_needs_vmlinux_btf	libbpf.c	/^static bool prog_needs_vmlinux_btf(struct bpf_program *prog)$/;"	f	file:
prog_prepare_load_fn	build/usr/include/bpf/libbpf.h	/^	libbpf_prog_prepare_load_fn_t prog_prepare_load_fn;$/;"	m	struct:libbpf_prog_handler_opts
prog_prepare_load_fn	libbpf.c	/^	libbpf_prog_prepare_load_fn_t prog_prepare_load_fn;$/;"	m	struct:bpf_sec_def	file:
prog_prepare_load_fn	libbpf.h	/^	libbpf_prog_prepare_load_fn_t prog_prepare_load_fn;$/;"	m	struct:libbpf_prog_handler_opts
prog_setup_fn	build/usr/include/bpf/libbpf.h	/^	libbpf_prog_setup_fn_t prog_setup_fn;$/;"	m	struct:libbpf_prog_handler_opts
prog_setup_fn	libbpf.c	/^	libbpf_prog_setup_fn_t prog_setup_fn;$/;"	m	struct:bpf_sec_def	file:
prog_setup_fn	libbpf.h	/^	libbpf_prog_setup_fn_t prog_setup_fn;$/;"	m	struct:libbpf_prog_handler_opts
prog_skel_sz	build/usr/include/bpf/libbpf.h	/^	int prog_skel_sz; \/* sizeof(struct bpf_prog_skeleton) *\/$/;"	m	struct:bpf_object_skeleton
prog_skel_sz	build/usr/include/bpf/libbpf.h	/^	int prog_skel_sz; \/* sizeof(struct bpf_prog_skeleton) *\/$/;"	m	struct:bpf_object_subskeleton
prog_skel_sz	libbpf.h	/^	int prog_skel_sz; \/* sizeof(struct bpf_prog_skeleton) *\/$/;"	m	struct:bpf_object_skeleton
prog_skel_sz	libbpf.h	/^	int prog_skel_sz; \/* sizeof(struct bpf_prog_skeleton) *\/$/;"	m	struct:bpf_object_subskeleton
prog_type	bpf.h	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_load_program_attr	typeref:enum:bpf_load_program_attr::bpf_prog_type
prog_type	build/usr/include/bpf/bpf.h	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_load_program_attr	typeref:enum:bpf_load_program_attr::bpf_prog_type
prog_type	build/usr/include/bpf/libbpf.h	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_object_open_attr	typeref:enum:bpf_object_open_attr::bpf_prog_type
prog_type	build/usr/include/bpf/libbpf.h	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_prog_load_attr	typeref:enum:bpf_prog_load_attr::bpf_prog_type
prog_type	libbpf.c	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_sec_def	typeref:enum:bpf_sec_def::bpf_prog_type	file:
prog_type	libbpf.h	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_object_open_attr	typeref:enum:bpf_object_open_attr::bpf_prog_type
prog_type	libbpf.h	/^	enum bpf_prog_type prog_type;$/;"	m	struct:bpf_prog_load_attr	typeref:enum:bpf_prog_load_attr::bpf_prog_type
programs	libbpf.c	/^	struct bpf_program *programs;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::bpf_program	file:
progs	build/usr/include/bpf/libbpf.h	/^	struct bpf_prog_skeleton *progs;$/;"	m	struct:bpf_object_skeleton	typeref:struct:bpf_object_skeleton::bpf_prog_skeleton
progs	build/usr/include/bpf/libbpf.h	/^	struct bpf_prog_skeleton *progs;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_prog_skeleton
progs	libbpf.c	/^	struct bpf_program **progs;$/;"	m	struct:bpf_struct_ops	typeref:struct:bpf_struct_ops::bpf_program	file:
progs	libbpf.h	/^	struct bpf_prog_skeleton *progs;$/;"	m	struct:bpf_object_skeleton	typeref:struct:bpf_object_skeleton::bpf_prog_skeleton
progs	libbpf.h	/^	struct bpf_prog_skeleton *progs;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_prog_skeleton
provider	usdt.c	/^	const char *provider;$/;"	m	struct:usdt_note	file:
pt_regs___arm64	bpf_tracing.h	/^struct pt_regs___arm64 {$/;"	s
pt_regs___arm64	build/usr/include/bpf/bpf_tracing.h	/^struct pt_regs___arm64 {$/;"	s
pt_regs___s390	bpf_tracing.h	/^struct pt_regs___s390 {$/;"	s
pt_regs___s390	build/usr/include/bpf/bpf_tracing.h	/^struct pt_regs___s390 {$/;"	s
ptr_data	btf_dump.c	/^union ptr_data {$/;"	u	file:
ptr_is_aligned	btf_dump.c	/^static bool ptr_is_aligned(const struct btf *btf, __u32 type_id,$/;"	f	file:
ptr_sz	btf.c	/^	int ptr_sz;$/;"	m	struct:btf	file:
ptr_sz	btf_dump.c	/^	int ptr_sz;$/;"	m	struct:btf_dump	file:
ptr_to_u64	bpf.c	/^static inline __u64 ptr_to_u64(const void *ptr)$/;"	f	file:
ptr_to_u64	btf.c	/^static inline __u64 ptr_to_u64(const void *ptr)$/;"	f	file:
ptr_to_u64	libbpf.c	/^static inline __u64 ptr_to_u64(const void *ptr)$/;"	f	file:
qdisc_config_t	netlink.c	/^typedef int (*qdisc_config_t)(struct libbpf_nla_req *req);$/;"	t	file:
queue_id	xsk.c	/^	__u32 queue_id;$/;"	m	struct:xsk_ctx	file:
raw_data	btf.c	/^	void *raw_data;$/;"	m	struct:btf	file:
raw_data	linker.c	/^	void *raw_data;$/;"	m	struct:dst_sec	file:
raw_data_swapped	btf.c	/^	void *raw_data_swapped;$/;"	m	struct:btf	file:
raw_jited_linfo	bpf_prog_linfo.c	/^	void *raw_jited_linfo;$/;"	m	struct:bpf_prog_linfo	file:
raw_len	relo_core.h	/^	int raw_len;$/;"	m	struct:bpf_core_spec
raw_linfo	bpf_prog_linfo.c	/^	void *raw_linfo;$/;"	m	struct:bpf_prog_linfo	file:
raw_size	btf.c	/^	__u32 raw_size;$/;"	m	struct:btf	file:
raw_spec	relo_core.h	/^	int raw_spec[BPF_CORE_SPEC_MAX_LEN];$/;"	m	struct:bpf_core_spec
real_name	libbpf.c	/^	char *real_name;$/;"	m	struct:bpf_map	file:
realloc_data_buf	gen_loader.c	/^static int realloc_data_buf(struct bpf_gen *gen, __u32 size)$/;"	f	file:
realloc_insn_buf	gen_loader.c	/^static int realloc_insn_buf(struct bpf_gen *gen, __u32 size)$/;"	f	file:
rec_cnt	linker.c	/^	size_t rec_cnt;$/;"	m	struct:btf_ext_sec_data	file:
rec_size	bpf_prog_linfo.c	/^	__u32 rec_size;$/;"	m	struct:bpf_prog_linfo	file:
rec_size	libbpf_internal.h	/^	__u32 rec_size;$/;"	m	struct:btf_ext_info
rec_sz	linker.c	/^	__u32 rec_sz;$/;"	m	struct:btf_ext_sec_data	file:
record_relo_core	libbpf.c	/^static int record_relo_core(struct bpf_program *prog,$/;"	f	file:
recs	linker.c	/^	void *recs;$/;"	m	struct:btf_ext_sec_data	file:
ref	bpf_gen_internal.h	/^	int ref;$/;"	m	struct:ksym_desc
ref_ctr_offset	build/usr/include/bpf/libbpf.h	/^	size_t ref_ctr_offset;$/;"	m	struct:bpf_uprobe_opts
ref_ctr_offset	libbpf.h	/^	size_t ref_ctr_offset;$/;"	m	struct:bpf_uprobe_opts
refcount	xsk.c	/^	int refcount;$/;"	m	struct:xsk_ctx	file:
refcount	xsk.c	/^	int refcount;$/;"	m	struct:xsk_umem	file:
referenced	btf_dump.c	/^	__u8 referenced: 1;$/;"	m	struct:btf_dump_type_aux_state	file:
reg_off	build/usr/include/bpf/usdt.bpf.h	/^	short reg_off;$/;"	m	struct:__bpf_usdt_arg_spec
reg_off	usdt.bpf.h	/^	short reg_off;$/;"	m	struct:__bpf_usdt_arg_spec
reg_off	usdt.c	/^	short reg_off;$/;"	m	struct:usdt_arg_spec	file:
reg_off	usdt.c	1187;"	d	file:
reg_off	usdt.c	1200;"	d	file:
rel_ip	usdt.c	/^	long rel_ip;$/;"	m	struct:usdt_target	file:
relaxed_core_relocs	build/usr/include/bpf/libbpf.h	/^	bool relaxed_core_relocs;$/;"	m	struct:bpf_object_open_opts
relaxed_core_relocs	libbpf.h	/^	bool relaxed_core_relocs;$/;"	m	struct:bpf_object_open_opts
relaxed_maps	build/usr/include/bpf/libbpf.h	/^	bool relaxed_maps;$/;"	m	struct:bpf_object_open_opts
relaxed_maps	libbpf.h	/^	bool relaxed_maps;$/;"	m	struct:bpf_object_open_opts
relo_cnt	bpf_gen_internal.h	/^	int relo_cnt;$/;"	m	struct:bpf_gen
relo_kind	relo_core.h	/^	enum bpf_core_relo_kind relo_kind;$/;"	m	struct:bpf_core_spec	typeref:enum:bpf_core_spec::bpf_core_relo_kind
reloc_desc	libbpf.c	/^	struct reloc_desc *reloc_desc;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::reloc_desc	file:
reloc_desc	libbpf.c	/^struct reloc_desc {$/;"	s	file:
reloc_prog_func_and_line_info	libbpf.c	/^reloc_prog_func_and_line_info(const struct bpf_object *obj,$/;"	f	file:
reloc_type	libbpf.c	/^enum reloc_type {$/;"	g	file:
relos	bpf_gen_internal.h	/^	struct ksym_relo_desc *relos;$/;"	m	struct:bpf_gen	typeref:struct:bpf_gen::ksym_relo_desc
remap_type_id	linker.c	/^static int remap_type_id(__u32 *type_id, void *ctx)$/;"	f	file:
remove_kprobe_event_legacy	libbpf.c	/^static int remove_kprobe_event_legacy(const char *probe_name, bool retprobe)$/;"	f	file:
remove_uprobe_event_legacy	libbpf.c	/^static inline int remove_uprobe_event_legacy(const char *probe_name, bool retprobe)$/;"	f	file:
repeat	bpf.h	/^	int repeat;$/;"	m	struct:bpf_prog_test_run_attr
repeat	bpf.h	/^	int repeat;$/;"	m	struct:bpf_test_run_opts
repeat	build/usr/include/bpf/bpf.h	/^	int repeat;$/;"	m	struct:bpf_prog_test_run_attr
repeat	build/usr/include/bpf/bpf.h	/^	int repeat;$/;"	m	struct:bpf_test_run_opts
replace_prog_fd	bpf.h	/^	int replace_prog_fd;$/;"	m	struct:bpf_prog_attach_opts
replace_prog_fd	build/usr/include/bpf/bpf.h	/^	int replace_prog_fd;$/;"	m	struct:bpf_prog_attach_opts
req_tail	nlattr.h	/^static inline struct nlattr *req_tail(struct libbpf_nla_req *req)$/;"	f
res	libbpf.c	/^	enum kern_feature_result res;$/;"	m	struct:kern_feature_desc	typeref:enum:kern_feature_desc::kern_feature_result	file:
resolve_full_path	libbpf.c	/^static int resolve_full_path(const char *file, char *result, size_t result_sz)$/;"	f	file:
resolve_func_ptr	libbpf.c	/^resolve_func_ptr(const struct btf *btf, __u32 id, __u32 *res_id)$/;"	f	file:
resolve_fwd_id	btf.c	/^static uint32_t resolve_fwd_id(struct btf_dedup *d, uint32_t type_id)$/;"	f	file:
resolve_kprobe_multi_cb	libbpf.c	/^resolve_kprobe_multi_cb(unsigned long long sym_addr, char sym_type,$/;"	f	file:
resolve_type_id	btf.c	/^static inline __u32 resolve_type_id(struct btf_dedup *d, __u32 type_id)$/;"	f	file:
retprobe	build/usr/include/bpf/libbpf.h	/^	bool retprobe;$/;"	m	struct:bpf_kprobe_multi_opts
retprobe	build/usr/include/bpf/libbpf.h	/^	bool retprobe;$/;"	m	struct:bpf_kprobe_opts
retprobe	build/usr/include/bpf/libbpf.h	/^	bool retprobe;$/;"	m	struct:bpf_uprobe_opts
retprobe	libbpf.h	/^	bool retprobe;$/;"	m	struct:bpf_kprobe_multi_opts
retprobe	libbpf.h	/^	bool retprobe;$/;"	m	struct:bpf_kprobe_opts
retprobe	libbpf.h	/^	bool retprobe;$/;"	m	struct:bpf_uprobe_opts
retval	bpf.h	/^	__u32 retval;        \/* out: return code of the BPF program *\/$/;"	m	struct:bpf_prog_test_run_attr
retval	bpf.h	/^	__u32 retval;        \/* out: return code of the BPF program *\/$/;"	m	struct:bpf_test_run_opts
retval	build/usr/include/bpf/bpf.h	/^	__u32 retval;        \/* out: return code of the BPF program *\/$/;"	m	struct:bpf_prog_test_run_attr
retval	build/usr/include/bpf/bpf.h	/^	__u32 retval;        \/* out: return code of the BPF program *\/$/;"	m	struct:bpf_test_run_opts
reused	libbpf.c	/^	bool reused;$/;"	m	struct:bpf_map	file:
ring	ringbuf.c	/^struct ring {$/;"	s	file:
ring_buffer	ringbuf.c	/^struct ring_buffer {$/;"	s	file:
ring_buffer__add	ringbuf.c	/^int ring_buffer__add(struct ring_buffer *rb, int map_fd,$/;"	f
ring_buffer__consume	ringbuf.c	/^int ring_buffer__consume(struct ring_buffer *rb)$/;"	f
ring_buffer__epoll_fd	ringbuf.c	/^int ring_buffer__epoll_fd(const struct ring_buffer *rb)$/;"	f
ring_buffer__free	ringbuf.c	/^void ring_buffer__free(struct ring_buffer *rb)$/;"	f
ring_buffer__new	ringbuf.c	/^ring_buffer__new(int map_fd, ring_buffer_sample_fn sample_cb, void *ctx,$/;"	f
ring_buffer__poll	ringbuf.c	/^int ring_buffer__poll(struct ring_buffer *rb, int timeout_ms)$/;"	f
ring_buffer_opts	build/usr/include/bpf/libbpf.h	/^struct ring_buffer_opts {$/;"	s
ring_buffer_opts	libbpf.h	/^struct ring_buffer_opts {$/;"	s
ring_buffer_opts__last_field	build/usr/include/bpf/libbpf.h	1251;"	d
ring_buffer_opts__last_field	libbpf.h	1251;"	d
ring_buffer_sample_fn	build/usr/include/bpf/libbpf.h	/^typedef int (*ring_buffer_sample_fn)(void *ctx, void *data, size_t size);$/;"	t
ring_buffer_sample_fn	libbpf.h	/^typedef int (*ring_buffer_sample_fn)(void *ctx, void *data, size_t size);$/;"	t
ring_cnt	ringbuf.c	/^	int ring_cnt;$/;"	m	struct:ring_buffer	file:
ringbuf_process_ring	ringbuf.c	/^static int64_t ringbuf_process_ring(struct ring* r)$/;"	f	file:
ringbuf_unmap_ring	ringbuf.c	/^static void ringbuf_unmap_ring(struct ring_buffer *rb, struct ring *r)$/;"	f	file:
rings	ringbuf.c	/^	struct ring *rings;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::ring	file:
root_type_id	relo_core.h	/^	__u32 root_type_id;$/;"	m	struct:bpf_core_spec
roundup_len	ringbuf.c	/^static inline int roundup_len(__u32 len)$/;"	f	file:
rv_s8	usdt.c	15;"	d	file:
rx	xsk.c	/^	struct xdp_ring_offset_v1 rx;$/;"	m	struct:xdp_mmap_offsets_v1	typeref:struct:xdp_mmap_offsets_v1::xdp_ring_offset_v1	file:
rx	xsk.c	/^	struct xsk_ring_cons *rx;$/;"	m	struct:xsk_socket	typeref:struct:xsk_socket::xsk_ring_cons	file:
rx_ring_setup_done	xsk.c	/^	bool rx_ring_setup_done;$/;"	m	struct:xsk_umem	file:
rx_size	build/usr/include/bpf/xsk.h	/^	__u32 rx_size;$/;"	m	struct:xsk_socket_config
rx_size	xsk.h	/^	__u32 rx_size;$/;"	m	struct:xsk_socket_config
sample_cb	build/usr/include/bpf/libbpf.h	/^			perf_buffer_sample_fn sample_cb;$/;"	m	struct:perf_buffer_opts::__anon23::__anon24
sample_cb	libbpf.c	/^	perf_buffer_sample_fn sample_cb;$/;"	m	struct:perf_buffer	file:
sample_cb	libbpf.c	/^	perf_buffer_sample_fn sample_cb;$/;"	m	struct:perf_buffer_params	file:
sample_cb	libbpf.h	/^			perf_buffer_sample_fn sample_cb;$/;"	m	struct:perf_buffer_opts::__anon5::__anon6
sample_cb	ringbuf.c	/^	ring_buffer_sample_fn sample_cb;$/;"	m	struct:ring	file:
sample_id	libbpf.c	/^	uint64_t sample_id;$/;"	m	struct:perf_sample_lost	file:
sanitize_pin_path	libbpf.c	/^static void sanitize_pin_path(char *s)$/;"	f	file:
sanity_check_usdt_elf	usdt.c	/^static int sanity_check_usdt_elf(Elf *elf, const char *path)$/;"	f	file:
scn	linker.c	/^	Elf_Scn *scn;$/;"	m	struct:dst_sec	file:
scn	linker.c	/^	Elf_Scn *scn;$/;"	m	struct:src_sec	file:
sec	libbpf.c	/^	char *sec;$/;"	m	struct:bpf_sec_def	file:
sec_btf_id	libbpf.c	/^	int sec_btf_id;$/;"	m	struct:extern_desc	file:
sec_cnt	libbpf.c	/^	int sec_cnt;$/;"	m	struct:elf_state	file:
sec_cnt	libbpf_internal.h	/^	int sec_cnt;$/;"	m	struct:btf_ext_info
sec_cnt	linker.c	/^	int sec_cnt;$/;"	m	struct:bpf_linker	file:
sec_cnt	linker.c	/^	int sec_cnt;$/;"	m	struct:src_obj	file:
sec_content_is_same	linker.c	/^static bool sec_content_is_same(struct dst_sec *dst_sec, struct src_sec *src_sec)$/;"	f	file:
sec_def	libbpf.c	/^	const struct bpf_sec_def *sec_def;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::bpf_sec_def	file:
sec_def_flags	libbpf.c	/^enum sec_def_flags {$/;"	g	file:
sec_def_matches	libbpf.c	/^static bool sec_def_matches(const struct bpf_sec_def *sec_def, const char *sec_name,$/;"	f	file:
sec_id	linker.c	/^	int sec_id;$/;"	m	struct:glob_sym	file:
sec_idx	libbpf.c	/^	int sec_idx;$/;"	m	struct:bpf_map	file:
sec_idx	libbpf.c	/^	size_t sec_idx;$/;"	m	struct:bpf_program	file:
sec_idx	linker.c	/^	size_t sec_idx;$/;"	m	struct:dst_sec	file:
sec_idx	linker.c	/^	size_t sec_idx;$/;"	m	struct:src_sec	file:
sec_idxs	libbpf_internal.h	/^	__u32 *sec_idxs;$/;"	m	struct:btf_ext_info
sec_insn_cnt	libbpf.c	/^	size_t sec_insn_cnt;$/;"	m	struct:bpf_program	file:
sec_insn_off	libbpf.c	/^	size_t sec_insn_off;$/;"	m	struct:bpf_program	file:
sec_name	libbpf.c	/^	char *sec_name;$/;"	m	struct:bpf_program	file:
sec_name	linker.c	/^	char *sec_name;$/;"	m	struct:dst_sec	file:
sec_name	linker.c	/^	const char *sec_name;$/;"	m	struct:src_sec	file:
sec_name_off	libbpf_internal.h	/^	__u32	sec_name_off;$/;"	m	struct:btf_ext_info_sec
sec_offset	libbpf.c	/^	size_t sec_offset;$/;"	m	struct:bpf_map	file:
sec_sym_idx	linker.c	/^	int sec_sym_idx;$/;"	m	struct:dst_sec	file:
sec_sz	linker.c	/^	int sec_sz;$/;"	m	struct:dst_sec	file:
sec_type	libbpf.c	/^	enum sec_type sec_type;$/;"	m	struct:elf_sec_desc	typeref:enum:elf_sec_desc::sec_type	file:
sec_type	libbpf.c	/^enum sec_type {$/;"	g	file:
sec_type_id	linker.c	/^	int sec_type_id;$/;"	m	struct:src_sec	file:
sec_var_cnt	linker.c	/^	int sec_var_cnt;$/;"	m	struct:dst_sec	file:
sec_vars	linker.c	/^	struct btf_var_secinfo *sec_vars;$/;"	m	struct:dst_sec	typeref:struct:dst_sec::btf_var_secinfo	file:
secs	libbpf.c	/^	struct elf_sec_desc *secs;$/;"	m	struct:elf_state	typeref:struct:elf_state::elf_sec_desc	file:
secs	linker.c	/^	struct dst_sec *secs;$/;"	m	struct:bpf_linker	typeref:struct:bpf_linker::dst_sec	file:
secs	linker.c	/^	struct src_sec *secs;$/;"	m	struct:src_obj	typeref:struct:src_obj::src_sec	file:
secs_match	linker.c	/^static bool secs_match(struct dst_sec *dst, struct src_sec *src)$/;"	f	file:
section_defs	libbpf.c	/^static const struct bpf_sec_def section_defs[] = {$/;"	v	typeref:struct:bpf_sec_def	file:
section_have_execinstr	libbpf.c	/^static bool section_have_execinstr(struct bpf_object *obj, int idx)$/;"	f	file:
sema_addr	usdt.c	/^	long sema_addr;$/;"	m	struct:usdt_note	file:
sema_off	usdt.c	/^	long sema_off;$/;"	m	struct:usdt_target	file:
set_err	build/usr/include/bpf/skel_internal.h	281;"	d
set_err	build/usr/include/bpf/skel_internal.h	283;"	d
set_err	skel_internal.h	281;"	d
set_err	skel_internal.h	283;"	d
set_kcfg_value_num	libbpf.c	/^static int set_kcfg_value_num(struct extern_desc *ext, void *ext_val,$/;"	f	file:
set_kcfg_value_str	libbpf.c	/^static int set_kcfg_value_str(struct extern_desc *ext, char *ext_val,$/;"	f	file:
set_kcfg_value_tri	libbpf.c	/^static int set_kcfg_value_tri(struct extern_desc *ext, void *ext_val,$/;"	f	file:
shdr	libbpf.c	/^	Elf64_Shdr *shdr;$/;"	m	struct:elf_sec_desc	file:
shdr	linker.c	/^	Elf64_Shdr *shdr;$/;"	m	struct:dst_sec	file:
shdr	linker.c	/^	Elf64_Shdr *shdr;$/;"	m	struct:src_sec	file:
shstrndx	libbpf.c	/^	size_t shstrndx; \/* section index for section name strings *\/$/;"	m	struct:elf_state	file:
shstrs_sec_idx	linker.c	/^	size_t shstrs_sec_idx;$/;"	m	struct:src_obj	file:
size	libbpf.c	/^	uint32_t size;$/;"	m	struct:perf_sample_raw	file:
size_offset	libbpf.c	/^	int	size_offset;	\/* > 0: offset of rec size,$/;"	m	struct:bpf_prog_info_array_desc	file:
size_t	bpf.h	/^	size_t :0;$/;"	m	struct:bpf_link_create_opts
size_t	btf.h	/^	size_t :0;$/;"	m	struct:btf_dedup_opts
size_t	btf.h	/^	size_t :0;$/;"	m	struct:btf_dump_emit_type_decl_opts
size_t	btf.h	/^	size_t :0;$/;"	m	struct:btf_dump_type_data_opts
size_t	build/usr/include/bpf/bpf.h	/^	size_t :0;$/;"	m	struct:bpf_link_create_opts
size_t	build/usr/include/bpf/btf.h	/^	size_t :0;$/;"	m	struct:btf_dedup_opts
size_t	build/usr/include/bpf/btf.h	/^	size_t :0;$/;"	m	struct:btf_dump_emit_type_decl_opts
size_t	build/usr/include/bpf/btf.h	/^	size_t :0;$/;"	m	struct:btf_dump_type_data_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_kprobe_multi_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_kprobe_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_object_open_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_tc_hook
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_tc_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_uprobe_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_usdt_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_xdp_attach_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_xdp_query_opts
size_t	build/usr/include/bpf/libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_xdp_set_link_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_kprobe_multi_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_kprobe_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_object_open_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_tc_hook
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_tc_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_uprobe_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_usdt_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_xdp_attach_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_xdp_query_opts
size_t	libbpf.h	/^	size_t :0;$/;"	m	struct:bpf_xdp_set_link_opts
skb_prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 skb_prog_id;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
skb_prog_id	build/usr/include/bpf/libbpf.h	/^	__u32 skb_prog_id;$/;"	m	struct:xdp_link_info
skb_prog_id	libbpf.h	/^	__u32 skb_prog_id;	\/* output *\/$/;"	m	struct:bpf_xdp_query_opts
skb_prog_id	libbpf.h	/^	__u32 skb_prog_id;$/;"	m	struct:xdp_link_info
skel_alloc	build/usr/include/bpf/skel_internal.h	/^static inline void *skel_alloc(size_t size)$/;"	f
skel_alloc	skel_internal.h	/^static inline void *skel_alloc(size_t size)$/;"	f
skel_closenz	build/usr/include/bpf/skel_internal.h	/^static inline int skel_closenz(int fd)$/;"	f
skel_closenz	skel_internal.h	/^static inline int skel_closenz(int fd)$/;"	f
skel_finalize_map_data	build/usr/include/bpf/skel_internal.h	/^static inline void *skel_finalize_map_data(__u64 *init_val, size_t mmap_sz, int flags, int fd)$/;"	f
skel_finalize_map_data	skel_internal.h	/^static inline void *skel_finalize_map_data(__u64 *init_val, size_t mmap_sz, int flags, int fd)$/;"	f
skel_free	build/usr/include/bpf/skel_internal.h	/^static inline void skel_free(const void *p)$/;"	f
skel_free	build/usr/include/bpf/skel_internal.h	/^static inline void skel_free(void *p)$/;"	f
skel_free	skel_internal.h	/^static inline void skel_free(const void *p)$/;"	f
skel_free	skel_internal.h	/^static inline void skel_free(void *p)$/;"	f
skel_free_map_data	build/usr/include/bpf/skel_internal.h	/^static inline void skel_free_map_data(void *p, __u64 addr, size_t sz)$/;"	f
skel_free_map_data	skel_internal.h	/^static inline void skel_free_map_data(void *p, __u64 addr, size_t sz)$/;"	f
skel_link_create	build/usr/include/bpf/skel_internal.h	/^static inline int skel_link_create(int prog_fd, int target_fd,$/;"	f
skel_link_create	skel_internal.h	/^static inline int skel_link_create(int prog_fd, int target_fd,$/;"	f
skel_map_create	build/usr/include/bpf/skel_internal.h	/^static inline int skel_map_create(enum bpf_map_type map_type,$/;"	f
skel_map_create	skel_internal.h	/^static inline int skel_map_create(enum bpf_map_type map_type,$/;"	f
skel_map_update_elem	build/usr/include/bpf/skel_internal.h	/^static inline int skel_map_update_elem(int fd, const void *key,$/;"	f
skel_map_update_elem	skel_internal.h	/^static inline int skel_map_update_elem(int fd, const void *key,$/;"	f
skel_prep_map_data	build/usr/include/bpf/skel_internal.h	/^static inline void *skel_prep_map_data(const void *val, size_t mmap_sz, size_t val_sz)$/;"	f
skel_prep_map_data	skel_internal.h	/^static inline void *skel_prep_map_data(const void *val, size_t mmap_sz, size_t val_sz)$/;"	f
skel_raw_tracepoint_open	build/usr/include/bpf/skel_internal.h	/^static inline int skel_raw_tracepoint_open(const char *name, int prog_fd)$/;"	f
skel_raw_tracepoint_open	skel_internal.h	/^static inline int skel_raw_tracepoint_open(const char *name, int prog_fd)$/;"	f
skel_sys_bpf	build/usr/include/bpf/skel_internal.h	/^static inline int skel_sys_bpf(enum bpf_cmd cmd, union bpf_attr *attr,$/;"	f
skel_sys_bpf	skel_internal.h	/^static inline int skel_sys_bpf(enum bpf_cmd cmd, union bpf_attr *attr,$/;"	f
skip_anon_defs	btf_dump.c	/^	bool skip_anon_defs;$/;"	m	struct:btf_dump	file:
skip_mods_and_typedefs	libbpf.c	/^skip_mods_and_typedefs(const struct btf *btf, __u32 id, __u32 *res_id)$/;"	f
skip_mods_and_typedefs	relo_core.c	/^skip_mods_and_typedefs(const struct btf *btf, u32 id, u32 *res_id)$/;"	f	file:
skip_names	btf.h	/^	bool skip_names;	\/* skip member\/type names *\/$/;"	m	struct:btf_dump_type_data_opts
skip_names	btf_dump.c	/^	bool skip_names;$/;"	m	struct:btf_dump_data	file:
skip_names	build/usr/include/bpf/btf.h	/^	bool skip_names;	\/* skip member\/type names *\/$/;"	m	struct:btf_dump_type_data_opts
skipped	linker.c	/^	bool skipped;$/;"	m	struct:src_sec	file:
spec	relo_core.h	/^	struct bpf_core_accessor spec[BPF_CORE_SPEC_MAX_LEN];$/;"	m	struct:bpf_core_spec	typeref:struct:bpf_core_spec::bpf_core_accessor
spec	usdt.c	/^	struct usdt_spec spec;$/;"	m	struct:usdt_target	typeref:struct:usdt_target::usdt_spec	file:
spec_cnt	usdt.c	/^	size_t spec_cnt;$/;"	m	struct:bpf_link_usdt	file:
spec_ids	usdt.c	/^	int *spec_ids;$/;"	m	struct:bpf_link_usdt	file:
spec_str	usdt.c	/^	const char *spec_str;$/;"	m	struct:usdt_target	file:
specs_equal_fn	usdt.c	/^static bool specs_equal_fn(const void *key1, const void *key2, void *ctx)$/;"	f	file:
specs_hash_fn	usdt.c	/^static size_t specs_hash_fn(const void *key, void *ctx)$/;"	f	file:
specs_map	usdt.c	/^	struct bpf_map *specs_map;$/;"	m	struct:usdt_manager	typeref:struct:usdt_manager::bpf_map	file:
src	btf.c	/^	const struct btf *src;$/;"	m	struct:btf_pipe	typeref:struct:btf_pipe::btf	file:
src_obj	linker.c	/^struct src_obj {$/;"	s	file:
src_reg_mask	gen_loader.c	/^static __u32 src_reg_mask(void)$/;"	f	file:
src_sec	linker.c	/^struct src_sec {$/;"	s	file:
st_ops	libbpf.c	/^	struct bpf_struct_ops *st_ops;$/;"	m	struct:bpf_map	typeref:struct:bpf_map::bpf_struct_ops	file:
st_ops_data	libbpf.c	/^	Elf_Data *st_ops_data;$/;"	m	struct:elf_state	file:
st_ops_shndx	libbpf.c	/^	int st_ops_shndx;$/;"	m	struct:elf_state	file:
stack_off	gen_loader.c	40;"	d	file:
start	usdt.c	/^	long start;$/;"	m	struct:elf_seg	file:
start_id	btf.c	/^	int start_id;$/;"	m	struct:btf	file:
start_str_off	btf.c	/^	int start_str_off;$/;"	m	struct:btf	file:
str_equal_fn	btf_dump.c	/^static bool str_equal_fn(const void *a, const void *b, void *ctx)$/;"	f	file:
str_has_pfx	libbpf_internal.h	103;"	d
str_has_sfx	libbpf_internal.h	/^static inline bool str_has_sfx(const char *str, const char *sfx)$/;"	f
str_hash	hashmap.h	/^static inline size_t str_hash(const char *s)$/;"	f
str_hash_fn	btf_dump.c	/^static size_t str_hash_fn(const void *key, void *ctx)$/;"	f	file:
str_is_empty	libbpf_internal.h	/^static inline bool str_is_empty(const char *s)$/;"	f
str_off_map	btf.c	/^	struct hashmap *str_off_map; \/* map string offsets from src to dst *\/$/;"	m	struct:btf_pipe	typeref:struct:btf_pipe::hashmap	file:
str_off_visit_fn	libbpf_internal.h	/^typedef int (*str_off_visit_fn)(__u32 *str_off, void *ctx);$/;"	t
strip_mods	btf.h	/^	bool strip_mods;$/;"	m	struct:btf_dump_emit_type_decl_opts
strip_mods	btf_dump.c	/^	bool strip_mods;$/;"	m	struct:btf_dump	file:
strip_mods	build/usr/include/bpf/btf.h	/^	bool strip_mods;$/;"	m	struct:btf_dump_emit_type_decl_opts
strs_data	btf.c	/^	void *strs_data;$/;"	m	struct:btf	file:
strs_data	strset.c	/^	void *strs_data;$/;"	m	struct:strset	file:
strs_data_cap	strset.c	/^	size_t strs_data_cap;$/;"	m	struct:strset	file:
strs_data_len	strset.c	/^	size_t strs_data_len;$/;"	m	struct:strset	file:
strs_data_max_len	strset.c	/^	size_t strs_data_max_len;$/;"	m	struct:strset	file:
strs_dedup_remap_str_off	btf.c	/^static int strs_dedup_remap_str_off(__u32 *str_off_ptr, void *ctx)$/;"	f	file:
strs_deduped	btf.c	/^	bool strs_deduped;$/;"	m	struct:btf	file:
strs_hash	strset.c	/^	struct hashmap *strs_hash;$/;"	m	struct:strset	typeref:struct:strset::hashmap	file:
strs_set	btf.c	/^	struct strset *strs_set;$/;"	m	struct:btf	typeref:struct:btf::strset	file:
strs_set	btf.c	/^	struct strset *strs_set;$/;"	m	struct:btf_dedup	typeref:struct:btf_dedup::strset	file:
strset	strset.c	/^struct strset {$/;"	s	file:
strset__add_str	strset.c	/^int strset__add_str(struct strset *set, const char *s)$/;"	f
strset__data	strset.c	/^const char *strset__data(const struct strset *set)$/;"	f
strset__data_size	strset.c	/^size_t strset__data_size(const struct strset *set)$/;"	f
strset__find_str	strset.c	/^int strset__find_str(struct strset *set, const char *s)$/;"	f
strset__free	strset.c	/^void strset__free(struct strset *set)$/;"	f
strset__new	strset.c	/^struct strset *strset__new(size_t max_data_sz, const char *init_data, size_t init_data_sz)$/;"	f
strset_add_str_mem	strset.c	/^static void *strset_add_str_mem(struct strset *set, size_t add_sz)$/;"	f	file:
strset_equal_fn	strset.c	/^static bool strset_equal_fn(const void *key1, const void *key2, void *ctx)$/;"	f	file:
strset_hash_fn	strset.c	/^static size_t strset_hash_fn(const void *key, void *ctx)$/;"	f	file:
strtab_sec_idx	linker.c	/^	size_t strtab_sec_idx; \/* STRTAB section index *\/$/;"	m	struct:bpf_linker	file:
strtab_strs	linker.c	/^	struct strset *strtab_strs; \/* STRTAB unique strings *\/$/;"	m	struct:bpf_linker	typeref:struct:bpf_linker::strset	file:
strtabidx	libbpf.c	/^	size_t strtabidx;$/;"	m	struct:elf_state	file:
sub_insn_off	libbpf.c	/^	size_t sub_insn_off;$/;"	m	struct:bpf_program	file:
swapped_endian	btf.c	/^	bool swapped_endian;$/;"	m	struct:btf	file:
sym_idx	libbpf.c	/^	int sym_idx;$/;"	m	struct:extern_desc	file:
sym_idx	linker.c	/^	int sym_idx;$/;"	m	struct:glob_sym	file:
sym_is_extern	libbpf.c	/^static bool sym_is_extern(const Elf64_Sym *sym)$/;"	f	file:
sym_is_subprog	libbpf.c	/^static bool sym_is_subprog(const Elf64_Sym *sym, int text_shndx)$/;"	f	file:
sym_map	linker.c	/^	int *sym_map;$/;"	m	struct:src_obj	file:
sym_off	libbpf.c	/^			int sym_off;$/;"	m	struct:reloc_desc::__anon39::__anon40	file:
sym_update_bind	linker.c	/^static void sym_update_bind(Elf64_Sym *sym, int sym_bind)$/;"	f	file:
sym_update_type	linker.c	/^static void sym_update_type(Elf64_Sym *sym, int sym_type)$/;"	f	file:
sym_update_visibility	linker.c	/^static void sym_update_visibility(Elf64_Sym *sym, int sym_vis)$/;"	f	file:
symbols	libbpf.c	/^	Elf_Data *symbols;$/;"	m	struct:elf_state	file:
symbols_shndx	libbpf.c	/^	int symbols_shndx;$/;"	m	struct:elf_state	file:
syms	bpf.h	/^			const char **syms;$/;"	m	struct:bpf_link_create_opts::__anon13::__anon15
syms	build/usr/include/bpf/bpf.h	/^			const char **syms;$/;"	m	struct:bpf_link_create_opts::__anon31::__anon33
syms	build/usr/include/bpf/libbpf.h	/^	const char **syms;$/;"	m	struct:bpf_kprobe_multi_opts
syms	libbpf.h	/^	const char **syms;$/;"	m	struct:bpf_kprobe_multi_opts
symtab_sec_idx	linker.c	/^	size_t symtab_sec_idx; \/* SYMTAB section index *\/$/;"	m	struct:bpf_linker	file:
symtab_sec_idx	linker.c	/^	size_t symtab_sec_idx;$/;"	m	struct:src_obj	file:
sys_bpf	bpf.c	/^static inline int sys_bpf(enum bpf_cmd cmd, union bpf_attr *attr,$/;"	f	file:
sys_bpf_fd	bpf.c	/^static inline int sys_bpf_fd(enum bpf_cmd cmd, union bpf_attr *attr,$/;"	f	file:
sys_bpf_prog_load	bpf.c	/^static inline int sys_bpf_prog_load(union bpf_attr *attr, unsigned int size, int attempts)$/;"	f	file:
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_btf_load_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_link_create_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_link_update_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_map_batch_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_map_create_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_prog_attach_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_prog_bind_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_prog_load_opts
sz	bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_test_run_opts
sz	btf.h	/^		size_t sz;$/;"	m	union:btf_dump_opts::__anon17
sz	btf.h	/^	size_t sz;$/;"	m	struct:btf_dedup_opts
sz	btf.h	/^	size_t sz;$/;"	m	struct:btf_dump_emit_type_decl_opts
sz	btf.h	/^	size_t sz;$/;"	m	struct:btf_dump_type_data_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_btf_load_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_link_create_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_link_update_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_map_batch_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_map_create_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_prog_attach_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_prog_bind_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_prog_load_opts
sz	build/usr/include/bpf/bpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_test_run_opts
sz	build/usr/include/bpf/btf.h	/^		size_t sz;$/;"	m	union:btf_dump_opts::__anon35
sz	build/usr/include/bpf/btf.h	/^	size_t sz;$/;"	m	struct:btf_dedup_opts
sz	build/usr/include/bpf/btf.h	/^	size_t sz;$/;"	m	struct:btf_dump_emit_type_decl_opts
sz	build/usr/include/bpf/btf.h	/^	size_t sz;$/;"	m	struct:btf_dump_type_data_opts
sz	build/usr/include/bpf/libbpf.h	/^			size_t sz;$/;"	m	struct:perf_buffer_raw_opts::__anon25::__anon26
sz	build/usr/include/bpf/libbpf.h	/^		size_t sz;$/;"	m	union:perf_buffer_opts::__anon23
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_iter_attach_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatibility *\/$/;"	m	struct:bpf_object_skeleton
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatibility *\/$/;"	m	struct:bpf_object_subskeleton
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatiblity *\/$/;"	m	struct:gen_loader_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatiblity *\/$/;"	m	struct:ring_buffer_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_kprobe_multi_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_kprobe_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_linker_file_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_linker_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_object_open_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_perf_event_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_tc_hook
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_tc_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_trace_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_tracepoint_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_uprobe_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_usdt_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_xdp_attach_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_xdp_query_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_xdp_set_link_opts
sz	build/usr/include/bpf/libbpf.h	/^	size_t sz;$/;"	m	struct:libbpf_prog_handler_opts
sz	build/usr/include/bpf/skel_internal.h	/^	__u32 sz;$/;"	m	struct:bpf_loader_ctx
sz	hashmap.h	/^	size_t sz;$/;"	m	struct:hashmap
sz	libbpf.c	/^			int sz;$/;"	m	struct:extern_desc::__anon42::__anon43	file:
sz	libbpf.h	/^			size_t sz;$/;"	m	struct:perf_buffer_raw_opts::__anon7::__anon8
sz	libbpf.h	/^		size_t sz;$/;"	m	union:perf_buffer_opts::__anon5
sz	libbpf.h	/^	size_t sz; \/* size of this struct for forward\/backward compatibility *\/$/;"	m	struct:bpf_iter_attach_opts
sz	libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatibility *\/$/;"	m	struct:bpf_object_skeleton
sz	libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatibility *\/$/;"	m	struct:bpf_object_subskeleton
sz	libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatiblity *\/$/;"	m	struct:gen_loader_opts
sz	libbpf.h	/^	size_t sz; \/* size of this struct, for forward\/backward compatiblity *\/$/;"	m	struct:ring_buffer_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_kprobe_multi_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_kprobe_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_linker_file_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_linker_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_object_open_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_perf_event_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_tc_hook
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_tc_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_trace_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_tracepoint_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_uprobe_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_usdt_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_xdp_attach_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_xdp_query_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:bpf_xdp_set_link_opts
sz	libbpf.h	/^	size_t sz;$/;"	m	struct:libbpf_prog_handler_opts
sz	skel_internal.h	/^	__u32 sz;$/;"	m	struct:bpf_loader_ctx
target_btf_id	bpf.h	/^	__u32 target_btf_id;$/;"	m	struct:bpf_link_create_opts
target_btf_id	build/usr/include/bpf/bpf.h	/^	__u32 target_btf_id;$/;"	m	struct:bpf_link_create_opts
target_btf_path	build/usr/include/bpf/libbpf.h	/^	const char *target_btf_path;$/;"	m	struct:bpf_object_load_attr
target_btf_path	libbpf.h	/^	const char *target_btf_path;$/;"	m	struct:bpf_object_load_attr
tc	nlattr.h	/^		struct tcmsg tc;$/;"	m	union:libbpf_nla_req::__anon19	typeref:struct:libbpf_nla_req::__anon19::tcmsg
tc_add_fd_and_name	netlink.c	/^static int tc_add_fd_and_name(struct libbpf_nla_req *req, int fd)$/;"	f	file:
tc_get_tcm_parent	netlink.c	/^static int tc_get_tcm_parent(enum bpf_tc_attach_point attach_point,$/;"	f	file:
tc_qdisc_create_excl	netlink.c	/^static int tc_qdisc_create_excl(struct bpf_tc_hook *hook)$/;"	f	file:
tc_qdisc_delete	netlink.c	/^static int tc_qdisc_delete(struct bpf_tc_hook *hook)$/;"	f	file:
tc_qdisc_modify	netlink.c	/^static int tc_qdisc_modify(struct bpf_tc_hook *hook, int cmd, int flags)$/;"	f	file:
text_shndx	libbpf.c	/^	int text_shndx;$/;"	m	struct:elf_state	file:
tname	libbpf.c	/^	const char *tname;$/;"	m	struct:bpf_struct_ops	file:
tracing	bpf.h	/^		} tracing;$/;"	m	union:bpf_link_create_opts::__anon13	typeref:struct:bpf_link_create_opts::__anon13::__anon16
tracing	build/usr/include/bpf/bpf.h	/^		} tracing;$/;"	m	union:bpf_link_create_opts::__anon31	typeref:struct:bpf_link_create_opts::__anon31::__anon34
tx	xsk.c	/^	struct xdp_ring_offset_v1 tx;$/;"	m	struct:xdp_mmap_offsets_v1	typeref:struct:xdp_mmap_offsets_v1::xdp_ring_offset_v1	file:
tx	xsk.c	/^	struct xsk_ring_prod *tx;$/;"	m	struct:xsk_socket	typeref:struct:xsk_socket::xsk_ring_prod	file:
tx_ring_setup_done	xsk.c	/^	bool tx_ring_setup_done;$/;"	m	struct:xsk_umem	file:
tx_size	build/usr/include/bpf/xsk.h	/^	__u32 tx_size;$/;"	m	struct:xsk_socket_config
tx_size	xsk.h	/^	__u32 tx_size;$/;"	m	struct:xsk_socket_config
type	bpf_helpers.h	/^	unsigned int type;$/;"	m	struct:bpf_map_def
type	build/usr/include/bpf/bpf_helpers.h	/^	unsigned int type;$/;"	m	struct:bpf_map_def
type	build/usr/include/bpf/libbpf.h	/^	unsigned int type;$/;"	m	struct:bpf_map_def
type	libbpf.c	/^			enum kcfg_type type;$/;"	m	struct:extern_desc::__anon42::__anon43	typeref:enum:extern_desc::__anon42::__anon43::kcfg_type	file:
type	libbpf.c	/^	const struct btf_type *type;$/;"	m	struct:bpf_struct_ops	typeref:struct:bpf_struct_ops::btf_type	file:
type	libbpf.c	/^	enum bpf_prog_type type;$/;"	m	struct:bpf_program	typeref:enum:bpf_program::bpf_prog_type	file:
type	libbpf.c	/^	enum extern_type type;$/;"	m	struct:extern_desc	typeref:enum:extern_desc::extern_type	file:
type	libbpf.c	/^	enum reloc_type type;$/;"	m	struct:reloc_desc	typeref:enum:reloc_desc::reloc_type	file:
type	libbpf.h	/^	unsigned int type;$/;"	m	struct:bpf_map_def
type	nlattr.h	/^	uint16_t	type;$/;"	m	struct:libbpf_nla_policy
type_id	libbpf.c	/^			__u32 type_id;$/;"	m	struct:extern_desc::__anon42::__anon44	file:
type_id	libbpf.c	/^	__u32 type_id;$/;"	m	struct:bpf_struct_ops	file:
type_id	libbpf_internal.h	/^	__u32   type_id;$/;"	m	struct:bpf_func_info_min
type_id	relo_core.h	/^	__u32 type_id;		\/* struct\/union type or array element type *\/$/;"	m	struct:bpf_core_accessor
type_id_visit_fn	libbpf_internal.h	/^typedef int (*type_id_visit_fn)(__u32 *type_id, void *ctx);$/;"	t
type_names	btf_dump.c	/^	struct hashmap *type_names;$/;"	m	struct:btf_dump	typeref:struct:btf_dump::hashmap	file:
type_offs	btf.c	/^	__u32 *type_offs;$/;"	m	struct:btf	file:
type_offs_cap	btf.c	/^	size_t type_offs_cap;$/;"	m	struct:btf	file:
type_states	btf_dump.c	/^	struct btf_dump_type_aux_state *type_states;$/;"	m	struct:btf_dump	typeref:struct:btf_dump::btf_dump_type_aux_state	file:
type_states_cap	btf_dump.c	/^	size_t type_states_cap;$/;"	m	struct:btf_dump	file:
typed_dump	btf_dump.c	/^	struct btf_dump_data *typed_dump;$/;"	m	struct:btf_dump	typeref:struct:btf_dump::btf_dump_data	file:
typeless	bpf_gen_internal.h	/^		bool typeless;$/;"	m	union:ksym_desc::__anon1
types_data	btf.c	/^	void *types_data;$/;"	m	struct:btf	file:
types_data_cap	btf.c	/^	size_t types_data_cap; \/* used size stored in hdr->type_len *\/$/;"	m	struct:btf	file:
u32_as_hash_key	libbpf.c	/^static void *u32_as_hash_key(__u32 x)$/;"	f	file:
umem	xsk.c	/^	struct xsk_umem *umem;$/;"	m	struct:xsk_ctx	typeref:struct:xsk_ctx::xsk_umem	file:
umem_area	xsk.c	/^	char *umem_area;$/;"	m	struct:xsk_umem	file:
underlying_btf_id	linker.c	/^	int underlying_btf_id;$/;"	m	struct:glob_sym	file:
unlikely	libbpf_internal.h	83;"	d
uprobe_cnt	usdt.c	/^	size_t uprobe_cnt;$/;"	m	struct:bpf_link_usdt	file:
uprobes	usdt.c	/^	} *uprobes;$/;"	m	struct:bpf_link_usdt	typeref:struct:bpf_link_usdt::__anon20	file:
usdt_arg_spec	usdt.c	/^struct usdt_arg_spec {$/;"	s	file:
usdt_arg_type	usdt.c	/^enum usdt_arg_type {$/;"	g	file:
usdt_cookie	build/usr/include/bpf/libbpf.h	/^	__u64 usdt_cookie;$/;"	m	struct:bpf_usdt_opts
usdt_cookie	build/usr/include/bpf/usdt.bpf.h	/^	__u64 usdt_cookie;$/;"	m	struct:__bpf_usdt_spec
usdt_cookie	libbpf.h	/^	__u64 usdt_cookie;$/;"	m	struct:bpf_usdt_opts
usdt_cookie	usdt.bpf.h	/^	__u64 usdt_cookie;$/;"	m	struct:__bpf_usdt_spec
usdt_cookie	usdt.c	/^	__u64 usdt_cookie;$/;"	m	struct:usdt_spec	file:
usdt_man	libbpf.c	/^	struct usdt_manager *usdt_man;$/;"	m	struct:bpf_object	typeref:struct:bpf_object::usdt_manager	file:
usdt_man	usdt.c	/^	struct usdt_manager *usdt_man;$/;"	m	struct:bpf_link_usdt	typeref:struct:bpf_link_usdt::usdt_manager	file:
usdt_manager	usdt.c	/^struct usdt_manager {$/;"	s	file:
usdt_manager_attach_usdt	usdt.c	/^struct bpf_link *usdt_manager_attach_usdt(struct usdt_manager *man, const struct bpf_program *prog,$/;"	f
usdt_manager_free	usdt.c	/^void usdt_manager_free(struct usdt_manager *man)$/;"	f
usdt_manager_new	usdt.c	/^struct usdt_manager *usdt_manager_new(struct bpf_object *obj)$/;"	f
usdt_note	usdt.c	/^struct usdt_note {$/;"	s	file:
usdt_spec	usdt.c	/^struct usdt_spec {$/;"	s	file:
usdt_target	usdt.c	/^struct usdt_target {$/;"	s	file:
val_off	build/usr/include/bpf/usdt.bpf.h	/^	__u64 val_off;$/;"	m	struct:__bpf_usdt_arg_spec
val_off	usdt.bpf.h	/^	__u64 val_off;$/;"	m	struct:__bpf_usdt_arg_spec
val_off	usdt.c	/^	__u64 val_off;$/;"	m	struct:usdt_arg_spec	file:
validate	relo_core.h	/^	bool validate;$/;"	m	struct:bpf_core_relo_res
validate_map_op	libbpf.c	/^static int validate_map_op(const struct bpf_map *map, size_t key_sz,$/;"	f	file:
validate_nla	nlattr.c	/^static int validate_nla(struct nlattr *nla, int maxtype,$/;"	f	file:
validate_type_id	btf.c	/^static int validate_type_id(int id)$/;"	f	file:
value	hashmap.h	/^	void *value;$/;"	m	struct:hashmap_entry
value_size	bpf.h	/^	__u32 value_size;$/;"	m	struct:bpf_create_map_attr
value_size	bpf_helpers.h	/^	unsigned int value_size;$/;"	m	struct:bpf_map_def
value_size	build/usr/include/bpf/bpf.h	/^	__u32 value_size;$/;"	m	struct:bpf_create_map_attr
value_size	build/usr/include/bpf/bpf_helpers.h	/^	unsigned int value_size;$/;"	m	struct:bpf_map_def
value_size	build/usr/include/bpf/libbpf.h	/^	unsigned int value_size;$/;"	m	struct:bpf_map_def
value_size	libbpf.h	/^	unsigned int value_size;$/;"	m	struct:bpf_map_def
value_size	libbpf_internal.h	/^	__u32 value_size;$/;"	m	struct:btf_map_def
value_type_id	libbpf_internal.h	/^	__u32 value_type_id;$/;"	m	struct:btf_map_def
var_cnt	build/usr/include/bpf/libbpf.h	/^	int var_cnt;$/;"	m	struct:bpf_object_subskeleton
var_cnt	libbpf.h	/^	int var_cnt;$/;"	m	struct:bpf_object_subskeleton
var_idx	linker.c	/^	int var_idx;$/;"	m	struct:glob_sym	file:
var_skel_sz	build/usr/include/bpf/libbpf.h	/^	int var_skel_sz; \/* sizeof(struct bpf_var_skeleton) *\/$/;"	m	struct:bpf_object_subskeleton
var_skel_sz	libbpf.h	/^	int var_skel_sz; \/* sizeof(struct bpf_var_skeleton) *\/$/;"	m	struct:bpf_object_subskeleton
vars	build/usr/include/bpf/libbpf.h	/^	struct bpf_var_skeleton *vars;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_var_skeleton
vars	libbpf.h	/^	struct bpf_var_skeleton *vars;$/;"	m	struct:bpf_object_subskeleton	typeref:struct:bpf_object_subskeleton::bpf_var_skeleton
version	libbpf_internal.h	/^	__u8	version;$/;"	m	struct:btf_ext_header
xdp_flags	build/usr/include/bpf/xsk.h	/^	__u32 xdp_flags;$/;"	m	struct:xsk_socket_config
xdp_flags	xsk.h	/^	__u32 xdp_flags;$/;"	m	struct:xsk_socket_config
xdp_id_md	netlink.c	/^struct xdp_id_md {$/;"	s	file:
xdp_link_info	build/usr/include/bpf/libbpf.h	/^struct xdp_link_info {$/;"	s
xdp_link_info	libbpf.h	/^struct xdp_link_info {$/;"	s
xdp_mmap_offsets_v1	xsk.c	/^struct xdp_mmap_offsets_v1 {$/;"	s	file:
xdp_prog_attached	xsk.c	/^	bool xdp_prog_attached;$/;"	m	struct:xsk_nl_info	file:
xdp_ring_offset_v1	xsk.c	/^struct xdp_ring_offset_v1 {$/;"	s	file:
xsk_cons_nb_avail	build/usr/include/bpf/xsk.h	/^static inline __u32 xsk_cons_nb_avail(struct xsk_ring_cons *r, __u32 nb)$/;"	f
xsk_cons_nb_avail	xsk.h	/^static inline __u32 xsk_cons_nb_avail(struct xsk_ring_cons *r, __u32 nb)$/;"	f
xsk_create_bpf_link	xsk.c	/^static int xsk_create_bpf_link(struct xsk_socket *xsk)$/;"	f	file:
xsk_create_bpf_maps	xsk.c	/^static int xsk_create_bpf_maps(struct xsk_socket *xsk)$/;"	f	file:
xsk_create_ctx	xsk.c	/^static struct xsk_ctx *xsk_create_ctx(struct xsk_socket *xsk,$/;"	f	file:
xsk_create_umem_rings	xsk.c	/^static int xsk_create_umem_rings(struct xsk_umem *umem, int fd,$/;"	f	file:
xsk_create_xsk_struct	xsk.c	/^static int xsk_create_xsk_struct(int ifindex, struct xsk_socket *xsk)$/;"	f	file:
xsk_ctx	xsk.c	/^struct xsk_ctx {$/;"	s	file:
xsk_delete_bpf_maps	xsk.c	/^static void xsk_delete_bpf_maps(struct xsk_socket *xsk)$/;"	f	file:
xsk_destroy_xsk_struct	xsk.c	/^static void xsk_destroy_xsk_struct(struct xsk_socket *xsk)$/;"	f	file:
xsk_get_ctx	xsk.c	/^static struct xsk_ctx *xsk_get_ctx(struct xsk_umem *umem, __u64 netns_cookie, int ifindex, __u32 queue_id)$/;"	f	file:
xsk_get_max_queues	xsk.c	/^static int xsk_get_max_queues(struct xsk_socket *xsk)$/;"	f	file:
xsk_get_mmap_offsets	xsk.c	/^static int xsk_get_mmap_offsets(int fd, struct xdp_mmap_offsets *off)$/;"	f	file:
xsk_init_xdp_res	xsk.c	/^static int xsk_init_xdp_res(struct xsk_socket *xsk,$/;"	f	file:
xsk_link_lookup	xsk.c	/^static int xsk_link_lookup(int ifindex, __u32 *prog_id, int *link_fd)$/;"	f	file:
xsk_load_xdp_prog	xsk.c	/^static int xsk_load_xdp_prog(struct xsk_socket *xsk)$/;"	f	file:
xsk_lookup_bpf_maps	xsk.c	/^static int xsk_lookup_bpf_maps(struct xsk_socket *xsk)$/;"	f	file:
xsk_lookup_xdp_res	xsk.c	/^static int xsk_lookup_xdp_res(struct xsk_socket *xsk, int *xsks_map_fd, int prog_id)$/;"	f	file:
xsk_mmap_offsets_v1	xsk.c	/^static void xsk_mmap_offsets_v1(struct xdp_mmap_offsets *off)$/;"	f	file:
xsk_nl_info	xsk.c	/^struct xsk_nl_info {$/;"	s	file:
xsk_page_aligned	xsk.c	/^static bool xsk_page_aligned(void *buffer)$/;"	f	file:
xsk_probe_bpf_link	xsk.c	/^static bool xsk_probe_bpf_link(void)$/;"	f	file:
xsk_prod_nb_free	build/usr/include/bpf/xsk.h	/^static inline __u32 xsk_prod_nb_free(struct xsk_ring_prod *r, __u32 nb)$/;"	f
xsk_prod_nb_free	xsk.h	/^static inline __u32 xsk_prod_nb_free(struct xsk_ring_prod *r, __u32 nb)$/;"	f
xsk_prog	xsk.c	/^enum xsk_prog {$/;"	g	file:
xsk_put_ctx	xsk.c	/^static void xsk_put_ctx(struct xsk_ctx *ctx, bool unmap)$/;"	f	file:
xsk_ring_cons	build/usr/include/bpf/xsk.h	/^DEFINE_XSK_RING(xsk_ring_cons);$/;"	v
xsk_ring_cons	xsk.h	/^DEFINE_XSK_RING(xsk_ring_cons);$/;"	v
xsk_ring_cons__cancel	build/usr/include/bpf/xsk.h	/^static inline void xsk_ring_cons__cancel(struct xsk_ring_cons *cons, __u32 nb)$/;"	f
xsk_ring_cons__cancel	xsk.h	/^static inline void xsk_ring_cons__cancel(struct xsk_ring_cons *cons, __u32 nb)$/;"	f
xsk_ring_cons__comp_addr	build/usr/include/bpf/xsk.h	/^xsk_ring_cons__comp_addr(const struct xsk_ring_cons *comp, __u32 idx)$/;"	f
xsk_ring_cons__comp_addr	xsk.h	/^xsk_ring_cons__comp_addr(const struct xsk_ring_cons *comp, __u32 idx)$/;"	f
xsk_ring_cons__peek	build/usr/include/bpf/xsk.h	/^static inline __u32 xsk_ring_cons__peek(struct xsk_ring_cons *cons, __u32 nb, __u32 *idx)$/;"	f
xsk_ring_cons__peek	xsk.h	/^static inline __u32 xsk_ring_cons__peek(struct xsk_ring_cons *cons, __u32 nb, __u32 *idx)$/;"	f
xsk_ring_cons__release	build/usr/include/bpf/xsk.h	/^static inline void xsk_ring_cons__release(struct xsk_ring_cons *cons, __u32 nb)$/;"	f
xsk_ring_cons__release	xsk.h	/^static inline void xsk_ring_cons__release(struct xsk_ring_cons *cons, __u32 nb)$/;"	f
xsk_ring_cons__rx_desc	build/usr/include/bpf/xsk.h	/^xsk_ring_cons__rx_desc(const struct xsk_ring_cons *rx, __u32 idx)$/;"	f
xsk_ring_cons__rx_desc	xsk.h	/^xsk_ring_cons__rx_desc(const struct xsk_ring_cons *rx, __u32 idx)$/;"	f
xsk_ring_prod	build/usr/include/bpf/xsk.h	/^DEFINE_XSK_RING(xsk_ring_prod);$/;"	v
xsk_ring_prod	xsk.h	/^DEFINE_XSK_RING(xsk_ring_prod);$/;"	v
xsk_ring_prod__fill_addr	build/usr/include/bpf/xsk.h	/^static inline __u64 *xsk_ring_prod__fill_addr(struct xsk_ring_prod *fill,$/;"	f
xsk_ring_prod__fill_addr	xsk.h	/^static inline __u64 *xsk_ring_prod__fill_addr(struct xsk_ring_prod *fill,$/;"	f
xsk_ring_prod__needs_wakeup	build/usr/include/bpf/xsk.h	/^static inline int xsk_ring_prod__needs_wakeup(const struct xsk_ring_prod *r)$/;"	f
xsk_ring_prod__needs_wakeup	xsk.h	/^static inline int xsk_ring_prod__needs_wakeup(const struct xsk_ring_prod *r)$/;"	f
xsk_ring_prod__reserve	build/usr/include/bpf/xsk.h	/^static inline __u32 xsk_ring_prod__reserve(struct xsk_ring_prod *prod, __u32 nb, __u32 *idx)$/;"	f
xsk_ring_prod__reserve	xsk.h	/^static inline __u32 xsk_ring_prod__reserve(struct xsk_ring_prod *prod, __u32 nb, __u32 *idx)$/;"	f
xsk_ring_prod__submit	build/usr/include/bpf/xsk.h	/^static inline void xsk_ring_prod__submit(struct xsk_ring_prod *prod, __u32 nb)$/;"	f
xsk_ring_prod__submit	xsk.h	/^static inline void xsk_ring_prod__submit(struct xsk_ring_prod *prod, __u32 nb)$/;"	f
xsk_ring_prod__tx_desc	build/usr/include/bpf/xsk.h	/^static inline struct xdp_desc *xsk_ring_prod__tx_desc(struct xsk_ring_prod *tx,$/;"	f
xsk_ring_prod__tx_desc	xsk.h	/^static inline struct xdp_desc *xsk_ring_prod__tx_desc(struct xsk_ring_prod *tx,$/;"	f
xsk_set_bpf_maps	xsk.c	/^static int xsk_set_bpf_maps(struct xsk_socket *xsk)$/;"	f	file:
xsk_set_umem_config	xsk.c	/^static void xsk_set_umem_config(struct xsk_umem_config *cfg,$/;"	f	file:
xsk_set_xdp_socket_config	xsk.c	/^static int xsk_set_xdp_socket_config(struct xsk_socket_config *cfg,$/;"	f	file:
xsk_setup_xdp_prog	xsk.c	/^int xsk_setup_xdp_prog(int ifindex, int *xsks_map_fd)$/;"	f
xsk_socket	xsk.c	/^struct xsk_socket {$/;"	s	file:
xsk_socket__create	xsk.c	/^int xsk_socket__create(struct xsk_socket **xsk_ptr, const char *ifname,$/;"	f
xsk_socket__create_shared	xsk.c	/^int xsk_socket__create_shared(struct xsk_socket **xsk_ptr,$/;"	f
xsk_socket__delete	xsk.c	/^void xsk_socket__delete(struct xsk_socket *xsk)$/;"	f
xsk_socket__fd	xsk.c	/^int xsk_socket__fd(const struct xsk_socket *xsk)$/;"	f
xsk_socket__update_xskmap	xsk.c	/^int xsk_socket__update_xskmap(struct xsk_socket *xsk, int fd)$/;"	f
xsk_socket_config	build/usr/include/bpf/xsk.h	/^struct xsk_socket_config {$/;"	s
xsk_socket_config	xsk.h	/^struct xsk_socket_config {$/;"	s
xsk_umem	xsk.c	/^struct xsk_umem {$/;"	s	file:
xsk_umem__add_offset_to_addr	build/usr/include/bpf/xsk.h	/^static inline __u64 xsk_umem__add_offset_to_addr(__u64 addr)$/;"	f
xsk_umem__add_offset_to_addr	xsk.h	/^static inline __u64 xsk_umem__add_offset_to_addr(__u64 addr)$/;"	f
xsk_umem__create_v0_0_2	xsk.c	/^int xsk_umem__create_v0_0_2(struct xsk_umem **umem_ptr, void *umem_area,$/;"	f
xsk_umem__create_v0_0_4	xsk.c	/^int xsk_umem__create_v0_0_4(struct xsk_umem **umem_ptr, void *umem_area,$/;"	f
xsk_umem__delete	xsk.c	/^int xsk_umem__delete(struct xsk_umem *umem)$/;"	f
xsk_umem__extract_addr	build/usr/include/bpf/xsk.h	/^static inline __u64 xsk_umem__extract_addr(__u64 addr)$/;"	f
xsk_umem__extract_addr	xsk.h	/^static inline __u64 xsk_umem__extract_addr(__u64 addr)$/;"	f
xsk_umem__extract_offset	build/usr/include/bpf/xsk.h	/^static inline __u64 xsk_umem__extract_offset(__u64 addr)$/;"	f
xsk_umem__extract_offset	xsk.h	/^static inline __u64 xsk_umem__extract_offset(__u64 addr)$/;"	f
xsk_umem__fd	xsk.c	/^int xsk_umem__fd(const struct xsk_umem *umem)$/;"	f
xsk_umem__get_data	build/usr/include/bpf/xsk.h	/^static inline void *xsk_umem__get_data(void *umem_area, __u64 addr)$/;"	f
xsk_umem__get_data	xsk.h	/^static inline void *xsk_umem__get_data(void *umem_area, __u64 addr)$/;"	f
xsk_umem_config	build/usr/include/bpf/xsk.h	/^struct xsk_umem_config {$/;"	s
xsk_umem_config	xsk.h	/^struct xsk_umem_config {$/;"	s
xsk_umem_config_v1	xsk.c	/^struct xsk_umem_config_v1 {$/;"	s	file:
xsks_map_fd	xsk.c	/^	int xsks_map_fd;$/;"	m	struct:xsk_ctx	file:
zclose	libbpf.c	141;"	d	file:
zfree	libbpf.c	137;"	d	file:
